{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/views/Onboarding/GetStarted.vue?vue&type=template&id=3766e795&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/views/Onboarding/GetStarted.vue","mtime":1589521074096},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"welcome welcome__step-1\" }, [\n    _c(\"p\", [\n      _vm._v(\n        \"\\n    Kuma has been successfully installed but the cluster is currently empty.\\n    You are only a few steps away from deploying a modern Service Mesh for your\\n    applications!\\n  \"\n      )\n    ]),\n    _c(\"div\", { staticClass: \"app-setup\" }, [\n      _c(\"h3\", { staticClass: \"xl\" }, [\n        _vm._v(\"\\n      Let's set up your app\\n    \")\n      ]),\n      _c(\"div\", { staticClass: \"app-source-check\" }, [\n        (_vm.appSource && _vm.appSource === \"universal\") ||\n        _vm.appSource === \"kubernetes\" ||\n        _vm.appSource === \"k8s\"\n          ? _c(\n              \"div\",\n              { staticClass: \"app-source-check__inner flex items-center\" },\n              [\n                _c(\"div\", { staticClass: \"app-source-check__icon px-4\" }, [\n                  _vm.appSource === \"universal\"\n                    ? _c(\"img\", {\n                        attrs: {\n                          src: require(\"@/assets/images/icon-universal-alt.png?external\"),\n                          alt: \"Kuma Universal Icon\"\n                        }\n                      })\n                    : _vm.appSource === \"kubernetes\" || _vm.appSource === \"k8s\"\n                    ? _c(\"img\", {\n                        attrs: {\n                          src: require(\"@/assets/images/icon-k8s.png?external\"),\n                          alt: \"Kuma Kubernetes Icon\"\n                        }\n                      })\n                    : _vm._e()\n                ]),\n                _c(\"div\", { staticClass: \"app-source-check__content px-4\" }, [\n                  _c(\"p\", [\n                    _vm._v(\"Kuma is running on \" + _vm._s(_vm.appSource))\n                  ])\n                ]),\n                _vm._m(0)\n              ]\n            )\n          : _c(\"div\", { staticClass: \"app-source-check--error\" }, [\n              _c(\"p\", [\n                _vm._v(\"The app was unable to determine Kuma's environment.\")\n              ])\n            ])\n      ]),\n      _vm.tableDataLoadAttempted === false\n        ? _c(\n            \"div\",\n            { staticClass: \"dataplane-loading-state flex -mx-2 mt-8\" },\n            [\n              _c(\n                \"div\",\n                { staticClass: \"px-2\" },\n                [\n                  _c(\"KIcon\", {\n                    attrs: { icon: \"spinner\", size: \"36\", color: \"black\" }\n                  })\n                ],\n                1\n              ),\n              _vm._m(1)\n            ]\n          )\n        : _vm.tableData && _vm.tableDataIsEmpty === false\n        ? _c(\"div\", { staticClass: \"mt-8\" }, [\n            _c(\"h2\", { staticClass: \"xl mb-2 pb-2\" }, [\n              _vm._v(\n                \"\\n        \" +\n                  _vm._s(_vm.dataplaneCountForTitle) +\n                  \" Dataplane(s) found, including:\\n      \"\n              )\n            ]),\n            _c(\n              \"div\",\n              { staticClass: \"data-table-wrapper\" },\n              [\n                _c(\"KTable\", {\n                  attrs: { options: _vm.tableData },\n                  scopedSlots: _vm._u([\n                    {\n                      key: \"status\",\n                      fn: function(ref) {\n                        var rowValue = ref.rowValue\n                        return [\n                          _c(\n                            \"div\",\n                            {\n                              staticClass: \"entity-status\",\n                              class: {\n                                \"is-offline\":\n                                  rowValue === \"Offline\" ||\n                                  rowValue === \"offline\" ||\n                                  rowValue === false\n                              }\n                            },\n                            [\n                              _c(\"span\", { staticClass: \"entity-status__dot\" }),\n                              _c(\n                                \"span\",\n                                { staticClass: \"entity-status__label\" },\n                                [_vm._v(_vm._s(rowValue))]\n                              )\n                            ]\n                          )\n                        ]\n                      }\n                    }\n                  ])\n                })\n              ],\n              1\n            ),\n            _c(\n              \"div\",\n              { staticClass: \"md:flex items-center mt-4\" },\n              [\n                _c(\n                  \"div\",\n                  { staticClass: \"dataplane-global-status\" },\n                  [\n                    _c(\n                      \"KButton\",\n                      {\n                        staticClass: \"mr-2\",\n                        attrs: { appearance: \"primary\" },\n                        on: { click: _vm.reScanForDataplanes }\n                      },\n                      [_vm._v(\"\\n            Refresh\\n          \")]\n                    ),\n                    _vm.overallDpStatus\n                      ? _c(\"span\", [\n                          _vm._v(\"Some dataplanes appear to be offline.\")\n                        ])\n                      : _vm._e()\n                  ],\n                  1\n                ),\n                _c(\n                  \"KButton\",\n                  {\n                    staticClass: \"mr-4\",\n                    attrs: {\n                      to: { name: \"setup-complete\" },\n                      appearance: \"primary\"\n                    }\n                  },\n                  [_vm._v(\"\\n          Next Step\\n        \")]\n                )\n              ],\n              1\n            ),\n            _vm.overallDpStatus\n              ? _c(\n                  \"div\",\n                  { staticClass: \"dataplane-global-status__helper-text mt-8\" },\n                  [\n                    _c(\"h3\", { staticClass: \"xl mb-2 mt-4\" }, [\n                      _vm._v(\"\\n          Offline Dataplanes\\n        \")\n                    ]),\n                    _c(\"p\", [\n                      _vm._v(\n                        \"\\n          This means your dataplane is not connected to the control plane\\n          at the moment. This might be due to a scheduled downtime or a\\n          network partitioning problem.\\n        \"\n                      )\n                    ])\n                  ]\n                )\n              : _vm._e()\n          ])\n        : _c(\"div\", { staticClass: \"dataplane-fallback-wrapper\" }, [\n            _vm._m(2),\n            _c(\"div\", { staticClass: \"dataplane-walkthrough my-4\" }, [\n              (_vm.appSource && _vm.appSource === \"kubernetes\") ||\n              _vm.appSource === \"k8s\"\n                ? _c(\"div\", [\n                    _c(\"h3\", { staticClass: \"xl mb-2\" }, [\n                      _vm._v(\n                        \"\\n            Adding New Dataplanes on Kubernetes\\n          \"\n                      )\n                    ]),\n                    _c(\"p\", { staticClass: \"mb-2\" }, [\n                      _vm._v(\n                        \"\\n            The Dataplane Wizard will walk you through the creation of new\\n            Dataplanes.\\n          \"\n                      )\n                    ]),\n                    _c(\"div\", { staticClass: \"cols\" }, [\n                      _c(\n                        \"div\",\n                        [\n                          _c(\n                            \"KButton\",\n                            {\n                              attrs: {\n                                to: { name: \"kubernetes-dataplane\" },\n                                appearance: \"primary\"\n                              },\n                              nativeOn: {\n                                click: function($event) {\n                                  return _vm.completeOnboarding()\n                                }\n                              }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                Kubernetes Dataplane Wizard\\n              \"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        [\n                          _c(\n                            \"router-link\",\n                            {\n                              attrs: { to: { name: \"global-overview\" } },\n                              nativeOn: {\n                                click: function($event) {\n                                  return _vm.completeOnboarding()\n                                }\n                              }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                Skip to Dashboard\\n              \"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    ])\n                  ])\n                : _c(\"div\", [\n                    _c(\"h3\", { staticClass: \"xl mb-2\" }, [\n                      _vm._v(\n                        \"\\n            Adding New Dataplanes on Universal\\n          \"\n                      )\n                    ]),\n                    _c(\"p\", { staticClass: \"mb-2\" }, [\n                      _vm._v(\n                        \"\\n            The Dataplane Wizard will walk you through the creation of new\\n            Dataplanes.\\n          \"\n                      )\n                    ]),\n                    _c(\"div\", { staticClass: \"cols\" }, [\n                      _c(\n                        \"div\",\n                        [\n                          _c(\n                            \"KButton\",\n                            {\n                              attrs: {\n                                to: { name: \"universal-dataplane\" },\n                                appearance: \"primary\"\n                              }\n                            },\n                            [\n                              _vm._v(\n                                \"\\n                Universal Dataplane Wizard\\n              \"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"div\",\n                        [\n                          _c(\n                            \"router-link\",\n                            { attrs: { to: { name: \"global-overview\" } } },\n                            [\n                              _vm._v(\n                                \"\\n                Skip to Dashboard\\n              \"\n                              )\n                            ]\n                          )\n                        ],\n                        1\n                      )\n                    ])\n                  ])\n            ])\n          ])\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"px-4\" }, [\n      _c(\"img\", {\n        attrs: {\n          src: require(\"@/assets/images/icon-checkmark.svg?external\"),\n          alt: \"Checkmark Icon\"\n        }\n      })\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"px-2\" }, [\n      _c(\"p\", [\n        _vm._v(\"\\n          Waiting for Dataplanes to connect…\\n        \")\n      ])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"dataplane-fallback\" }, [\n      _c(\"div\", { staticClass: \"dataplane-fallback__inner flex -mx-4\" }, [\n        _c(\"div\", { staticClass: \"dataplane-fallback__icon px-4\" }, [\n          _c(\"img\", {\n            attrs: {\n              src: require(\"@/assets/images/icon-dataplane.svg?external\"),\n              alt: \"Dataplane Icon\"\n            }\n          })\n        ]),\n        _c(\"div\", { staticClass: \"dataplane-fallback__content px-4\" }, [\n          _c(\"h3\", { staticClass: \"dataplane-fallback__title mb-2 pb-2\" }, [\n            _vm._v(\"\\n              No Dataplanes detected.\\n            \")\n          ]),\n          _c(\"p\", { staticClass: \"mb-2\" }, [\n            _vm._v(\n              \"\\n              To bring your applications into Kuma Service Mesh,\\n              you need to deploy dataplanes (also known as Sidecar Proxies)\\n              next to them.\\n            \"\n            )\n          ])\n        ])\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}