{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/views/Onboarding/GetStarted.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/views/Onboarding/GetStarted.vue","mtime":1589521074096},{"path":"/Users/ksagar/vueproj/sample/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@mixin styledPanel {\n  background-color: #F2F5F7;\n  padding: var(--spacing-lg);\n  border-radius: 4px;\n  margin-top: var(--spacing-md);\n}\n\n@mixin styledPanelSmall {\n  padding: var(--spacing-sm) var(--spacing-lg);\n  margin-top: var(--spacing-md);\n  margin-bottom: var(--spacing-md);\n  border-radius: 4px;\n}\n\n.app-setup {\n  padding: var(--spacing-md) 0;\n  margin: var(--spacing-md) 0;\n  border-top: 1px solid var(--tblack-10);\n  border-bottom: 1px solid var(--tblack-10);\n}\n\n.app-source-check {\n\n}\n\n.app-source-check--error {\n  @include styledPanelSmall;\n\n  background-color: var(--red-lighter);\n  color: var(--red-dark);\n}\n\n.app-source-check__inner {\n  @include styledPanelSmall;\n\n  background-color: var(--blue-lighter);\n\n  > *:first-child {\n    flex: 0 0 16%;\n  }\n\n  > *:last-child {\n    margin-left: auto;\n  }\n}\n\n.dataplane-fallback-wrapper {\n\n}\n\n.dataplane-fallback {\n  @include styledPanel;\n}\n\n.dataplane-fallback__icon {\n  flex: 0 0 12%;\n\n  img {\n    width: 100%;\n    height: auto;\n  }\n}\n\n.dataplane-fallback__title {\n  border-bottom: 1px solid var(--tblack-10);\n}\n\n.data-table-wrapper {\n  overflow: hidden;\n  border: 1px solid var(--gray-4);\n  background: none;\n  border-radius: 4px;\n\n  .k-table thead {\n    background-color: var(--gray-5);\n    border-top: 0;\n  }\n}\n\n.dataplane-walkthrough {\n\n  p:not(:last-of-type) {\n    margin-bottom: 16px;\n  }\n\n  pre {\n    white-space: pre-wrap;\n  }\n\n  code {\n    @include styledPanel;\n\n    word-break: break-word !important;\n\n    display: block;\n    font-family: var(--font-family-mono);\n  }\n}\n\n.dataplane-loading-state {\n\n}\n\n.dataplane-global-status {\n  color: var(--red-base);\n  font-weight: 500;\n}\n\n.dataplane-global-status__helper-text {\n  border-top: 1px solid var(--tblack-10);\n}\n\n.cols {\n  display: flex;\n  align-items: center;\n  margin: 20px -8px;\n\n  > * {\n    margin: 0 8px;\n  }\n}\n\n@media (min-width: 768px) {\n  .dataplane-global-status {\n    flex: 1;\n  }\n}\n\n@media (max-width: 767px) {\n  .dataplane-global-status {\n    display: block;\n    margin-bottom: var(--spacing-md);\n    padding-bottom: var(--spacing-md);\n    border-bottom: 1px solid #e2e8f0;\n  }\n}\n",{"version":3,"sources":["GetStarted.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"GetStarted.vue","sourceRoot":"src/views/Onboarding","sourcesContent":["<template>\n  <div class=\"welcome welcome__step-1\">\n    <p>\n      Kuma has been successfully installed but the cluster is currently empty.\n      You are only a few steps away from deploying a modern Service Mesh for your\n      applications!\n    </p>\n\n    <div class=\"app-setup\">\n      <h3 class=\"xl\">\n        Let's set up your app\n      </h3>\n\n      <div class=\"app-source-check\">\n        <div\n          v-if=\"appSource\n            && appSource === 'universal'\n            || appSource === 'kubernetes'\n            || appSource === 'k8s'\"\n          class=\"app-source-check__inner flex items-center\"\n        >\n          <div class=\"app-source-check__icon px-4\">\n            <img\n              v-if=\"appSource === 'universal'\"\n              src=\"@/assets/images/icon-universal-alt.png?external\"\n              alt=\"Kuma Universal Icon\"\n            >\n            <img\n              v-else-if=\"appSource === 'kubernetes' || appSource === 'k8s'\"\n              src=\"@/assets/images/icon-k8s.png?external\"\n              alt=\"Kuma Kubernetes Icon\"\n            >\n          </div>\n          <div class=\"app-source-check__content px-4\">\n            <p>Kuma is running on {{ appSource }}</p>\n          </div>\n          <div class=\"px-4\">\n            <img\n              src=\"@/assets/images/icon-checkmark.svg?external\"\n              alt=\"Checkmark Icon\"\n            >\n          </div>\n        </div>\n        <div\n          v-else\n          class=\"app-source-check--error\"\n        >\n          <p>The app was unable to determine Kuma's environment.</p>\n        </div>\n      </div>\n\n      <div\n        v-if=\"tableDataLoadAttempted === false\"\n        class=\"dataplane-loading-state flex -mx-2 mt-8\"\n      >\n        <div class=\"px-2\">\n          <KIcon\n            icon=\"spinner\"\n            size=\"36\"\n            color=\"black\"\n          />\n        </div>\n        <div class=\"px-2\">\n          <p>\n            Waiting for Dataplanes to connect&hellip;\n          </p>\n        </div>\n      </div>\n      <div\n        v-else-if=\"tableData && tableDataIsEmpty === false\"\n        class=\"mt-8\"\n      >\n        <h2 class=\"xl mb-2 pb-2\">\n          {{ dataplaneCountForTitle }} Dataplane(s) found, including:\n        </h2>\n        <div class=\"data-table-wrapper\">\n          <KTable :options=\"tableData\">\n            <template\n              v-slot:status=\"{ rowValue }\"\n            >\n              <div\n                class=\"entity-status\"\n                :class=\"{ 'is-offline': (rowValue === 'Offline' || rowValue === 'offline' || rowValue === false) }\"\n              >\n                <span class=\"entity-status__dot\" />\n                <span class=\"entity-status__label\">{{ rowValue }}</span>\n              </div>\n            </template>\n          </KTable>\n        </div>\n        <div class=\"md:flex items-center mt-4\">\n          <div class=\"dataplane-global-status\">\n            <KButton\n              appearance=\"primary\"\n              class=\"mr-2\"\n              @click=\"reScanForDataplanes\"\n            >\n              Refresh\n            </KButton>\n            <span v-if=\"overallDpStatus\">Some dataplanes appear to be offline.</span>\n          </div>\n          <KButton\n            :to=\"{ name: 'setup-complete' }\"\n            appearance=\"primary\"\n            class=\"mr-4\"\n          >\n            Next Step\n          </KButton>\n        </div>\n        <div\n          v-if=\"overallDpStatus\"\n          class=\"dataplane-global-status__helper-text mt-8\"\n        >\n          <h3 class=\"xl mb-2 mt-4\">\n            Offline Dataplanes\n          </h3>\n          <p>\n            This means your dataplane is not connected to the control plane\n            at the moment. This might be due to a scheduled downtime or a\n            network partitioning problem.\n          </p>\n        </div>\n      </div>\n      <div\n        v-else\n        class=\"dataplane-fallback-wrapper\"\n      >\n        <div class=\"dataplane-fallback\">\n          <div class=\"dataplane-fallback__inner flex -mx-4\">\n            <div class=\"dataplane-fallback__icon px-4\">\n              <img\n                src=\"@/assets/images/icon-dataplane.svg?external\"\n                alt=\"Dataplane Icon\"\n              >\n            </div>\n            <div class=\"dataplane-fallback__content px-4\">\n              <h3 class=\"dataplane-fallback__title mb-2 pb-2\">\n                No Dataplanes detected.\n              </h3>\n              <p class=\"mb-2\">\n                To bring your applications into Kuma Service Mesh,\n                you need to deploy dataplanes (also known as Sidecar Proxies)\n                next to them.\n              </p>\n            </div>\n          </div>\n        </div>\n        <!-- .dataplane-fallback -->\n        <div class=\"dataplane-walkthrough my-4\">\n          <!-- kubernetes instructions -->\n          <div\n            v-if=\"appSource\n              && appSource === 'kubernetes'\n              || appSource === 'k8s'\"\n          >\n            <h3 class=\"xl mb-2\">\n              Adding New Dataplanes on Kubernetes\n            </h3>\n            <p class=\"mb-2\">\n              The Dataplane Wizard will walk you through the creation of new\n              Dataplanes.\n            </p>\n            <div class=\"cols\">\n              <div>\n                <KButton\n                  :to=\"{ name: 'kubernetes-dataplane' }\"\n                  appearance=\"primary\"\n                  @click.native=\"completeOnboarding()\"\n                >\n                  Kubernetes Dataplane Wizard\n                </KButton>\n              </div>\n              <div>\n                <router-link\n                  :to=\"{ name: 'global-overview' }\"\n                  @click.native=\"completeOnboarding()\"\n                >\n                  Skip to Dashboard\n                </router-link>\n              </div>\n            </div>\n          </div>\n          <!-- universal instructions -->\n          <div v-else>\n            <h3 class=\"xl mb-2\">\n              Adding New Dataplanes on Universal\n            </h3>\n            <p class=\"mb-2\">\n              The Dataplane Wizard will walk you through the creation of new\n              Dataplanes.\n            </p>\n            <div class=\"cols\">\n              <div>\n                <KButton\n                  :to=\"{ name: 'universal-dataplane' }\"\n                  appearance=\"primary\"\n                >\n                  Universal Dataplane Wizard\n                </KButton>\n              </div>\n              <div>\n                <router-link :to=\"{ name: 'global-overview' }\">\n                  Skip to Dashboard\n                </router-link>\n              </div>\n            </div>\n          </div>\n\n          <!-- <KButton\n            appearance=\"primary\"\n            class=\"mt-4\"\n            @click=\"reScanForDataplanes()\"\n          >\n            Re-Scan for Dataplanes\n          </KButton> -->\n        </div>\n      </div>\n    </div>\n    <!-- .app-source-check -->\n\n    <!-- <demo-app /> -->\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'\n// eslint-disable-next-line no-unused-vars\nimport { setItemToStorage, getItemFromStorage } from '@/Cache'\n\nexport default {\n  name: 'OnboardingStep1',\n  metaInfo: {\n    title: 'Welcome to Kuma!'\n  },\n  data () {\n    return {\n      appSource: false,\n      appSourceError: false,\n      tableDataLoadDelay: 1500,\n      tableDataIsEmpty: true,\n      tableDataLoadAttempted: false,\n      tableDataDataplaneCount: null,\n      tableData: {\n        headers: [\n          { label: 'Status', key: 'status' },\n          { label: 'Dataplane', key: 'name' },\n          { label: 'Mesh', key: 'mesh' }\n        ],\n        data: []\n      },\n      pageSize: 10\n    }\n  },\n  computed: {\n    dataplaneCountForTitle () {\n      const count = this.tableDataDataplaneCount\n      if (count && count > 10) {\n        return '10+'\n      } else {\n        return count\n      }\n    },\n\n    overallDpStatus () {\n      return this.$store.getters.getAnyDpOffline\n    }\n  },\n  beforeMount () {\n    this.bootstrap()\n  },\n  methods: {\n    bootstrap () {\n      this.isLoading = true\n      this.isEmpty = false\n\n      this.getAppType()\n      this.getDataplaneTableData()\n      this.completeOnboarding()\n    },\n\n    reScanForDataplanes () {\n      this.tableDataIsEmpty = false\n      this.tableDataLoadAttempted = false\n\n      this.getDataplaneTableData()\n    },\n\n    getDataplaneTableData () {\n      const params = {\n        size: this.pageSize\n      }\n\n      this.$store.dispatch('getAllDataplanes', params)\n        .then(() => {\n          const dataplanes = Object.values(this.$store.getters.getDataplanesList)\n\n          if (dataplanes && dataplanes.length > 0) {\n            this.tableDataDataplaneCount = dataplanes.length\n            this.tableData.data = dataplanes\n            this.tableDataLoadAttempted = false\n            this.tableDataIsEmpty = false\n\n            setTimeout(() => {\n              this.tableDataLoadAttempted = true\n            }, this.tableDataLoadDelay)\n          } else {\n            this.tableDataLoadAttempted = true\n            this.tableDataIsEmpty = true\n          }\n        })\n    },\n\n    getAppType () {\n      axios\n        .get(process.env.VUE_APP_KUMA_CONFIG)\n        .then(response => {\n          const kumaEnv = response.data.environment\n\n          if (response.status === 200 && kumaEnv && kumaEnv.length) {\n            this.appSource = kumaEnv\n          } else {\n            this.appSource = null\n          }\n        })\n        .catch(error => {\n          this.appSource = null\n          console.error(error)\n        })\n    },\n\n    completeOnboarding (route) {\n      this.$store.dispatch('updateOnboardingStatus', true)\n\n      setItemToStorage('kumaOnboardingComplete', true)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n@mixin styledPanel {\n  background-color: #F2F5F7;\n  padding: var(--spacing-lg);\n  border-radius: 4px;\n  margin-top: var(--spacing-md);\n}\n\n@mixin styledPanelSmall {\n  padding: var(--spacing-sm) var(--spacing-lg);\n  margin-top: var(--spacing-md);\n  margin-bottom: var(--spacing-md);\n  border-radius: 4px;\n}\n\n.app-setup {\n  padding: var(--spacing-md) 0;\n  margin: var(--spacing-md) 0;\n  border-top: 1px solid var(--tblack-10);\n  border-bottom: 1px solid var(--tblack-10);\n}\n\n.app-source-check {\n\n}\n\n.app-source-check--error {\n  @include styledPanelSmall;\n\n  background-color: var(--red-lighter);\n  color: var(--red-dark);\n}\n\n.app-source-check__inner {\n  @include styledPanelSmall;\n\n  background-color: var(--blue-lighter);\n\n  > *:first-child {\n    flex: 0 0 16%;\n  }\n\n  > *:last-child {\n    margin-left: auto;\n  }\n}\n\n.dataplane-fallback-wrapper {\n\n}\n\n.dataplane-fallback {\n  @include styledPanel;\n}\n\n.dataplane-fallback__icon {\n  flex: 0 0 12%;\n\n  img {\n    width: 100%;\n    height: auto;\n  }\n}\n\n.dataplane-fallback__title {\n  border-bottom: 1px solid var(--tblack-10);\n}\n\n.data-table-wrapper {\n  overflow: hidden;\n  border: 1px solid var(--gray-4);\n  background: none;\n  border-radius: 4px;\n\n  .k-table thead {\n    background-color: var(--gray-5);\n    border-top: 0;\n  }\n}\n\n.dataplane-walkthrough {\n\n  p:not(:last-of-type) {\n    margin-bottom: 16px;\n  }\n\n  pre {\n    white-space: pre-wrap;\n  }\n\n  code {\n    @include styledPanel;\n\n    word-break: break-word !important;\n\n    display: block;\n    font-family: var(--font-family-mono);\n  }\n}\n\n.dataplane-loading-state {\n\n}\n\n.dataplane-global-status {\n  color: var(--red-base);\n  font-weight: 500;\n}\n\n.dataplane-global-status__helper-text {\n  border-top: 1px solid var(--tblack-10);\n}\n\n.cols {\n  display: flex;\n  align-items: center;\n  margin: 20px -8px;\n\n  > * {\n    margin: 0 8px;\n  }\n}\n\n@media (min-width: 768px) {\n  .dataplane-global-status {\n    flex: 1;\n  }\n}\n\n@media (max-width: 767px) {\n  .dataplane-global-status {\n    display: block;\n    margin-bottom: var(--spacing-md);\n    padding-bottom: var(--spacing-md);\n    border-bottom: 1px solid #e2e8f0;\n  }\n}\n</style>\n"]}]}