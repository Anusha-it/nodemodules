{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/views/Shell.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/views/Shell.vue","mtime":1589260598000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport PageHeader from '@/components/Utils/PageHeader.vue'\nimport PageContent from '@/components/Utils/PageContent.vue'\nimport Breadcrumbs from '@/components/Breadcrumbs.vue'\n\nexport default {\n  name: 'Shell',\n  components: {\n    PageHeader,\n    PageContent,\n    Breadcrumbs\n  },\n  computed: {\n    pageTitle () {\n      const title = this.$route.meta.title\n      const mesh = this.$route.params.mesh\n      const dataplane = this.$route.params.dataplane\n      const trafficPermission = this.$route.params.trafficpermission\n      const trafficLog = this.$route.params.trafficlog\n      const trafficRoute = this.$route.params.trafficroute\n      const healthCheck = this.$route.params.healthcheck\n      const trafficTrace = this.$route.params.traffictrace\n\n      let assembled\n\n      if (dataplane) {\n        assembled = `${title} for ${dataplane}`\n      } else if (trafficLog) {\n        assembled = `${title} for ${trafficLog}`\n      } else if (trafficRoute) {\n        assembled = `${title} for ${trafficRoute}`\n      } else if (trafficPermission) {\n        assembled = `${title} for ${trafficPermission}`\n      } else if (healthCheck) {\n        assembled = `${title} for ${healthCheck}`\n      } else if (trafficTrace) {\n        assembled = `${title} for ${trafficTrace}`\n      } else if (mesh) {\n        assembled = `${title} for ${mesh}`\n      } else {\n        assembled = title\n      }\n\n      return assembled\n    }\n  }\n}\n",{"version":3,"sources":["Shell.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Shell.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"overview\">\n    <page-header noflex>\n      <breadcrumbs />\n      <h2 class=\"xxl\">\n        {{ pageTitle }}\n      </h2>\n    </page-header>\n    <page-content>\n      <transition\n        mode=\"out-in\"\n        name=\"fade\"\n      >\n        <router-view />\n      </transition>\n    </page-content>\n  </div>\n</template>\n\n<script>\nimport PageHeader from '@/components/Utils/PageHeader.vue'\nimport PageContent from '@/components/Utils/PageContent.vue'\nimport Breadcrumbs from '@/components/Breadcrumbs.vue'\n\nexport default {\n  name: 'Shell',\n  components: {\n    PageHeader,\n    PageContent,\n    Breadcrumbs\n  },\n  computed: {\n    pageTitle () {\n      const title = this.$route.meta.title\n      const mesh = this.$route.params.mesh\n      const dataplane = this.$route.params.dataplane\n      const trafficPermission = this.$route.params.trafficpermission\n      const trafficLog = this.$route.params.trafficlog\n      const trafficRoute = this.$route.params.trafficroute\n      const healthCheck = this.$route.params.healthcheck\n      const trafficTrace = this.$route.params.traffictrace\n\n      let assembled\n\n      if (dataplane) {\n        assembled = `${title} for ${dataplane}`\n      } else if (trafficLog) {\n        assembled = `${title} for ${trafficLog}`\n      } else if (trafficRoute) {\n        assembled = `${title} for ${trafficRoute}`\n      } else if (trafficPermission) {\n        assembled = `${title} for ${trafficPermission}`\n      } else if (healthCheck) {\n        assembled = `${title} for ${healthCheck}`\n      } else if (trafficTrace) {\n        assembled = `${title} for ${trafficTrace}`\n      } else if (mesh) {\n        assembled = `${title} for ${mesh}`\n      } else {\n        assembled = title\n      }\n\n      return assembled\n    }\n  }\n}\n</script>\n"]}]}