{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/components/Skeletons/DataOverview.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/components/Skeletons/DataOverview.vue","mtime":1589260598000},{"path":"/Users/ksagar/vueproj/sample/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.empty-state-title {\n\n  .card-icon {\n    text-align: center;\n\n    img, svg {\n      display: block;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n}\n\n.data-table-controls {\n  text-align: right;\n  padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n\n  // no arrows on buttons\n  .k-button:after, button:after {\n    display: none !important;\n  }\n}\n\n.info-grid {\n\n  .metric {\n    margin-bottom: 16px;\n  }\n}\n\n.empty-state-wrapper {\n  margin-bottom: 2em;\n}\n\n.entity-tags {\n  display: inline-flex;\n  align-items: stretch;\n  font-size: 12px;\n  background-color: #fff;\n  font-family: var(--font-family-mono);\n\n  &:not(:last-of-type) {\n    margin-right: 0.5rem;\n    margin-bottom: 0.25rem;\n  }\n}\n\n.entity-tags__label {\n  --color: var(--blue-1);\n\n  position: relative;\n  background-color: var(--color);\n  color: #fff;\n  text-transform: uppercase;\n  border-radius: 5px 0 0 5px;\n  padding: 0.15rem 0.5rem;\n  // box-shadow: inset 0 0 0 1px var(--color);\n  box-shadow: inset 0 0 0 1px var(--color);\n}\n\n.entity-tags__label--service,\n.entity-tags__label--protocol {\n  --color: var(--brand-color-6);\n\n  background-color: var(--color);\n  box-shadow: inset 0 0 0 1px var(--color);\n}\n\n.entity-tags__value {\n  background-color: #fff;\n  border-radius: 0 5px 5px 0;\n  padding: 0.15rem 0.5rem 0.15rem 0.75rem;\n  color: #000;\n  font-weight: 500;\n  box-shadow: inset 0 0 0 1px #ccc;\n  // box-shadow: inset 0 0 0 1px currentColor;\n}\n\n.data-overview-table {\n\n}\n\n.micro-table.micro-table {\n  --dp-table-font-size: 14px;\n  --dp-table-padding: 10px;\n\n  th, td {\n    padding: var(--dp-table-padding);\n  }\n}\n\n.k-table {\n  font-size: var(--dp-table-font-size);\n\n  tr {\n    cursor: pointer;\n\n    td:first-of-type {\n      // width: 5%;\n      // text-align: center;\n    }\n  }\n\n  th {\n    background-color: var(--gray-7);\n  }\n\n  thead {\n    border-top: 0 !important;\n    border-bottom-width: 1px !important;\n  }\n\n  &.has-border {\n    border: 1px solid var(--gray-4);\n    border-bottom: 0;\n  }\n\n  .data-table-action-link {\n    display: block;\n    padding: var(--spacing-sm);\n    cursor: pointer;\n    overflow: hidden;\n    padding: 0;\n\n    &.is-active {\n\n    }\n  }\n\n  .action-link__active-state {\n    --size: 18px;\n\n    display: block;\n    width: var(--size);\n    height: var(--size);\n    line-height: var(--size);\n    border-radius: 50%;\n    background-color: var(--logo-green);\n    // margin: 0 auto;\n    margin: 0 0 0 5px;\n    color: #fff;\n    font-size: 13px;\n    text-align: center;\n\n    &:before {\n      display: block;\n    }\n  }\n\n}\n\n@media only screen and (min-width: 841px) {\n  .info-grid {\n    flex-wrap: wrap;\n\n    .metric {\n      flex: 0 0 calc(33.33% - 32px); // gutter = 16px\n    }\n  }\n}\n",{"version":3,"sources":["DataOverview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"DataOverview.vue","sourceRoot":"src/components/Skeletons","sourcesContent":["<template>\n  <div class=\"data-overview\">\n    <!-- controls -->\n    <div class=\"data-table-controls mb-2\">\n      <slot name=\"additionalControls\" />\n      <KButton\n        v-if=\"displayRefreshControl\"\n        class=\"ml-2\"\n        appearance=\"primary\"\n        size=\"small\"\n        :disabled=\"isLoading\"\n        @click=\"$emit('reloadData')\"\n      >\n        <KIcon\n          v-if=\"isLoading\"\n          icon=\"spinner\"\n          color=\"#fff\"\n          size=\"48\"\n        />\n        <span>Refresh</span>\n      </KButton>\n    </div>\n\n    <div\n      v-if=\"isReady\"\n      class=\"data-overview-content\"\n    >\n      <!-- metrics -->\n      <MetricGrid\n        v-if=\"!isLoading && displayMetrics && metricsData\"\n        :metrics=\"metricsData\"\n      />\n\n      <!-- data -->\n      <div\n        v-if=\"displayDataTable && !tableDataIsEmpty && tableData\"\n        class=\"data-overview-table\"\n      >\n        <KTable\n          class=\"micro-table\"\n          :class=\"{ 'data-table-is-hidden' : tableDataIsEmpty, 'has-border': tableHasBorder }\"\n          :options=\"tableDataFiltered\"\n          has-hover\n          @row:click=\"tableRowHandler\"\n        >\n          <!-- status -->\n          <template\n            v-if=\"displayTableDataStatus\"\n            v-slot:status=\"{ rowValue }\"\n          >\n            <div\n              class=\"entity-status\"\n              :class=\"{ 'is-offline': (rowValue.toLowerCase() === 'offline') }\"\n            >\n              <span class=\"entity-status__dot\" />\n              <span class=\"entity-status__label\">{{ rowValue }}</span>\n            </div>\n          </template>\n          <!-- tags -->\n          <template\n            v-slot:tags=\"{ rowValue }\"\n          >\n            <span\n              v-for=\"(item, key) in rowValue\"\n              :key=\"key\"\n              class=\"entity-tags\"\n              :class=\"`entity-tags--${key}`\"\n            >\n              <span\n                class=\"entity-tags__label\"\n                :class=\"`entity-tags__label--${item.label.toLowerCase()}`\"\n              >\n                {{ item.label }}\n              </span>\n              <span\n                class=\"entity-tags__value\"\n                :class=\"`entity-tags__value--${item.value}`\"\n              >\n                {{ item.value }}\n              </span>\n            </span>\n          </template>\n\n          <template\n            slot=\"actions\"\n            slot-scope=\"{ row }\"\n          >\n            <a\n              v-if=\"tableDataFunctionText\"\n              class=\"data-table-action-link\"\n              :class=\"{ 'is-active': ($store.state.selectedTableRow === row.name) }\"\n            >\n              <span\n                v-if=\"$store.state.selectedTableRow === row.name\"\n                class=\"action-link__active-state\"\n              >\n                &#x2713;\n                <span class=\"sr-only\">\n                  Selected\n                </span>\n              </span>\n              <span\n                v-else\n                class=\"action-link__normal-state\"\n              >\n                {{ tableDataFunctionText }}\n              </span>\n            </a>\n          </template>\n        </KTable>\n\n        <slot name=\"pagination\" />\n      </div>\n\n      <!-- empty state if no items are found -->\n      <KEmptyState\n        v-if=\"displayDataTable && tableDataIsEmpty && tableData\"\n        cta-is-hidden\n      >\n        <template slot=\"title\">\n          <div class=\"card-icon mb-3\">\n            <img src=\"~@/assets/images/icon-empty-table.svg?external\">\n          </div>\n          <span v-if=\"emptyState.title\">\n            {{ emptyState.title }}\n          </span>\n          <span v-else>\n            No Items Found\n          </span>\n        </template>\n        <template\n          v-if=\"emptyState.message\"\n          slot=\"message\"\n        >\n          {{ emptyState.message }}\n        </template>\n      </KEmptyState>\n\n      <!-- additional page content -->\n      <div\n        v-if=\"$slots.content\"\n        class=\"data-overview-content mt-6\"\n      >\n        <slot name=\"content\" />\n      </div>\n    </div>\n\n    <!-- loading state -->\n    <KEmptyState\n      v-if=\"isLoading\"\n      cta-is-hidden\n    >\n      <template slot=\"title\">\n        <div class=\"card-icon mb-3\">\n          <KIcon\n            icon=\"spinner\"\n            color=\"rgba(0, 0, 0, 0.1)\"\n            size=\"42\"\n          />\n        </div>\n        Data Loading...\n      </template>\n    </KEmptyState>\n\n    <!-- error has occurred -->\n    <KEmptyState\n      v-if=\"hasError\"\n      cta-is-hidden\n    >\n      <template slot=\"title\">\n        <div class=\"card-icon mb-3\">\n          <KIcon\n            class=\"kong-icon--centered\"\n            color=\"var(--yellow-base)\"\n            icon=\"warning\"\n            size=\"42\"\n          />\n        </div>\n        An error has occurred while trying to load this data.\n      </template>\n    </KEmptyState>\n  </div>\n</template>\n\n<script>\nimport MetricGrid from '@/components/Metrics/MetricGrid'\nimport Pagination from '@/components/Pagination'\n\nexport default {\n  name: 'DataOverview',\n  components: {\n    MetricGrid,\n    Pagination\n  },\n  props: {\n    pageSize: {\n      type: Number,\n      default: 12\n    },\n    displayMetrics: {\n      type: Boolean,\n      default: false\n    },\n    metricsData: {\n      type: Array,\n      default: null\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    hasError: {\n      type: Boolean,\n      default: false\n    },\n    isEmpty: {\n      type: Boolean,\n      default: false\n    },\n    emptyState: {\n      type: Object,\n      default: null\n    },\n    ctaAction: {\n      type: Object,\n      default: () => {}\n    },\n    showCta: {\n      type: Boolean,\n      default: true\n    },\n    displayDataTable: {\n      type: Boolean,\n      default: false\n    },\n    tableData: {\n      type: Object,\n      default: null\n    },\n    tableHasBorder: {\n      type: Boolean,\n      required: false,\n      default: false\n    },\n    tableDataIsEmpty: {\n      type: Boolean,\n      default: false\n    },\n    tableDataActionsLink: {\n      type: String,\n      default: null\n    },\n    tableActionsRouteName: {\n      type: String,\n      default: null\n    },\n    displayTableDataStatus: {\n      type: Boolean,\n      default: true\n    },\n    displayRefreshControl: {\n      type: Boolean,\n      default: true\n    },\n    tableDataRow: {\n      type: String,\n      required: false,\n      default: 'name'\n    },\n    tableDataFunctionText: {\n      type: String,\n      required: false,\n      default: null\n    }\n  },\n  computed: {\n    isReady () {\n      return !this.isEmpty && !this.hasError && !this.isLoading\n    },\n    tableRowCount () {\n      return Object.entries(this.tableData.data).length\n    },\n    pageCount () {\n      const itemCount = Object.entries(this.tableData.data).length\n      const pageSize = this.pageSize\n\n      return Math.ceil(itemCount / pageSize)\n    },\n    tableDataFiltered () {\n      const data = this.tableData.data\n      const headers = this.tableData.headers\n      const newData = { headers, data: [...data] }\n\n      return newData\n    }\n  },\n  methods: {\n    tableRowHandler (e, row, type) {\n      this.$emit('tableAction', {\n        name: row.name,\n        mesh: row.mesh\n      })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.empty-state-title {\n\n  .card-icon {\n    text-align: center;\n\n    img, svg {\n      display: block;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n}\n\n.data-table-controls {\n  text-align: right;\n  padding: var(--spacing-sm) var(--spacing-sm) 0 var(--spacing-sm);\n\n  // no arrows on buttons\n  .k-button:after, button:after {\n    display: none !important;\n  }\n}\n\n.info-grid {\n\n  .metric {\n    margin-bottom: 16px;\n  }\n}\n\n.empty-state-wrapper {\n  margin-bottom: 2em;\n}\n\n.entity-tags {\n  display: inline-flex;\n  align-items: stretch;\n  font-size: 12px;\n  background-color: #fff;\n  font-family: var(--font-family-mono);\n\n  &:not(:last-of-type) {\n    margin-right: 0.5rem;\n    margin-bottom: 0.25rem;\n  }\n}\n\n.entity-tags__label {\n  --color: var(--blue-1);\n\n  position: relative;\n  background-color: var(--color);\n  color: #fff;\n  text-transform: uppercase;\n  border-radius: 5px 0 0 5px;\n  padding: 0.15rem 0.5rem;\n  // box-shadow: inset 0 0 0 1px var(--color);\n  box-shadow: inset 0 0 0 1px var(--color);\n}\n\n.entity-tags__label--service,\n.entity-tags__label--protocol {\n  --color: var(--brand-color-6);\n\n  background-color: var(--color);\n  box-shadow: inset 0 0 0 1px var(--color);\n}\n\n.entity-tags__value {\n  background-color: #fff;\n  border-radius: 0 5px 5px 0;\n  padding: 0.15rem 0.5rem 0.15rem 0.75rem;\n  color: #000;\n  font-weight: 500;\n  box-shadow: inset 0 0 0 1px #ccc;\n  // box-shadow: inset 0 0 0 1px currentColor;\n}\n\n.data-overview-table {\n\n}\n\n.micro-table.micro-table {\n  --dp-table-font-size: 14px;\n  --dp-table-padding: 10px;\n\n  th, td {\n    padding: var(--dp-table-padding);\n  }\n}\n\n.k-table {\n  font-size: var(--dp-table-font-size);\n\n  tr {\n    cursor: pointer;\n\n    td:first-of-type {\n      // width: 5%;\n      // text-align: center;\n    }\n  }\n\n  th {\n    background-color: var(--gray-7);\n  }\n\n  thead {\n    border-top: 0 !important;\n    border-bottom-width: 1px !important;\n  }\n\n  &.has-border {\n    border: 1px solid var(--gray-4);\n    border-bottom: 0;\n  }\n\n  .data-table-action-link {\n    display: block;\n    padding: var(--spacing-sm);\n    cursor: pointer;\n    overflow: hidden;\n    padding: 0;\n\n    &.is-active {\n\n    }\n  }\n\n  .action-link__active-state {\n    --size: 18px;\n\n    display: block;\n    width: var(--size);\n    height: var(--size);\n    line-height: var(--size);\n    border-radius: 50%;\n    background-color: var(--logo-green);\n    // margin: 0 auto;\n    margin: 0 0 0 5px;\n    color: #fff;\n    font-size: 13px;\n    text-align: center;\n\n    &:before {\n      display: block;\n    }\n  }\n\n}\n\n@media only screen and (min-width: 841px) {\n  .info-grid {\n    flex-wrap: wrap;\n\n    .metric {\n      flex: 0 0 calc(33.33% - 32px); // gutter = 16px\n    }\n  }\n}\n</style>\n"]}]}