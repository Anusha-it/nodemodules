{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/components/KLoader.vue?vue&type=style&index=0&id=59f6b35e&lang=scss&scoped=true&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/components/KLoader.vue","mtime":1589345021599},{"path":"/Users/ksagar/vueproj/sample/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.loading-container {\n  display: flex;\n  max-width: 350px;\n  align-items: center;\n  flex-direction: column;\n  .progress {\n    margin-top: 1rem;\n    width: 130%;\n    background-color: #e6e6e6;\n    .progress-bar {\n      height: 5px;\n      background-color: #0d93f2;\n    }\n  }\n}\n",{"version":3,"sources":["KLoader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"KLoader.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"loading-container\">\n    <img src=\"./img.gif\">\n    <div class=\"progress\">\n      <div\n        :style=\"{ width: `${progress}%` }\"\n        class=\"progress-bar\"\n        role=\"progressbar\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      progress: 10\n    }\n  },\n\n  computed: {\n    loading () {\n      return this.$store.state.globalLoading\n    }\n  },\n\n  watch: {\n    loading (newVal) {\n      if (!newVal) {\n        this.progress = 100\n      }\n    }\n  },\n\n  mounted () {\n    const timer = setInterval(() => {\n      if (this.progress >= 100) {\n        clearInterval(timer)\n        this.progress = 100\n      }\n\n      this.progress += Math.ceil(Math.random(10) * 30)\n    }, 150)\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.loading-container {\n  display: flex;\n  max-width: 350px;\n  align-items: center;\n  flex-direction: column;\n  .progress {\n    margin-top: 1rem;\n    width: 130%;\n    background-color: #e6e6e6;\n    .progress-bar {\n      height: 5px;\n      background-color: #0d93f2;\n    }\n  }\n}\n</style>\n"]}]}