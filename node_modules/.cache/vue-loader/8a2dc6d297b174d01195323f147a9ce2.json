{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/components/Utils/LabelList.vue?vue&type=style&index=0&id=16dce5b4&lang=scss&scoped=true&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/components/Utils/LabelList.vue","mtime":1589260598000},{"path":"/Users/ksagar/vueproj/sample/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.label-list-content {\n\n  .kong-card {\n    margin-bottom: 0 !important;\n  }\n}\n\n.label-list {\n\n}\n\n.label-list__items {\n\n  li {\n    display: block;\n    overflow: hidden;\n\n    &:not(:last-of-type) {\n      margin-bottom: var(--spacing-md);\n    }\n  }\n\n  @media screen and (min-width: 1024px) {\n    &.has-columns {\n      column-gap: 10px;\n    }\n\n    &.cols-2 {\n      column-count: 2;\n    }\n\n    &.cols-3 {\n      column-count: 3;\n    }\n  }\n}\n\n.label-list__items__title {\n  font-size: var(--type-sm);\n  font-weight: 500;\n  text-transform: uppercase;\n  color: var(--gray-3);\n}\n\n.label-list__items__value {\n  font-size: var(--type-sm);\n  font-family: var(--font-family-mono);\n}\n\n.tag-cols {\n  display: grid;\n  grid-auto-flow: column dense;\n  grid-gap: 10px;\n  grid-template-columns: repeat(3, 1fr 4fr);\n\n  span {\n    // flex: 1 0 0;\n  }\n}\n\n.tag-cols__label {\n  min-width: 80px;\n  font-weight: 700;\n  text-align: right;\n}\n\n.tag-cols__value {\n\n}\n",{"version":3,"sources":["LabelList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwJA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA","file":"LabelList.vue","sourceRoot":"src/components/Utils","sourcesContent":["<template>\n  <div class=\"label-list\">\n    <div\n      v-if=\"isReady\"\n      class=\"label-list-content\"\n    >\n      <KCard\n        v-if=\"!isLoading && !isEmpty\"\n        :title=\"title\"\n        border-variant=\"noBorder\"\n      >\n        <template slot=\"body\">\n          <ul\n            class=\"label-list__items\"\n            :class=\"colClass\"\n          >\n            <li\n              v-for=\"(value, key) in items\"\n              :key=\"key\"\n            >\n              <h4 class=\"label-list__items__title\">\n                {{ key }}\n              </h4>\n              <!-- tags array -->\n              <p\n                v-if=\"key === 'tags'\"\n                class=\"label-list__items__value\"\n              >\n                <span\n                  v-for=\"(k, v) in value\"\n                  :key=\"k\"\n                  class=\"tag-cols my-2\"\n                >\n                  <span class=\"tag-cols__label\">\n                    {{ v }}:\n                  </span>\n                  <span class=\"tag-cols__value\">\n                    {{ k }}\n                  </span>\n                </span>\n              </p>\n              <!-- basic string value -->\n              <p v-else>\n                {{ value }}\n              </p>\n            </li>\n          </ul>\n        </template>\n      </KCard>\n    </div>\n\n    <!-- loading state -->\n    <KEmptyState\n      v-if=\"isLoading\"\n      cta-is-hidden\n    >\n      <template slot=\"title\">\n        <div class=\"card-icon mb-3\">\n          <KIcon\n            icon=\"spinner\"\n            color=\"rgba(0, 0, 0, 0.1)\"\n            size=\"42\"\n          />\n        </div>\n        Data Loading...\n      </template>\n    </KEmptyState>\n\n    <!-- no data to load -->\n    <KEmptyState\n      v-if=\"isEmpty && !isLoading\"\n      cta-is-hidden\n    >\n      <template slot=\"title\">\n        <div class=\"card-icon mb-3\">\n          <KIcon\n            class=\"kong-icon--centered\"\n            color=\"var(--yellow-base)\"\n            icon=\"warning\"\n            size=\"42\"\n          />\n        </div>\n        There is no data to display.\n      </template>\n    </KEmptyState>\n\n    <!-- error -->\n    <KEmptyState\n      v-if=\"hasError\"\n      cta-is-hidden\n    >\n      <template slot=\"title\">\n        <div class=\"card-icon mb-3\">\n          <KIcon\n            class=\"kong-icon--centered\"\n            color=\"var(--yellow-base)\"\n            icon=\"warning\"\n            size=\"42\"\n          />\n        </div>\n        An error has occurred while trying to load this data.\n      </template>\n    </KEmptyState>\n  </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'LabelList',\n  props: {\n    items: {\n      type: Object,\n      default: null\n    },\n    title: {\n      type: String,\n      default: null\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    hasError: {\n      type: Boolean,\n      default: false\n    },\n    isEmpty: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    isReady () {\n      return !this.isEmpty && !this.hasError && !this.isLoading\n    },\n    colClass () {\n      const len = Object.entries(this.items).length\n\n      if (len > 6) {\n        return 'has-columns cols-2'\n      } else if (len >= 9) {\n        return 'has-columns cols-3'\n      } else {\n        return null\n      }\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.label-list-content {\n\n  .kong-card {\n    margin-bottom: 0 !important;\n  }\n}\n\n.label-list {\n\n}\n\n.label-list__items {\n\n  li {\n    display: block;\n    overflow: hidden;\n\n    &:not(:last-of-type) {\n      margin-bottom: var(--spacing-md);\n    }\n  }\n\n  @media screen and (min-width: 1024px) {\n    &.has-columns {\n      column-gap: 10px;\n    }\n\n    &.cols-2 {\n      column-count: 2;\n    }\n\n    &.cols-3 {\n      column-count: 3;\n    }\n  }\n}\n\n.label-list__items__title {\n  font-size: var(--type-sm);\n  font-weight: 500;\n  text-transform: uppercase;\n  color: var(--gray-3);\n}\n\n.label-list__items__value {\n  font-size: var(--type-sm);\n  font-family: var(--font-family-mono);\n}\n\n.tag-cols {\n  display: grid;\n  grid-auto-flow: column dense;\n  grid-gap: 10px;\n  grid-template-columns: repeat(3, 1fr 4fr);\n\n  span {\n    // flex: 1 0 0;\n  }\n}\n\n.tag-cols__label {\n  min-width: 80px;\n  font-weight: 700;\n  text-align: right;\n}\n\n.tag-cols__value {\n\n}\n</style>\n"]}]}