{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/views/Overview.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/views/Overview.vue","mtime":1589970418420},{"path":"/Users/ksagar/vueproj/sample/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.nopadding {\n  padding: 0;\n}\n\n.floatleft {\n  float: left;\n  margin: 2%;\n}\n.floatright {\n  float: right;\n  margin :2%;\n}\n.fullscreen {\n  height: 100%;\n  position: relative;\n}\n.fullscreen .header {\n  position: absolute;\n  bottom: 0;\n  text-align: center;\n  width: 100%;\n  color: #fff;\n  text-shadow: 0px 0px 2px #000;\n}\n#header {\n  background: rgba(255, 255, 255, .5);\n  padding: 60%;\n  border-spacing: 75px;\n  overflow: hidden;\n  height: 55px;\n  margin-bottom: 30px;\n  color: white;\n  background-image: url(\"./network2.gif\");\n}\n#header img {\n  float: left;\n  box-shadow: none;\n}\n#header ul {\n  list-style: none;\n  float: left;\n  padding-left: 10px;\n  margin-top: 15px;\n}\n#header ul li {\n  float: left;\n  margin-left: 10px;\n  font-size: 20px;\n}\n.nopadding {\n  padding: 0;\n}\n.white {\n  background: #eeeeec;\n  padding: 0;\n // background-size:100% 100%;\n //padding-bottom: 50px;\n}\n.more {\n  text-align: center;\n  font-size: 17px;\n}\n.more a {\n  color: #aaa;\n  text-decoration: none;\n  cursor: pointer;\n}\n.more a:hover {\n  color: rgb(44, 39, 89);\n}\nhtml {\n background-image: url(\"./network2.gif\");\n  background-size: 100%;\n}\n.empty-state-title {\n\n  .card-icon {\n    text-align: center;\n\n    img, svg {\n      display: block;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n}\n",{"version":3,"sources":["Overview.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAueA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Overview.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div\n    class=\"overview\"\n  >\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n    >\n    <div\n      class=\"white nopadding\"\n      style=\"background-size:100% 100%;color:blue;\"\n    >\n      <form-wizard\n        ref=\"wizard\"\n        color=\"#2d518a\"\n        shape=\"circle\"\n        error-color=\"#a94442\"\n        @on-complete=\"onComplete\"\n      >\n        <template\n          slot=\"step\"\n          scope=\"props\"\n        >\n          <wizard-step\n            :key=\"props.tab.title\"\n            :tab=\"props.tab\"\n            :transition=\"props.transition\"\n            :index=\"props.index\"\n          />\n        </template>\n        <h3 slot=\"title\">\n          Please follow the below steps\n        </h3>\n        <tab-content\n          title=\"Onboarding\"\n          icon=\"fa fa-arrow-circle-right\"\n          :before-change=\"validateFirstTab\"\n        >\n          <vue-form-generator\n            ref=\"firstTabForm\"\n            :model=\"model\"\n            :schema=\"firstTabSchema\"\n            :options=\"formOptions\"\n          />\n        </tab-content>\n        <tab-content\n          title=\"Manage Dataplanes\"\n          icon=\"ti-settings\"\n        >\n          <SidebarMenu\n            v-for=\"(menu, i) in menuList.sections\"\n            :key=\"i\"\n            :menu=\"menu\"\n            :trigger-hovering=\"isHovering\"\n            :index=\"i\"\n            :is-last=\"i === lastMenuList\"\n          />\n          <!-- metrics boxes -->\n\n          <FrameSkeleton>\n            <DataOverview\n              :has-error=\"hasError\"\n              :is-loading=\"isLoading\"\n              :is-empty=\"isEmpty\"\n              :empty-state=\"empty_state\"\n              :display-data-table=\"true\"\n              :table-data=\"tableData\"\n              :table-data-is-empty=\"tableDataIsEmpty\"\n              @reloadData=\"loadData\"\n            >\n              <template slot=\"pagination\">\n                <Pagination\n                  :has-previous=\"previous.length > 0\"\n                  :has-next=\"hasNext\"\n                  @next=\"goToNextPage\"\n                  @previous=\"goToPreviousPage\"\n                />\n              </template>\n            </DataOverview>\n          </FrameSkeleton>\n        </tab-content>\n        <template\n          slot=\"footer\"\n          scope=\"props\"\n        >\n          <div class=\"wizard-footer-left\">\n            <wizard-button\n              v-if=\"props.activeTabIndex > 0 && !props.isLastStep\"\n            >\n              Previous\n            </wizard-button>\n          </div>\n          <div class=\"wizard-footer-right\">\n            <wizard-button\n              v-if=\"!props.isLastStep\"\n              class=\"wizard-footer-right\"\n              :style=\"props.fillButtonStyle\"\n              @click.native=\"props.nextTab()\"\n            >\n              Next\n            </wizard-button>\n\n            <wizard-button\n              v-else\n              class=\"wizard-footer-right finish-button\"\n              :style=\"props.fillButtonStyle\"\n              @click.native=\"alert('Done')\"\n            >\n              {{ props.isLastStep ? 'Done' : 'Next' }}\n            </wizard-button>\n          </div>\n        </template>\n      </form-wizard>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapMutations, mapState } from 'vuex'\nimport { getOffset } from '@/helpers'\nimport FrameSkeleton from '@/components/Skeletons/FrameSkeleton'\nimport Pagination from '@/components/Pagination'\n// import PageHeader from '@/components/Utils/PageHeader.vue'\n// import Breadcrumbs from '@/components/Breadcrumbs.vue'\n// import MetricGrid from '@/components/Metrics/MetricGrid.vue'\nimport DataOverview from '@/components/Skeletons/DataOverview.vue'\n// import CardSkeleton from '@/components/Skeletons/CardSkeleton'\n// import KNav from '@/components/Sidebar/KNav'\nimport SidebarMenu from '@/components/Sidebar/SidebarMenu'\n// import CollapseToggle from '@/components/Sidebar/CollapseToggle'\n// import MeshSelector from '@/components/Utils/MeshSelector'\nimport { getItemFromStorage, setItemToStorage } from '@/Cache'\nimport VueFormGenerator from 'vue-form-generator'\nimport { FormWizard, TabContent } from 'vue-form-wizard'\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\nimport '@fortawesome/fontawesome-free/css/all.css'\nexport default {\n  name: 'Overview',\n  metaInfo () {\n    return {\n      title: this.$route.meta.title\n    }\n  },\n  components: {\n    FrameSkeleton,\n    FormWizard,\n    TabContent,\n    Pagination,\n    // PageHeader,\n    // Breadcrumbs,\n    // MetricGrid,\n    DataOverview,\n    // CardSkeleton,\n    SidebarMenu\n    // CollapseToggle\n    // MeshSelector\n  },\n  data () {\n    return {\n      title: 'Please follow the below steps',\n      model: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        streetName: '',\n        streetNumber: '',\n        city: '',\n        country: ''\n      },\n      formOptions: {\n        validationErrorClass: 'has-error',\n        validationSuccessClass: 'has-success',\n        validateAfterChanged: true\n      },\n      firstTabSchema: {\n        fields: [{\n          type: 'input',\n          inputType: 'text',\n          label: 'SID',\n          model: 'firstName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        },\n        {\n          type: 'input',\n          inputType: 'text',\n          label: 'SLID name',\n          model: 'lastName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        },\n        {\n          type: 'input',\n          inputType: 'text',\n          label: 'FID name',\n          model: 'lastName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        }\n        ]\n      },\n      isCollapsed: false,\n      sidebarSavedState: null,\n      toggleWorkspaces: false,\n      hovering: false,\n      isLoading: true,\n      isEmpty: false,\n      hasError: false,\n      tableDataIsEmpty: false,\n      empty_state: {\n        title: 'No Data',\n        message: 'There are no Meshes present.'\n      },\n      tableData: {\n        headers: [\n          { label: 'Mesh', key: 'name' },\n          { label: 'Online Dataplanes', key: 'onlineDpCount' }\n        ],\n        data: []\n      },\n      pageSize: 10,\n      pageOffset: null,\n      next: null,\n      hasNext: false,\n      previous: []\n    }\n  },\n  computed: {\n    ...mapGetters({\n      title: 'getTagline',\n      dpList: 'getDataplanesList',\n      environment: 'getEnvironment'\n    }),\n    ...mapState('sidebar', {\n      menu: state => state.menu\n    }),\n    /**\n     * Main property for items in the sidebar menu. Filters out menu.js items by\n     * RBAC permissions and fetches Kong Admin Plugin routes\n     * @returns {{sections:Array<MenuItem>}}\n     */\n    menuList () {\n      // get routes allowed by rbac\n      // const routes = this.$rbac.filterRoutes(this.perms, this.$router.allRoutes,\n      //   this.currentWorkspace && this.currentWorkspace.name)\n      // const routes = this.$router.allRoutes\n      const filteredMenu = JSON.parse(JSON.stringify(this.menu))\n\n      return filteredMenu\n    },\n    lastMenuList () {\n      return Object.keys(this.menuList.sections).length - 1\n    },\n    meshList () {\n      return this.$store.state.meshes\n    },\n    overviewMetrics () {\n      return [\n        {\n          metric: 'Meshes',\n          value: this.$store.state.totalMeshCount\n        },\n        {\n          metric: 'Dataplanes',\n          value: this.$store.state.totalDataplaneCount\n        },\n        {\n          metric: 'Health Checks',\n          value: this.$store.state.totalHealthCheckCount\n        },\n        {\n          metric: 'Proxy Templates',\n          value: this.$store.state.totalProxyTemplateCount\n        },\n        {\n          metric: 'Traffic Logs',\n          value: this.$store.state.totalTrafficLogCount\n        },\n        {\n          metric: 'Traffic Permissions',\n          value: this.$store.state.totalTrafficPermissionCount\n        },\n        {\n          metric: 'Traffic Routes',\n          value: this.$store.state.totalTrafficRouteCount\n        },\n        {\n          metric: 'Traffic Traces',\n          value: this.$store.state.totalTrafficTraceCount\n        },\n        {\n          metric: 'Fault Injections',\n          value: this.$store.state.totalFaultInjectionCount\n        }\n      ]\n    },\n    dataplaneWizardRoute () {\n      // we change the route to the Dataplane\n      // wizard based on environment.\n      if (this.environment === 'universal') {\n        return { name: 'universal-dataplane' }\n      } else {\n        return { name: 'kubernetes-dataplane' }\n      }\n    }\n  },\n\n  watch: {\n    '$route' (to, from) {\n      this.init()\n    }\n  },\n  mounted () {\n    const sidebarState = getItemFromStorage('sidebarCollapsed')\n    if (document.documentElement.clientWidth <= 900) {\n      this.isCollapsed = true\n    } else {\n      this.isCollapsed = sidebarState || false\n    }\n\n    window.addEventListener('resize', this.handleResize)\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this.handleResize)\n  },\n  beforeMount () {\n    this.init()\n  },\n  methods: {\n    init () {\n      this.getCounts()\n      this.loadData()\n    },\n    isLastStep () {\n      if (this.$ref.wizard) {\n        return this.$ref.wizard.isLastStep\n      }\n\n      return false\n    },\n    onComplete: function () {\n      alert('Yay. Done!')\n    },\n    validateFirstTab: function () {\n      return this.$refs.firstTabForm.validate()\n    },\n    ...mapMutations('sidebar', [\n      'setMenu'\n    ]),\n    handleToggleCollapse () {\n      this.isCollapsed = !this.isCollapsed\n      this.setCollapsedState(this.isCollapsed)\n    },\n    isHovering (a) {\n      this.hovering = a\n    },\n    setCollapsedState (collapsedState) {\n      setItemToStorage('sidebarCollapsed', collapsedState)\n    },\n    handleResize () {\n      const sidebarState = getItemFromStorage('sidebarCollapsed')\n      if (document.documentElement.clientWidth <= 900) {\n        this.isCollapsed = sidebarState || true\n      }\n\n      if (document.documentElement.clientWidth >= 900) {\n        this.isCollapsed = sidebarState || false\n      }\n    },\n    goToPreviousPage () {\n      this.pageOffset = this.previous.pop()\n      this.next = null\n\n      this.loadData()\n    },\n    goToNextPage () {\n      this.previous.push(this.pageOffset)\n      this.pageOffset = this.next\n      this.next = null\n\n      this.loadData()\n    },\n    getCounts () {\n      // total Mesh count\n      this.$store.dispatch('getMeshTotalCount')\n\n      // total Dataplane count\n      this.$store.dispatch('getDataplaneTotalCount')\n\n      // total Health Check count\n      this.$store.dispatch('getHealthCheckTotalCount')\n\n      // total Proxy Template count\n      this.$store.dispatch('getProxyTemplateTotalCount')\n\n      // total Traffic Log count\n      this.$store.dispatch('getTrafficLogTotalCount')\n\n      // total Traffic Permission count\n      this.$store.dispatch('getTrafficPermissionTotalCount')\n\n      // total Traffic Route count\n      this.$store.dispatch('getTrafficRouteTotalCount')\n\n      // total Traffic Trace count\n      this.$store.dispatch('getTrafficTraceTotalCount')\n\n      // total Fault Injection count\n      this.$store.dispatch('getFaultInjectionTotalCount')\n    },\n    loadData () {\n      this.isLoading = true\n      this.isEmpty = false\n\n      // prepare and populate the table data\n      const getMeshData = () => {\n        this.$store.dispatch('getAllDataplanes')\n        const dpList = this.dpList\n\n        const params = {\n          size: this.pageSize,\n          offset: this.pageOffset\n        }\n\n        return this.$api.getAllMeshes(params)\n          .then(response => {\n            const items = response.items\n            const itemStatus = []\n\n            // check to see if the `next` url is present\n            if (response.next) {\n              this.next = getOffset(response.next)\n              this.hasNext = true\n            } else {\n              this.hasNext = false\n            }\n\n            for (let i = 0; i < items.length; i++) {\n              const mesh = items[i].name\n\n              const dpStatus = () => {\n                const totalDpInMesh = dpList.filter(x => x.mesh === mesh).length\n                const onlineDpCount = dpList.filter(x => x.status === 'Online' && x.mesh === mesh).length\n\n                if (totalDpInMesh === 0) {\n                  return 'No Dataplanes'\n                }\n\n                return `${onlineDpCount} of ${totalDpInMesh}`\n              }\n\n              itemStatus.push({\n                name: mesh,\n                onlineDpCount: dpStatus()\n              })\n            }\n\n            if (items && items.length) {\n              this.tableData.data = [...itemStatus]\n              this.tableDataIsEmpty = false\n            } else {\n              this.tableData.data = []\n              this.tableDataIsEmpty = true\n            }\n          })\n          .catch(error => {\n            this.hasError = true\n\n            console.error(error)\n          })\n          .finally(() => {\n            setTimeout(() => {\n              this.isLoading = false\n            }, process.env.VUE_APP_DATA_TIMEOUT)\n          })\n      }\n\n      getMeshData()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.nopadding {\n  padding: 0;\n}\n\n.floatleft {\n  float: left;\n  margin: 2%;\n}\n.floatright {\n  float: right;\n  margin :2%;\n}\n.fullscreen {\n  height: 100%;\n  position: relative;\n}\n.fullscreen .header {\n  position: absolute;\n  bottom: 0;\n  text-align: center;\n  width: 100%;\n  color: #fff;\n  text-shadow: 0px 0px 2px #000;\n}\n#header {\n  background: rgba(255, 255, 255, .5);\n  padding: 60%;\n  border-spacing: 75px;\n  overflow: hidden;\n  height: 55px;\n  margin-bottom: 30px;\n  color: white;\n  background-image: url(\"./network2.gif\");\n}\n#header img {\n  float: left;\n  box-shadow: none;\n}\n#header ul {\n  list-style: none;\n  float: left;\n  padding-left: 10px;\n  margin-top: 15px;\n}\n#header ul li {\n  float: left;\n  margin-left: 10px;\n  font-size: 20px;\n}\n.nopadding {\n  padding: 0;\n}\n.white {\n  background: #eeeeec;\n  padding: 0;\n // background-size:100% 100%;\n //padding-bottom: 50px;\n}\n.more {\n  text-align: center;\n  font-size: 17px;\n}\n.more a {\n  color: #aaa;\n  text-decoration: none;\n  cursor: pointer;\n}\n.more a:hover {\n  color: rgb(44, 39, 89);\n}\nhtml {\n background-image: url(\"./network2.gif\");\n  background-size: 100%;\n}\n.empty-state-title {\n\n  .card-icon {\n    text-align: center;\n\n    img, svg {\n      display: block;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n}\n</style>\n"]}]}