{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/views/Wizard/views/Mesh.vue?vue&type=template&id=1ec68068&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/views/Wizard/views/Mesh.vue","mtime":1589260598000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"wizard\" }, [\n    _c(\n      \"div\",\n      { staticClass: \"wizard__content\" },\n      [\n        _c(\n          \"StepSkeleton\",\n          {\n            attrs: {\n              steps: _vm.steps,\n              \"advance-check\": true,\n              \"sidebar-content\": _vm.sidebarContent,\n              \"footer-enabled\": _vm.scanFound === false,\n              \"next-disabled\": _vm.nextDisabled\n            }\n          },\n          [\n            _c(\n              \"template\",\n              { slot: \"general\" },\n              [\n                _c(\"p\", [\n                  _vm._v(\n                    \"\\n          Welcome to the wizard for creating a new Mesh entity in Kuma.\\n          We will be providing you with a few steps that will get you started.\\n        \"\n                  )\n                ]),\n                _c(\"p\", [\n                  _vm._v(\n                    \"\\n          As you know, the Kuma GUI is read-only, so at the end of this wizard\\n          we will be generating the configuration that you can apply with either\\n          \"\n                  ),\n                  _c(\"code\", [_vm._v(\"kubectl\")]),\n                  _vm._v(\n                    \" (if you are running in Kubernetes mode) or\\n          kumactl / API (if you are running in Universal mode).\\n        \"\n                  )\n                ]),\n                _c(\"h3\", [\n                  _vm._v(\n                    \"\\n          To get started, please fill-in the following information:\\n        \"\n                  )\n                ]),\n                _c(\n                  \"KCard\",\n                  {\n                    staticClass: \"my-6 k-card--small\",\n                    attrs: { title: \"Mesh Information\", \"has-shadow\": \"\" }\n                  },\n                  [\n                    _c(\n                      \"template\",\n                      { slot: \"body\" },\n                      [\n                        _c(\n                          \"FormFragment\",\n                          {\n                            attrs: {\n                              title: \"Mesh name\",\n                              \"for-attr\": \"mesh-name\"\n                            }\n                          },\n                          [\n                            _c(\"input\", {\n                              directives: [\n                                {\n                                  name: \"model\",\n                                  rawName: \"v-model\",\n                                  value: _vm.validate.meshName,\n                                  expression: \"validate.meshName\"\n                                }\n                              ],\n                              staticClass: \"k-input w-100\",\n                              attrs: {\n                                id: \"mesh-name\",\n                                type: \"text\",\n                                placeholder: \"your-mesh-name\",\n                                required: \"\"\n                              },\n                              domProps: { value: _vm.validate.meshName },\n                              on: {\n                                change: function($event) {\n                                  return _vm.updateStorage(\n                                    \"meshName\",\n                                    $event.target.value\n                                  )\n                                },\n                                input: function($event) {\n                                  if ($event.target.composing) {\n                                    return\n                                  }\n                                  _vm.$set(\n                                    _vm.validate,\n                                    \"meshName\",\n                                    $event.target.value\n                                  )\n                                }\n                              }\n                            }),\n                            _vm.vmsg.meshName\n                              ? _c(\"KAlert\", {\n                                  attrs: {\n                                    appearance: \"danger\",\n                                    size: \"small\",\n                                    \"alert-message\": _vm.vmsg.meshName\n                                  }\n                                })\n                              : _vm._e()\n                          ],\n                          1\n                        ),\n                        _c(\"FormFragment\", { attrs: { title: \"Mutual TLS\" } }, [\n                          _c(\"label\", { staticClass: \"k-input-label mx-2\" }, [\n                            _c(\"input\", {\n                              ref: \"mtlsDisabled\",\n                              staticClass: \"k-input mr-2\",\n                              attrs: {\n                                value: \"disabled\",\n                                name: \"mtls\",\n                                type: \"radio\"\n                              },\n                              domProps: {\n                                checked:\n                                  _vm.formConditions.mtlsEnabled === false\n                              },\n                              on: {\n                                change: function($event) {\n                                  _vm.updateStorage(\"meshMtls\", false)\n                                  _vm.formConditions.mtlsEnabled = false\n                                }\n                              }\n                            }),\n                            _c(\"span\", [_vm._v(\"Disabled\")])\n                          ]),\n                          _c(\"label\", { staticClass: \"k-input-label mx-2\" }, [\n                            _c(\"input\", {\n                              staticClass: \"k-input mr-2\",\n                              attrs: {\n                                id: \"mtls-enabled\",\n                                value: \"enabled\",\n                                name: \"mtls\",\n                                type: \"radio\"\n                              },\n                              domProps: {\n                                checked: _vm.formConditions.mtlsEnabled === true\n                              },\n                              on: {\n                                change: function($event) {\n                                  _vm.updateStorage(\"meshMtls\", true)\n                                  _vm.updateStorage(\"meshCA\", \"builtin\")\n                                  _vm.formConditions.mtlsEnabled = true\n                                }\n                              }\n                            }),\n                            _c(\"span\", [_vm._v(\"Enabled\")])\n                          ])\n                        ]),\n                        _vm.formConditions.mtlsEnabled === true\n                          ? _c(\n                              \"FormFragment\",\n                              {\n                                attrs: {\n                                  title: \"Certificate Authority\",\n                                  \"for-attr\": \"certificate-authority\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"select\",\n                                  {\n                                    staticClass: \"k-input w-100\",\n                                    attrs: {\n                                      id: \"certificate-authority\",\n                                      name: \"certificate-authority\"\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        return _vm.updateStorage(\n                                          \"meshCA\",\n                                          $event.target.value\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _c(\n                                      \"option\",\n                                      {\n                                        attrs: { value: \"builtin\" },\n                                        domProps: {\n                                          selected:\n                                            _vm.getStorageItem(\"meshCA\") ===\n                                            \"builtin\"\n                                              ? true\n                                              : false\n                                        }\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                  builtin\\n                \"\n                                        )\n                                      ]\n                                    ),\n                                    _c(\n                                      \"option\",\n                                      {\n                                        attrs: { value: \"provided\" },\n                                        domProps: {\n                                          selected:\n                                            _vm.getStorageItem(\"meshCA\") ===\n                                            \"provided\"\n                                              ? true\n                                              : false\n                                        }\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                  provided\\n                \"\n                                        )\n                                      ]\n                                    ),\n                                    _c(\n                                      \"option\",\n                                      {\n                                        attrs: { value: \"vault\" },\n                                        domProps: {\n                                          selected:\n                                            _vm.getStorageItem(\"meshCA\") ===\n                                            \"vault\"\n                                              ? true\n                                              : false\n                                        }\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                  vault\\n                \"\n                                        )\n                                      ]\n                                    )\n                                  ]\n                                ),\n                                _c(\"p\", { staticClass: \"help\" }, [\n                                  _vm._v(\n                                    \"\\n                If you've enabled mTLS, you must select a CA.\\n              \"\n                                  )\n                                ])\n                              ]\n                            )\n                          : _vm._e()\n                      ],\n                      1\n                    )\n                  ],\n                  2\n                )\n              ],\n              1\n            ),\n            _c(\n              \"template\",\n              { slot: \"logging\" },\n              [\n                _c(\"h3\", [_vm._v(\"\\n          Setup Logging\\n        \")]),\n                _c(\"p\", [\n                  _vm._v(\n                    '\\n          You can setup as many logging backends as you need that you can later\\n          use to log traffic via the \"TrafficLog\" policy. In this wizard,\\n          we allow you to configure one backend, but you can add more manually\\n          if you wish.\\n        '\n                  )\n                ]),\n                _c(\n                  \"KCard\",\n                  {\n                    staticClass: \"my-6 k-card--small\",\n                    attrs: { title: \"Logging Configuration\", \"has-shadow\": \"\" }\n                  },\n                  [\n                    _c(\n                      \"template\",\n                      { slot: \"body\" },\n                      [\n                        _c(\"FormFragment\", { attrs: { title: \"Logging\" } }, [\n                          _c(\"label\", { staticClass: \"k-input-label mx-2\" }, [\n                            _c(\"input\", {\n                              staticClass: \"k-input mr-2\",\n                              attrs: {\n                                id: \"logging-disabled\",\n                                value: \"disabled\",\n                                name: \"logging\",\n                                type: \"radio\"\n                              },\n                              domProps: {\n                                checked:\n                                  _vm.formConditions.loggingEnabled === false\n                              },\n                              on: {\n                                change: function($event) {\n                                  _vm.updateStorage(\"meshLoggingStatus\", false)\n                                  _vm.formConditions.loggingEnabled = false\n                                }\n                              }\n                            }),\n                            _c(\"span\", [_vm._v(\"Disabled\")])\n                          ]),\n                          _c(\"label\", { staticClass: \"k-input-label mx-2\" }, [\n                            _c(\"input\", {\n                              staticClass: \"k-input mr-2\",\n                              attrs: {\n                                id: \"logging-enabled\",\n                                value: \"enabled\",\n                                name: \"logging\",\n                                type: \"radio\"\n                              },\n                              domProps: {\n                                checked:\n                                  _vm.formConditions.loggingEnabled === true\n                              },\n                              on: {\n                                change: function($event) {\n                                  _vm.updateStorage(\"meshLoggingStatus\", true)\n                                  _vm.updateStorage(\"meshLoggingType\", \"tcp\")\n                                  _vm.formConditions.loggingEnabled = true\n                                  _vm.formConditions.loggingType = \"tcp\"\n                                }\n                              }\n                            }),\n                            _c(\"span\", [_vm._v(\"Enabled\")])\n                          ])\n                        ]),\n                        _vm.formConditions.loggingEnabled === true\n                          ? _c(\n                              \"FormFragment\",\n                              { attrs: { title: \"Backend name\" } },\n                              [\n                                _c(\"input\", {\n                                  staticClass: \"k-input w-100\",\n                                  attrs: {\n                                    id: \"backend-name\",\n                                    type: \"text\",\n                                    placeholder: \"your-backend-name\"\n                                  },\n                                  domProps: {\n                                    value: _vm.getStorageItem(\n                                      \"meshLoggingBackend\"\n                                    )\n                                  },\n                                  on: {\n                                    change: function($event) {\n                                      return _vm.updateStorage(\n                                        \"meshLoggingBackend\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm.formConditions.loggingEnabled === true\n                          ? _c(\n                              \"div\",\n                              [\n                                _c(\n                                  \"FormFragment\",\n                                  { attrs: { title: \"Type\" } },\n                                  [\n                                    _c(\n                                      \"select\",\n                                      {\n                                        ref: \"loggingTypeSelect\",\n                                        staticClass: \"k-input w-100\",\n                                        attrs: {\n                                          id: \"logging-type\",\n                                          name: \"logging-type\"\n                                        },\n                                        on: {\n                                          change: function($event) {\n                                            _vm.updateStorage(\n                                              \"meshLoggingType\",\n                                              $event.target.value\n                                            )\n                                            _vm.formConditions.loggingType =\n                                              $event.target.value\n                                          }\n                                        }\n                                      },\n                                      [\n                                        _c(\n                                          \"option\",\n                                          {\n                                            attrs: { value: \"tcp\" },\n                                            domProps: {\n                                              selected:\n                                                _vm.getStorageItem(\n                                                  \"meshLoggingType\"\n                                                ) === \"tcp\"\n                                                  ? true\n                                                  : false\n                                            }\n                                          },\n                                          [\n                                            _vm._v(\n                                              \"\\n                    TCP\\n                  \"\n                                            )\n                                          ]\n                                        ),\n                                        _c(\n                                          \"option\",\n                                          {\n                                            attrs: { value: \"file\" },\n                                            domProps: {\n                                              selected:\n                                                _vm.getStorageItem(\n                                                  \"meshLoggingType\"\n                                                ) === \"file\"\n                                                  ? true\n                                                  : false\n                                            }\n                                          },\n                                          [\n                                            _vm._v(\n                                              \"\\n                    File\\n                  \"\n                                            )\n                                          ]\n                                        )\n                                      ]\n                                    )\n                                  ]\n                                ),\n                                _vm.formConditions.loggingType === \"file\"\n                                  ? _c(\n                                      \"FormFragment\",\n                                      {\n                                        attrs: {\n                                          title: \"Path\",\n                                          \"for-attr\": \"backend-address\"\n                                        }\n                                      },\n                                      [\n                                        _c(\"input\", {\n                                          staticClass: \"k-input w-100\",\n                                          attrs: {\n                                            id: \"backend-address\",\n                                            type: \"text\"\n                                          },\n                                          domProps: {\n                                            value: _vm.getStorageItem(\n                                              \"meshLoggingPath\"\n                                            )\n                                          },\n                                          on: {\n                                            change: function($event) {\n                                              return _vm.updateStorage(\n                                                \"meshLoggingPath\",\n                                                $event.target.value\n                                              )\n                                            }\n                                          }\n                                        })\n                                      ]\n                                    )\n                                  : _vm._e(),\n                                _vm.formConditions.loggingType === \"tcp\"\n                                  ? _c(\n                                      \"FormFragment\",\n                                      {\n                                        attrs: {\n                                          title: \"Address\",\n                                          \"for-attr\": \"backend-address\"\n                                        }\n                                      },\n                                      [\n                                        _c(\"input\", {\n                                          staticClass: \"k-input w-100\",\n                                          attrs: {\n                                            id: \"backend-address\",\n                                            type: \"text\"\n                                          },\n                                          domProps: {\n                                            value:\n                                              _vm.getStorageItem(\n                                                \"meshLoggingAddress\"\n                                              ) || \"127.0.0.1:5000\"\n                                          },\n                                          on: {\n                                            change: function($event) {\n                                              return _vm.updateStorage(\n                                                \"meshLoggingAddress\",\n                                                $event.target.value\n                                              )\n                                            }\n                                          }\n                                        })\n                                      ]\n                                    )\n                                  : _vm._e(),\n                                _c(\n                                  \"FormFragment\",\n                                  {\n                                    attrs: {\n                                      title: \"Format\",\n                                      \"for-attr\": \"backend-format\"\n                                    }\n                                  },\n                                  [\n                                    _c(\n                                      \"textarea\",\n                                      {\n                                        staticClass:\n                                          \"k-input w-100 code-sample\",\n                                        attrs: {\n                                          id: \"backend-format\",\n                                          rows: \"12\"\n                                        },\n                                        on: {\n                                          change: function($event) {\n                                            _vm.updateStorage(\n                                              \"meshLoggingBackendFormat\",\n                                              $event.target.value.trim()\n                                            )\n                                          }\n                                        }\n                                      },\n                                      [\n                                        _vm._v(\n                                          '                  { \"start_time\": \"%START_TIME%\", \"source\": \"%KUMA_SOURCE_SERVICE%\", \"destination\": \"%KUMA_DESTINATION_SERVICE%\", \"source_address\": \"%KUMA_SOURCE_ADDRESS_WITHOUT_PORT%\", \"destination_address\": \"%UPSTREAM_HOST%\", \"duration_millis\": \"%DURATION%\", \"bytes_received\": \"%BYTES_RECEIVED%\", \"bytes_sent\": \"%BYTES_SENT%\" }\\n                  '\n                                        )\n                                      ]\n                                    )\n                                  ]\n                                )\n                              ],\n                              1\n                            )\n                          : _vm._e()\n                      ],\n                      1\n                    )\n                  ],\n                  2\n                )\n              ],\n              1\n            ),\n            _c(\n              \"template\",\n              { slot: \"tracing\" },\n              [\n                _c(\"h3\", [_vm._v(\"\\n          Setup Tracing\\n        \")]),\n                _c(\"p\", [\n                  _vm._v(\n                    '\\n          You can setup as many tracing backends as you need that you can later\\n          use to log traffic via the \"TrafficTrace\" policy. In this\\n          wizard we allow you to configure one backend, but you can add more\\n          manually as you wish.\\n        '\n                  )\n                ]),\n                _c(\n                  \"KCard\",\n                  {\n                    staticClass: \"my-6 k-card--small\",\n                    attrs: { title: \"Tracing Configuration\", \"has-shadow\": \"\" }\n                  },\n                  [\n                    _c(\n                      \"template\",\n                      { slot: \"body\" },\n                      [\n                        _c(\"FormFragment\", { attrs: { title: \"Tracing\" } }, [\n                          _c(\"label\", { staticClass: \"k-input-label mx-2\" }, [\n                            _c(\"input\", {\n                              staticClass: \"k-input mr-2\",\n                              attrs: {\n                                id: \"tracing-disabled\",\n                                value: \"disabled\",\n                                name: \"tracing\",\n                                type: \"radio\"\n                              },\n                              domProps: {\n                                checked:\n                                  _vm.formConditions.tracingEnabled === false\n                              },\n                              on: {\n                                change: function($event) {\n                                  _vm.updateStorage(\"meshTracingStatus\", false)\n                                  _vm.formConditions.tracingEnabled = false\n                                }\n                              }\n                            }),\n                            _c(\"span\", [_vm._v(\"Disabled\")])\n                          ]),\n                          _c(\"label\", { staticClass: \"k-input-label mx-2\" }, [\n                            _c(\"input\", {\n                              staticClass: \"k-input mr-2\",\n                              attrs: {\n                                id: \"tracing-enabled\",\n                                value: \"enabled\",\n                                name: \"tracing\",\n                                type: \"radio\"\n                              },\n                              domProps: {\n                                checked:\n                                  _vm.formConditions.tracingEnabled === true\n                              },\n                              on: {\n                                change: function($event) {\n                                  _vm.updateStorage(\"meshTracingStatus\", true)\n                                  _vm.updateStorage(\"meshTracingType\", \"zipkin\")\n                                  _vm.formConditions.tracingEnabled = true\n                                }\n                              }\n                            }),\n                            _c(\"span\", [_vm._v(\"Enabled\")])\n                          ])\n                        ]),\n                        _vm.formConditions.tracingEnabled === true\n                          ? _c(\n                              \"FormFragment\",\n                              {\n                                attrs: {\n                                  title: \"Backend name\",\n                                  \"for-attr\": \"tracing-backend-name\"\n                                }\n                              },\n                              [\n                                _c(\"input\", {\n                                  staticClass: \"k-input w-100\",\n                                  attrs: {\n                                    id: \"tracing-backend-name\",\n                                    type: \"text\",\n                                    placeholder: \"your-tracing-backend-name\"\n                                  },\n                                  domProps: {\n                                    value: _vm.getStorageItem(\n                                      \"meshTracingBackend\"\n                                    )\n                                  },\n                                  on: {\n                                    change: function($event) {\n                                      return _vm.updateStorage(\n                                        \"meshTracingBackend\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm.formConditions.tracingEnabled === true\n                          ? _c(\n                              \"FormFragment\",\n                              {\n                                attrs: {\n                                  title: \"Type\",\n                                  \"for-attr\": \"tracing-type\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"select\",\n                                  {\n                                    staticClass: \"k-input w-100\",\n                                    attrs: {\n                                      id: \"tracing-type\",\n                                      name: \"tracing-type\"\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        return _vm.updateStorage(\n                                          \"meshTracingType\",\n                                          $event.target.value\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _c(\n                                      \"option\",\n                                      {\n                                        attrs: { value: \"zipkin\" },\n                                        domProps: {\n                                          selected:\n                                            _vm.getStorageItem(\n                                              \"meshTracingType\"\n                                            ) === \"zipkin\"\n                                              ? true\n                                              : false\n                                        }\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                  Zipkin\\n                \"\n                                        )\n                                      ]\n                                    )\n                                  ]\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm.formConditions.tracingEnabled === true\n                          ? _c(\n                              \"FormFragment\",\n                              {\n                                attrs: {\n                                  title: \"Sampling\",\n                                  \"for-attr\": \"tracing-sampling\"\n                                }\n                              },\n                              [\n                                _c(\"input\", {\n                                  staticClass: \"k-input w-100\",\n                                  attrs: {\n                                    id: \"tracing-sampling\",\n                                    type: \"number\",\n                                    step: \"0.1\",\n                                    min: \"0\",\n                                    max: \"100\"\n                                  },\n                                  domProps: {\n                                    value:\n                                      _vm.getStorageItem(\n                                        \"meshTracingSampling\"\n                                      ) || 99.9\n                                  },\n                                  on: {\n                                    change: function($event) {\n                                      return _vm.updateStorage(\n                                        \"meshTracingSampling\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm.formConditions.tracingEnabled === true\n                          ? _c(\n                              \"FormFragment\",\n                              {\n                                attrs: {\n                                  title: \"URL\",\n                                  \"for-attr\": \"tracing-zipkin-url\"\n                                }\n                              },\n                              [\n                                _c(\"input\", {\n                                  staticClass: \"k-input w-100\",\n                                  attrs: {\n                                    id: \"tracing-zipkin-url\",\n                                    type: \"text\",\n                                    placeholder: \"your Zipkin URL\"\n                                  },\n                                  domProps: {\n                                    value: _vm.getStorageItem(\n                                      \"meshTracingZipkinURL\"\n                                    )\n                                  },\n                                  on: {\n                                    change: function($event) {\n                                      return _vm.updateStorage(\n                                        \"meshTracingZipkinURL\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            )\n                          : _vm._e()\n                      ],\n                      1\n                    )\n                  ],\n                  2\n                )\n              ],\n              1\n            ),\n            _c(\n              \"template\",\n              { slot: \"metrics\" },\n              [\n                _c(\"h3\", [_vm._v(\"\\n          Setup Metrics\\n        \")]),\n                _c(\"p\", [\n                  _vm._v(\n                    \"\\n          You can expose metrics from every data-plane on a configurable path\\n          and port that a metrics service, like Prometheus, can use to fetch them.\\n        \"\n                  )\n                ]),\n                _c(\n                  \"KCard\",\n                  {\n                    staticClass: \"my-6 k-card--small\",\n                    attrs: { title: \"Metrics Configuration\", \"has-shadow\": \"\" }\n                  },\n                  [\n                    _c(\n                      \"template\",\n                      { slot: \"body\" },\n                      [\n                        _c(\"FormFragment\", { attrs: { title: \"Metrics\" } }, [\n                          _c(\"label\", { staticClass: \"k-input-label mx-2\" }, [\n                            _c(\"input\", {\n                              staticClass: \"k-input mr-2\",\n                              attrs: {\n                                id: \"metrics-disabled\",\n                                value: \"disabled\",\n                                name: \"metrics\",\n                                type: \"radio\"\n                              },\n                              domProps: {\n                                checked:\n                                  _vm.formConditions.metricsEnabled === false\n                              },\n                              on: {\n                                change: function($event) {\n                                  _vm.updateStorage(\"meshMetricsStatus\", false)\n                                  _vm.formConditions.metricsEnabled = false\n                                }\n                              }\n                            }),\n                            _c(\"span\", [_vm._v(\"Disabled\")])\n                          ]),\n                          _c(\"label\", { staticClass: \"k-input-label mx-2\" }, [\n                            _c(\"input\", {\n                              staticClass: \"k-input mr-2\",\n                              attrs: {\n                                id: \"metrics-enabled\",\n                                value: \"enabled\",\n                                name: \"metrics\",\n                                type: \"radio\"\n                              },\n                              domProps: {\n                                checked:\n                                  _vm.formConditions.metricsEnabled === true\n                              },\n                              on: {\n                                change: function($event) {\n                                  _vm.updateStorage(\"meshMetricsStatus\", true)\n                                  _vm.updateStorage(\n                                    \"meshMetricsType\",\n                                    \"prometheus\"\n                                  )\n                                  _vm.formConditions.metricsEnabled = true\n                                }\n                              }\n                            }),\n                            _c(\"span\", [_vm._v(\"Enabled\")])\n                          ])\n                        ]),\n                        _vm.formConditions.metricsEnabled === true\n                          ? _c(\n                              \"FormFragment\",\n                              {\n                                attrs: {\n                                  title: \"Type\",\n                                  \"for-attr\": \"metrics-type\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"select\",\n                                  {\n                                    staticClass: \"k-input w-100\",\n                                    attrs: {\n                                      id: \"metrics-type\",\n                                      name: \"metrics-type\"\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        return _vm.updateStorage(\n                                          \"meshMetricsType\",\n                                          $event.target.value\n                                        )\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _c(\n                                      \"option\",\n                                      {\n                                        attrs: { value: \"prometheus\" },\n                                        domProps: {\n                                          selected:\n                                            _vm.getStorageItem(\n                                              \"meshMetricsType\"\n                                            ) === \"prometheus\"\n                                              ? true\n                                              : false\n                                        }\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                  Prometheus\\n                \"\n                                        )\n                                      ]\n                                    )\n                                  ]\n                                )\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm.formConditions.metricsEnabled === true\n                          ? _c(\n                              \"FormFragment\",\n                              {\n                                attrs: {\n                                  title: \"Dataplane port\",\n                                  \"for-attr\": \"metrics-dataplane-port\"\n                                }\n                              },\n                              [\n                                _c(\"input\", {\n                                  staticClass: \"k-input w-100\",\n                                  attrs: {\n                                    id: \"metrics-dataplane-port\",\n                                    type: \"number\",\n                                    step: \"1\",\n                                    min: \"0\",\n                                    max: \"65535\",\n                                    placeholder: \"1234\"\n                                  },\n                                  domProps: {\n                                    value:\n                                      _vm.getStorageItem(\n                                        \"meshMetricsDataplanePort\"\n                                      ) || \"5670\"\n                                  },\n                                  on: {\n                                    change: function($event) {\n                                      return _vm.updateStorage(\n                                        \"meshMetricsDataplanePort\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            )\n                          : _vm._e(),\n                        _vm.formConditions.metricsEnabled === true\n                          ? _c(\n                              \"FormFragment\",\n                              {\n                                attrs: {\n                                  title: \"Dataplane path\",\n                                  \"for-attr\": \"metrics-dataplane-path\"\n                                }\n                              },\n                              [\n                                _c(\"input\", {\n                                  staticClass: \"k-input w-100\",\n                                  attrs: {\n                                    id: \"metrics-dataplane-path\",\n                                    type: \"text\"\n                                  },\n                                  domProps: {\n                                    value:\n                                      _vm.getStorageItem(\n                                        \"meshMetricsDataplanePath\"\n                                      ) || \"/metrics\"\n                                  },\n                                  on: {\n                                    change: function($event) {\n                                      return _vm.updateStorage(\n                                        \"meshMetricsDataplanePath\",\n                                        $event.target.value\n                                      )\n                                    }\n                                  }\n                                })\n                              ]\n                            )\n                          : _vm._e()\n                      ],\n                      1\n                    )\n                  ],\n                  2\n                )\n              ],\n              1\n            ),\n            _c(\n              \"template\",\n              { slot: \"complete\" },\n              [\n                _vm.codeOutput\n                  ? _c(\n                      \"div\",\n                      [\n                        _vm.scanFound === false\n                          ? _c(\n                              \"div\",\n                              [\n                                _c(\"h3\", [\n                                  _vm._v(\n                                    \"\\n              Install a new Mesh\\n            \"\n                                  )\n                                ]),\n                                _c(\"p\", [\n                                  _vm._v(\n                                    \"\\n              Since the Kuma GUI is read-only mode to follow Ops best practices,\\n              please execute the following command in your shell to create the entity.\\n              Kuma will automatically detect when the new entity has been created.\\n            \"\n                                  )\n                                ]),\n                                _c(\n                                  \"Tabs\",\n                                  {\n                                    attrs: {\n                                      loaders: false,\n                                      tabs: _vm.tabs,\n                                      \"has-border\": true,\n                                      \"initial-tab-override\": _vm.environment\n                                    }\n                                  },\n                                  [\n                                    _c(\n                                      \"template\",\n                                      { slot: \"kubernetes\" },\n                                      [\n                                        _c(\"CodeView\", {\n                                          attrs: {\n                                            title: \"Kubernetes\",\n                                            \"copy-button-text\":\n                                              \"Copy Command to Clipboard\",\n                                            lang: \"bash\",\n                                            content: _vm.codeOutput\n                                          }\n                                        })\n                                      ],\n                                      1\n                                    ),\n                                    _c(\n                                      \"template\",\n                                      { slot: \"universal\" },\n                                      [\n                                        _c(\"CodeView\", {\n                                          attrs: {\n                                            title: \"Universal\",\n                                            \"copy-button-text\":\n                                              \"Copy Command to Clipboard\",\n                                            lang: \"bash\",\n                                            content: _vm.codeOutput\n                                          }\n                                        })\n                                      ],\n                                      1\n                                    )\n                                  ],\n                                  2\n                                )\n                              ],\n                              1\n                            )\n                          : _vm._e(),\n                        _c(\n                          \"Scanner\",\n                          {\n                            attrs: {\n                              \"loader-function\": _vm.scanForEntity,\n                              \"should-start\": true,\n                              \"has-error\": _vm.scanError,\n                              \"can-complete\": _vm.scanFound\n                            }\n                          },\n                          [\n                            _c(\"template\", { slot: \"loading-title\" }, [\n                              _c(\"h3\", [_vm._v(\"Searching…\")])\n                            ]),\n                            _c(\"template\", { slot: \"loading-content\" }, [\n                              _c(\"p\", [_vm._v(\"We are looking for your mesh.\")])\n                            ]),\n                            _c(\"template\", { slot: \"complete-title\" }, [\n                              _c(\"h3\", [_vm._v(\"Done!\")])\n                            ]),\n                            _c(\"template\", { slot: \"complete-content\" }, [\n                              _c(\"p\", [\n                                _vm._v(\"\\n                Your Mesh \"),\n                                _vm.formData.meshName\n                                  ? _c(\"strong\", [\n                                      _vm._v(_vm._s(_vm.formData.meshName))\n                                    ])\n                                  : _vm._e(),\n                                _vm._v(\" was found!\\n              \")\n                              ]),\n                              _c(\n                                \"p\",\n                                [\n                                  _c(\n                                    \"KButton\",\n                                    {\n                                      attrs: {\n                                        appearance: \"primary\",\n                                        to: { name: \"all-meshes\" }\n                                      }\n                                    },\n                                    [\n                                      _vm._v(\n                                        \"\\n                  See Meshes\\n                \"\n                                      )\n                                    ]\n                                  )\n                                ],\n                                1\n                              )\n                            ]),\n                            _c(\"template\", { slot: \"error-title\" }, [\n                              _c(\"h3\", [_vm._v(\"Mesh not found\")])\n                            ]),\n                            _c(\"template\", { slot: \"error-content\" }, [\n                              _c(\"p\", [\n                                _vm._v(\"We were unable to find your mesh.\")\n                              ])\n                            ])\n                          ],\n                          2\n                        )\n                      ],\n                      1\n                    )\n                  : _c(\n                      \"KAlert\",\n                      { attrs: { appearance: \"danger\" } },\n                      [\n                        _c(\"template\", { slot: \"alertMessage\" }, [\n                          _c(\"p\", [\n                            _vm._v(\n                              \"\\n              You haven't filled any data out yet! Please return to the first\\n              step and fill out your information.\\n            \"\n                            )\n                          ])\n                        ])\n                      ],\n                      2\n                    )\n              ],\n              1\n            ),\n            _c(\"template\", { slot: \"mesh\" }, [\n              _c(\"h3\", [_vm._v(\"Mesh\")]),\n              _c(\"p\", [\n                _vm._v(\n                  \"\\n          In \" +\n                    _vm._s(_vm.title) +\n                    \", a Mesh entity allows you to define an isolated environment\\n          for your data-planes and policies. It's isolated because the mTLS CA\\n          you choose can be different from the one configured for our Meshes.\\n          Ideally, you will have either a large Mesh with all the workloads, or\\n          one Mesh per application for better isolation.\\n        \"\n                )\n              ]),\n              _c(\"p\", [\n                _c(\n                  \"a\",\n                  {\n                    attrs: {\n                      href:\n                        \"https://kuma.io/docs/\" +\n                        _vm.version +\n                        \"/policies/mesh/\",\n                      target: \"_blank\"\n                    }\n                  },\n                  [_vm._v(\"\\n            Learn More\\n          \")]\n                )\n              ])\n            ]),\n            _c(\"template\", { slot: \"did-you-know\" }, [\n              _c(\"h3\", [_vm._v(\"Did You Know?\")]),\n              _c(\"p\", [\n                _vm._v(\n                  \"\\n          As you know, the GUI is read-only, but it will be providing instructions\\n          to create a new Mesh and verify everything worked well.\\n        \"\n                )\n              ])\n            ])\n          ],\n          2\n        )\n      ],\n      1\n    )\n  ])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}