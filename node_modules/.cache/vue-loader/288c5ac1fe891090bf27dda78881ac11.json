{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/views/StartPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/views/StartPage.vue","mtime":1589623097254},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport VueFormGenerator from 'vue-form-generator'\nimport { FormWizard, TabContent } from 'vue-form-wizard'\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\nexport default {\n  name: 'StartPage',\n  components: {\n    FormWizard,\n    TabContent\n  },\n  data: function () {\n    return {\n      model: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        streetName: '',\n        streetNumber: '',\n        city: '',\n        country: ''\n      },\n      formOptions: {\n        validationErrorClass: 'has-error',\n        validationSuccessClass: 'has-success',\n        validateAfterChanged: true\n      },\n      firstTabSchema: {\n        fields: [{\n          type: 'input',\n          inputType: 'text',\n          label: 'First name',\n          model: 'firstName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        },\n        {\n          type: 'input',\n          inputType: 'text',\n          label: 'Last name',\n          model: 'lastName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        },\n        {\n          type: 'input',\n          inputType: 'text',\n          label: 'Email',\n          model: 'email',\n          required: true,\n          validator: VueFormGenerator.validators.email,\n          styleClasses: 'col-xs-12'\n        }\n        ]\n      },\n      secondTabSchema: {\n        fields: [\n          {\n            type: 'input',\n            inputType: 'text',\n            label: 'Street name',\n            model: 'streetName',\n            required: true,\n            validator: VueFormGenerator.validators.string,\n            styleClasses: 'col-xs-9'\n          },\n          {\n            type: 'input',\n            inputType: 'text',\n            label: 'Street number',\n            model: 'streetNumber',\n            required: true,\n            validator: VueFormGenerator.validators.string,\n            styleClasses: 'col-xs-3'\n          },\n          {\n            type: 'input',\n            inputType: 'text',\n            label: 'City',\n            model: 'city',\n            required: true,\n            validator: VueFormGenerator.validators.string,\n            styleClasses: 'col-xs-6'\n          },\n          {\n            type: 'select',\n            label: 'Country',\n            model: 'country',\n            required: true,\n            validator: VueFormGenerator.validators.string,\n            values: ['United Kingdom', 'Romania', 'Germany'],\n            styleClasses: 'col-xs-6'\n          }\n        ]\n      }\n    }\n  },\n  methods: {\n    onComplete: function () {\n      alert('Yay. Done!')\n    },\n    validateFirstTab: function () {\n      return this.$refs.firstTabForm.validate()\n    },\n    validateSecondTab: function () {\n      return this.$refs.secondTabForm.validate()\n    },\n\n    prettyJSON: function (json) {\n      if (json) {\n        json = JSON.stringify(json, undefined, 4)\n        json = json.replace(/&/g, '&').replace(/</g, '<').replace(/>/g, '>')\n\n        // eslint-disable-next-line no-useless-escape\n        return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n          var cls = 'number'\n          if (/^\"/.test(match)) {\n            if (/:$/.test(match)) {\n              cls = 'key'\n            } else {\n              cls = 'string'\n            }\n          } else if (/true|false/.test(match)) {\n            cls = 'boolean'\n          } else if (/null/.test(match)) {\n            cls = 'null'\n          }\n\n          return '<span class=\"' + cls + '\">' + match + '</span>'\n        })\n      }\n    }\n  }\n\n}\n",{"version":3,"sources":["StartPage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"StartPage.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div id=\"app\">\n    <div>\n      <form-wizard\n        color=\"gray\"\n        error-color=\"#a94442\"\n        @on-complete=\"onComplete\"\n      >\n        <tab-content\n          title=\"Personal details\"\n          icon=\"ti-user\"\n          :before-change=\"validateFirstTab\"\n        >\n          <vue-form-generator\n            ref=\"firstTabForm\"\n            :model=\"model\"\n            :schema=\"firstTabSchema\"\n            :options=\"formOptions\"\n          />\n        </tab-content>\n        <tab-content\n          title=\"Additional Info\"\n          icon=\"ti-settings\"\n          :before-change=\"validateSecondTab\"\n        >\n          <vue-form-generator\n            ref=\"secondTabForm\"\n            :model=\"model\"\n            :schema=\"secondTabSchema\"\n            :options=\"formOptions\"\n          />\n        </tab-content>\n        <tab-content\n          title=\"Last step\"\n          icon=\"ti-check\"\n        >\n          <h4>Your json is ready!</h4>\n          <div class=\"panel-body\">\n            <pre\n              v-if=\"model\"\n              v-html=\"prettyJSON(model)\"\n            />\n          </div>\n        </tab-content>\n      </form-wizard>\n    </div>\n  </div>\n</template>\n<script>\nimport VueFormGenerator from 'vue-form-generator'\nimport { FormWizard, TabContent } from 'vue-form-wizard'\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\nexport default {\n  name: 'StartPage',\n  components: {\n    FormWizard,\n    TabContent\n  },\n  data: function () {\n    return {\n      model: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        streetName: '',\n        streetNumber: '',\n        city: '',\n        country: ''\n      },\n      formOptions: {\n        validationErrorClass: 'has-error',\n        validationSuccessClass: 'has-success',\n        validateAfterChanged: true\n      },\n      firstTabSchema: {\n        fields: [{\n          type: 'input',\n          inputType: 'text',\n          label: 'First name',\n          model: 'firstName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        },\n        {\n          type: 'input',\n          inputType: 'text',\n          label: 'Last name',\n          model: 'lastName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        },\n        {\n          type: 'input',\n          inputType: 'text',\n          label: 'Email',\n          model: 'email',\n          required: true,\n          validator: VueFormGenerator.validators.email,\n          styleClasses: 'col-xs-12'\n        }\n        ]\n      },\n      secondTabSchema: {\n        fields: [\n          {\n            type: 'input',\n            inputType: 'text',\n            label: 'Street name',\n            model: 'streetName',\n            required: true,\n            validator: VueFormGenerator.validators.string,\n            styleClasses: 'col-xs-9'\n          },\n          {\n            type: 'input',\n            inputType: 'text',\n            label: 'Street number',\n            model: 'streetNumber',\n            required: true,\n            validator: VueFormGenerator.validators.string,\n            styleClasses: 'col-xs-3'\n          },\n          {\n            type: 'input',\n            inputType: 'text',\n            label: 'City',\n            model: 'city',\n            required: true,\n            validator: VueFormGenerator.validators.string,\n            styleClasses: 'col-xs-6'\n          },\n          {\n            type: 'select',\n            label: 'Country',\n            model: 'country',\n            required: true,\n            validator: VueFormGenerator.validators.string,\n            values: ['United Kingdom', 'Romania', 'Germany'],\n            styleClasses: 'col-xs-6'\n          }\n        ]\n      }\n    }\n  },\n  methods: {\n    onComplete: function () {\n      alert('Yay. Done!')\n    },\n    validateFirstTab: function () {\n      return this.$refs.firstTabForm.validate()\n    },\n    validateSecondTab: function () {\n      return this.$refs.secondTabForm.validate()\n    },\n\n    prettyJSON: function (json) {\n      if (json) {\n        json = JSON.stringify(json, undefined, 4)\n        json = json.replace(/&/g, '&').replace(/</g, '<').replace(/>/g, '>')\n\n        // eslint-disable-next-line no-useless-escape\n        return json.replace(/(\"(\\\\u[a-zA-Z0-9]{4}|\\\\[^u]|[^\\\\\"])*\"(\\s*:)?|\\b(true|false|null)\\b|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?)/g, function (match) {\n          var cls = 'number'\n          if (/^\"/.test(match)) {\n            if (/:$/.test(match)) {\n              cls = 'key'\n            } else {\n              cls = 'string'\n            }\n          } else if (/true|false/.test(match)) {\n            cls = 'boolean'\n          } else if (/null/.test(match)) {\n            cls = 'null'\n          }\n\n          return '<span class=\"' + cls + '\">' + match + '</span>'\n        })\n      }\n    }\n  }\n\n}\n</script>\n<style scoped=scss>\n\npre {overflow: auto;\n}\npre .string { color: #885800; }\npre .number { color: blue; }\npre .boolean { color: magenta; }\npre .null { color: red; }\npre .key { color: green; }\n</style>\n"]}]}