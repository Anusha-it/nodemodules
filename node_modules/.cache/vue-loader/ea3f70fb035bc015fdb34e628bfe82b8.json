{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/components/Sidebar/MenuList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/components/Sidebar/MenuList.vue","mtime":1589947473917},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'MenuList',\n  props: {\n    menuItems: {\n      type: Array,\n      required: true\n    }\n  },\n  data () {\n    return {\n      meshPath: null\n    }\n  },\n  computed: {\n    ...mapState(['selectedMesh'])\n  },\n  watch: {\n    $route: {\n      deep: true,\n      handler () {\n        // set the menu links accordingly\n        this.setMeshPath()\n      }\n    }\n  },\n  beforeMount () {\n    this.setMeshPath()\n  },\n  methods: {\n    preparePath (path) {\n      return path[0] === '/' ? path : `/${path}`\n    },\n\n    // Kuma\n    setMeshPath () {\n      const meshFromLocalStorage = localStorage.getItem('selectedMesh')\n      const meshFromRoute = this.$route.params.mesh\n\n      if (meshFromRoute && meshFromRoute.length > 0) {\n        // if the route has a mesh param set, use that for the path\n        this.meshPath = meshFromRoute\n      } else if (meshFromLocalStorage && meshFromLocalStorage.length > 0) {\n        // otherwise fall back to what's present in localStorage\n        this.meshPath = meshFromLocalStorage\n      }\n\n      // otherwise fallback to what's in the store (it has a default value)\n      this.meshPath = this.$store.getters.getSelectedMesh\n    }\n  }\n}\n",{"version":3,"sources":["MenuList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqCA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"MenuList.vue","sourceRoot":"src/components/Sidebar","sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"column\">\n      <div class=\"card\">\n        <ul class=\"menu-list\">\n                <template v-for=\"item in menuItems\">\n                  <li\n                    v-if=\"!item.hidden\"\n                    :key=\"item.name\"\n                    :class=\"{'menu-title' : item.title, 'hasBadge': item.badge}\"\n                  >\n                    <router-link\n                      v-if=\"item.link && item.pathFlip\"\n                      :to=\"{\n                        path: item.root ? preparePath(item.link) : preparePath(item.link) + '/' + meshPath\n                      }\"\n                    >\n                      {{ item.name }}\n                    </router-link>\n                    <router-link\n                      v-else-if=\"item.link && !item.pathFlip\"\n                      :to=\"{\n                        path: item.root ? preparePath(item.link) : '/' + meshPath + preparePath(item.link)\n                      }\"\n                    >\n                      {{ item.name }}\n                    </router-link>\n                    <span v-else-if=\"!item.hidden\">{{ item.name }}</span>\n                  </li>\n                </template>\n        </ul>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapState } from 'vuex'\n\nexport default {\n  name: 'MenuList',\n  props: {\n    menuItems: {\n      type: Array,\n      required: true\n    }\n  },\n  data () {\n    return {\n      meshPath: null\n    }\n  },\n  computed: {\n    ...mapState(['selectedMesh'])\n  },\n  watch: {\n    $route: {\n      deep: true,\n      handler () {\n        // set the menu links accordingly\n        this.setMeshPath()\n      }\n    }\n  },\n  beforeMount () {\n    this.setMeshPath()\n  },\n  methods: {\n    preparePath (path) {\n      return path[0] === '/' ? path : `/${path}`\n    },\n\n    // Kuma\n    setMeshPath () {\n      const meshFromLocalStorage = localStorage.getItem('selectedMesh')\n      const meshFromRoute = this.$route.params.mesh\n\n      if (meshFromRoute && meshFromRoute.length > 0) {\n        // if the route has a mesh param set, use that for the path\n        this.meshPath = meshFromRoute\n      } else if (meshFromLocalStorage && meshFromLocalStorage.length > 0) {\n        // otherwise fall back to what's present in localStorage\n        this.meshPath = meshFromLocalStorage\n      }\n\n      // otherwise fallback to what's in the store (it has a default value)\n      this.meshPath = this.$store.getters.getSelectedMesh\n    }\n  }\n}\n</script>\n\n<style lang='scss'>\n* {\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n/* Float four columns side by side */\n.column {\n  float: left;\n  width: 100%;\n  padding: 0 10px;\n}\n\n/* Remove extra left and right margins, due to padding */\n.row {margin: 0 -5px;}\n\n/* Clear floats after the columns */\n.row:after {\n  content: \"\";\n  display: table;\n  clear: both;\n}\n\n/* Responsive columns */\n@media screen and (max-width: 600px) {\n  .column {\n    width: 100%;\n    display: block;\n    margin-bottom: 20px;\n    float: left;\n     padding: 0 10px;\n  }\n}\n\n/* Style the counter cards */\n.card {\n  box-shadow: 0 4px 8px 0 rgba(26, 18, 70, 0.925);\n  padding: 16px;\n  text-align: center;\n  background-color: #c9c9d4;\n}\n.cardd {\n  box-shadow: 0 4px 8px 0 rgba(26, 18, 70, 0.925);\n  padding: 16px;\n  text-align: center;\n  background-color: #cdd1db;\n}\n.menu-list {\n  display: block;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  width: 100%;\n  white-space: nowrap;\n\n  li {\n    position: relative;\n    line-height: 38px;\n    cursor: pointer;\n\n    &.menu-title {\n      font-size: 12px;\n      font-weight: normal;\n      color: #000;\n      text-transform: uppercase;\n      padding: 0 32px;\n    }\n\n    a {\n      display: block;\n      padding: 0 32px;\n      font-size: 16px;\n      text-decoration: none;\n      color: rgba(0, 0, 0, 0.7);\n      transition: all 300ms ease;\n    }\n\n    &:not(.menu-title) {\n\n      &:hover a {\n        color: #000;\n        text-decoration: underline;\n      }\n\n      .router-link-active {\n        position: relative;\n        z-index: 1;\n        color: #1270b2;\n        border-right: 1px solid var(--blue-2);\n        background: var(--blue-3);\n\n        // &:after {\n        //   position: absolute;\n        //   display: block;\n        //   content: '';\n        //   top: 0;\n        //   left: -64px;\n        //   width: 100%;\n        //   height: 100%;\n        //   border-right: 1px solid var(--blue-2);\n        //   background: var(--blue-3);\n        //   z-index: -1;\n        // }\n      }\n    }\n\n    &:hover a {\n      color: #1270b2;\n    }\n  }\n\n  nav.closed & {\n    display: none;\n\n    li {\n      padding: 0 1rem;\n      transition: all 0.3s ease;\n\n      &:not(.menu-title) {\n\n        .router-link-active:after {\n          width: calc(100% + 2em);\n          border: 0;\n          left: -1rem;\n        }\n      }\n    }\n  }\n}\n\n</style>\n"]}]}