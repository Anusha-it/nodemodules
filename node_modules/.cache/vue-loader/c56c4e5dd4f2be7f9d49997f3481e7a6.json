{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/components/Sidebar/Sidebar.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/components/Sidebar/Sidebar.vue","mtime":1589260598000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport KNav from '@/components/Sidebar/KNav'\nimport SidebarMenu from '@/components/Sidebar/SidebarMenu'\nimport CollapseToggle from '@/components/Sidebar/CollapseToggle'\nimport MeshSelector from '@/components/Utils/MeshSelector'\n\nimport { getItemFromStorage, setItemToStorage } from '@/Cache'\nimport { mapState, mapMutations } from 'vuex'\n\nexport default {\n  components: {\n    KNav,\n    SidebarMenu,\n    CollapseToggle,\n    MeshSelector\n  },\n\n  data () {\n    return {\n      isCollapsed: false,\n      sidebarSavedState: null,\n      toggleWorkspaces: false,\n      hovering: false\n    }\n  },\n\n  computed: {\n    // ...mapState('auth', {\n    //   perms: state => state.permissions\n    // }),\n\n    resourceLinks () {\n      const storedVersion = this.$store.getters.getVersion\n      const ver = (storedVersion !== null) ? storedVersion : 'latest'\n\n      return [\n        {\n          link: `https://kuma.io/docs/${ver}/`,\n          label: 'Kuma Documentation'\n        },\n        {\n          link: 'https://kuma-mesh.slack.com/',\n          label: 'Kuma Community Chat'\n        },\n        {\n          link: 'https://github.com/Kong/kuma',\n          label: 'Kuma GitHub Repository'\n        }\n      ]\n    },\n\n    ...mapState('sidebar', {\n      menu: state => state.menu\n    }),\n\n    /**\n     * Main property for items in the sidebar menu. Filters out menu.js items by\n     * RBAC permissions and fetches Kong Admin Plugin routes\n     * @returns {{sections:Array<MenuItem>}}\n     */\n    menuList () {\n      // get routes allowed by rbac\n      // const routes = this.$rbac.filterRoutes(this.perms, this.$router.allRoutes,\n      //   this.currentWorkspace && this.currentWorkspace.name)\n\n      // const routes = this.$router.allRoutes\n\n      const filteredMenu = JSON.parse(JSON.stringify(this.menu))\n\n      return filteredMenu\n    },\n\n    lastMenuList () {\n      return Object.keys(this.menuList.sections).length - 1\n    },\n\n    meshList () {\n      return this.$store.state.meshes\n    }\n  },\n\n  mounted () {\n    const sidebarState = getItemFromStorage('sidebarCollapsed')\n\n    if (document.documentElement.clientWidth <= 900) {\n      this.isCollapsed = true\n    } else {\n      this.isCollapsed = sidebarState || false\n    }\n\n    window.addEventListener('resize', this.handleResize)\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('resize', this.handleResize)\n  },\n\n  methods: {\n    ...mapMutations('sidebar', [\n      'setMenu'\n    ]),\n\n    handleToggleCollapse () {\n      this.isCollapsed = !this.isCollapsed\n      this.setCollapsedState(this.isCollapsed)\n    },\n\n    isHovering (a) {\n      this.hovering = a\n    },\n\n    setCollapsedState (collapsedState) {\n      setItemToStorage('sidebarCollapsed', collapsedState)\n    },\n\n    handleResize () {\n      const sidebarState = getItemFromStorage('sidebarCollapsed')\n\n      if (document.documentElement.clientWidth <= 900) {\n        this.isCollapsed = sidebarState || true\n      }\n\n      if (document.documentElement.clientWidth >= 900) {\n        this.isCollapsed = sidebarState || false\n      }\n    }\n  }\n}\n",{"version":3,"sources":["Sidebar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkfile":"Sidebar.vue","sourceRoot":"src/components/Sidebar","sourcesContent":["<template>\n  <KNav :is-collapsed=\"isCollapsed\">\n    <div\n      slot=\"NavMenu\"\n      :class=\"{ 'is-hovering': hovering }\"\n      class=\"menu-container\"\n    >\n      <MeshSelector :items=\"meshList\" />\n      <SidebarMenu\n        v-for=\"(menu, i) in menuList.sections\"\n        :key=\"i\"\n        :menu=\"menu\"\n        :trigger-hovering=\"isHovering\"\n        :index=\"i\"\n        :is-last=\"i === lastMenuList\"\n      />\n      <div class=\"sidebar-message-wrap\">\n        <!-- <div\n          v-if=\"kumaInfo\"\n          class=\"sidebar-app-info\"\n        >\n          {{ kumaInfo }}\n        </div> -->\n        <div class=\"sidebar-message\">\n          <h4 class=\"mb-4 md sidebar-message__title\">\n            Resources\n          </h4>\n          <ul>\n            <li\n              v-for=\"(item, index) in resourceLinks\"\n              :key=\"index\"\n            >\n              <a\n                :href=\"item.link\"\n                target=\"_blank\"\n              >\n                {{ item.label }}\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <CollapseToggle\n        :handle-toggle-collapse=\"handleToggleCollapse\"\n      />\n    </div>\n  </KNav>\n</template>\n\n<script>\nimport KNav from '@/components/Sidebar/KNav'\nimport SidebarMenu from '@/components/Sidebar/SidebarMenu'\nimport CollapseToggle from '@/components/Sidebar/CollapseToggle'\nimport MeshSelector from '@/components/Utils/MeshSelector'\n\nimport { getItemFromStorage, setItemToStorage } from '@/Cache'\nimport { mapState, mapMutations } from 'vuex'\n\nexport default {\n  components: {\n    KNav,\n    SidebarMenu,\n    CollapseToggle,\n    MeshSelector\n  },\n\n  data () {\n    return {\n      isCollapsed: false,\n      sidebarSavedState: null,\n      toggleWorkspaces: false,\n      hovering: false\n    }\n  },\n\n  computed: {\n    // ...mapState('auth', {\n    //   perms: state => state.permissions\n    // }),\n\n    resourceLinks () {\n      const storedVersion = this.$store.getters.getVersion\n      const ver = (storedVersion !== null) ? storedVersion : 'latest'\n\n      return [\n        {\n          link: `https://kuma.io/docs/${ver}/`,\n          label: 'Kuma Documentation'\n        },\n        {\n          link: 'https://kuma-mesh.slack.com/',\n          label: 'Kuma Community Chat'\n        },\n        {\n          link: 'https://github.com/Kong/kuma',\n          label: 'Kuma GitHub Repository'\n        }\n      ]\n    },\n\n    ...mapState('sidebar', {\n      menu: state => state.menu\n    }),\n\n    /**\n     * Main property for items in the sidebar menu. Filters out menu.js items by\n     * RBAC permissions and fetches Kong Admin Plugin routes\n     * @returns {{sections:Array<MenuItem>}}\n     */\n    menuList () {\n      // get routes allowed by rbac\n      // const routes = this.$rbac.filterRoutes(this.perms, this.$router.allRoutes,\n      //   this.currentWorkspace && this.currentWorkspace.name)\n\n      // const routes = this.$router.allRoutes\n\n      const filteredMenu = JSON.parse(JSON.stringify(this.menu))\n\n      return filteredMenu\n    },\n\n    lastMenuList () {\n      return Object.keys(this.menuList.sections).length - 1\n    },\n\n    meshList () {\n      return this.$store.state.meshes\n    }\n  },\n\n  mounted () {\n    const sidebarState = getItemFromStorage('sidebarCollapsed')\n\n    if (document.documentElement.clientWidth <= 900) {\n      this.isCollapsed = true\n    } else {\n      this.isCollapsed = sidebarState || false\n    }\n\n    window.addEventListener('resize', this.handleResize)\n  },\n\n  beforeDestroy () {\n    window.removeEventListener('resize', this.handleResize)\n  },\n\n  methods: {\n    ...mapMutations('sidebar', [\n      'setMenu'\n    ]),\n\n    handleToggleCollapse () {\n      this.isCollapsed = !this.isCollapsed\n      this.setCollapsedState(this.isCollapsed)\n    },\n\n    isHovering (a) {\n      this.hovering = a\n    },\n\n    setCollapsedState (collapsedState) {\n      setItemToStorage('sidebarCollapsed', collapsedState)\n    },\n\n    handleResize () {\n      const sidebarState = getItemFromStorage('sidebarCollapsed')\n\n      if (document.documentElement.clientWidth <= 900) {\n        this.isCollapsed = sidebarState || true\n      }\n\n      if (document.documentElement.clientWidth >= 900) {\n        this.isCollapsed = sidebarState || false\n      }\n    }\n  }\n}\n</script>\n\n<style lang='scss'>\n$top-nav-height: 75px;\n\n.workspace-tile {\n  padding: 24px 0;\n  border-bottom: 1px solid #e0e1e2;\n  margin: 0 1rem;\n\n  a:hover, a:focus {\n    text-decoration: none;\n  }\n}\n\n.gry-bounding {\n  display: flex;\n  position: relative;\n  align-items: center;\n  padding: 20px;\n  height: 36px;\n  color: rgba(0, 0, 0, 0.45);\n  font-size: 14px;\n  border-bottom: 1px solid #e0e1e2;\n  background-color: #f9f9f9;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n  span {\n    position: absolute;\n    left: 60px;\n    white-space: nowrap;\n  }\n  .workspace-toggle {\n    border-bottom: 1px solid;\n  }\n  &:hover {\n    background: darken(#f5f6f7, 2%);\n  }\n\n  nav.closed & {\n    box-shadow: none;\n    background: none;\n    span {\n      display: none;\n    }\n  }\n}\n\nnav {\n\n  .menu-container {\n    width: 240px;\n    height: calc(100vh - 145px); // 100vh - (Header + ws picker + collapse btn)\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  &.closed {\n    .workspace-tile {\n      border-top: 1px solid #e0e1e2;\n    }\n    .gry-bounding {\n      height: auto;\n      border: none;\n      padding: 20px;\n    }\n    .menu-container {\n      width: 63px;\n      overflow: hidden;\n    }\n  }\n}\n\n.workspace-toggle,\n.sidebar-toggle {\n  @extend .gry-bounding;\n}\n\n/* Fix for IE */\n.workspace-toggle > span{\n  top: 10px\n}\n\n.sidebar-message-wrap {\n  position: fixed;\n  bottom: 36px;\n  width: 240px;\n\n  nav.closed & {\n    display: none;\n  }\n}\n\n.sidebar-app-info {\n  padding: 32px;\n  font-size: 14px;\n  line-height: 25px;\n  color: var(--tblack-45);\n}\n\n.sidebar-message {\n  background-color: #FFF5E0;\n  box-shadow: inset 0 1px 0 0 rgba(0,0,0,0.10);\n  padding: 32px;\n  font-size: 14px;\n  line-height: 25px;\n  color: rgba(0, 0, 0, .75);\n\n  p:first-of-type {\n    margin-bottom: 16px;\n  }\n\n  a {\n    color: #1782CF;\n    text-decoration: none;\n  }\n\n  ul {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n  }\n}\n\n.sidebar-message__title {\n  text-transform: uppercase;\n  border-bottom: 1px solid rgba(0,0,0,0.10);\n  padding-bottom: 6px;\n  margin-top: 0;\n}\n\n// mobile fix\n@media only screen and (max-width: 900px) {\n  .sidebar-toggle {\n    display: block !important;\n    height: auto !important;\n\n    span {\n      display: none;\n    }\n  }\n}\n</style>\n"]}]}