{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/components/Skeletons/CodeView.vue?vue&type=style&index=0&id=9b2d85aa&lang=scss&scoped=true&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/components/Skeletons/CodeView.vue","mtime":1589260598000},{"path":"/Users/ksagar/vueproj/sample/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.code-block {\n  border-radius: 3px;\n  background-color: rgba(150, 58, 133, 0.05);\n  font-size: var(--type-sm);\n}\n\n.empty-state-title {\n\n  .card-icon {\n    text-align: center;\n\n    img, svg {\n      display: block;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n}\n",{"version":3,"sources":["CodeView.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyJA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CodeView.vue","sourceRoot":"src/components/Skeletons","sourcesContent":["<template>\n  <div class=\"code-view\">\n    <div\n      v-if=\"isReady\"\n      class=\"code-view-content\"\n    >\n      <KCard\n        v-if=\"!isLoading && !isEmpty\"\n        :title=\"title\"\n        border-variant=\"noBorder\"\n      >\n        <template slot=\"body\">\n          <prism\n            class=\"code-block\"\n            :language=\"lang\"\n            :code=\"codeContent\"\n          />\n        </template>\n        <template slot=\"actions\">\n          <KClipboardProvider\n            v-if=\"content\"\n            v-slot=\"{ copyToClipboard }\"\n          >\n            <KPop placement=\"bottom\">\n              <KButton\n                appearance=\"primary\"\n                @click=\"() => { copyToClipboard(codeContent) }\"\n              >\n                {{ copyButtonText }}\n              </KButton>\n              <div slot=\"content\">\n                <p>Entity copied to clipboard!</p>\n              </div>\n            </KPop>\n          </KClipboardProvider>\n        </template>\n      </KCard>\n    </div>\n\n    <div v-if=\"loaders === true\">\n      <!-- loading state -->\n      <KEmptyState\n        v-if=\"isLoading\"\n        cta-is-hidden\n      >\n        <template slot=\"title\">\n          <div class=\"card-icon mb-3\">\n            <KIcon\n              icon=\"spinner\"\n              color=\"rgba(0, 0, 0, 0.1)\"\n              size=\"42\"\n            />\n          </div>\n          Data Loading...\n        </template>\n      </KEmptyState>\n\n      <!-- no data to load -->\n      <KEmptyState\n        v-if=\"isEmpty && !isLoading\"\n        cta-is-hidden\n      >\n        <template slot=\"title\">\n          <div class=\"card-icon mb-3\">\n            <KIcon\n              class=\"kong-icon--centered\"\n              color=\"var(--yellow-base)\"\n              icon=\"warning\"\n              size=\"42\"\n            />\n          </div>\n          There is no data to display.\n        </template>\n      </KEmptyState>\n\n      <!-- error -->\n      <KEmptyState\n        v-if=\"hasError\"\n        cta-is-hidden\n      >\n        <template slot=\"title\">\n          <div class=\"card-icon mb-3\">\n            <KIcon\n              class=\"kong-icon--centered\"\n              color=\"var(--yellow-base)\"\n              icon=\"warning\"\n              size=\"42\"\n            />\n          </div>\n          An error has occurred while trying to load this data.\n        </template>\n      </KEmptyState>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Prism from 'vue-prismjs'\nimport 'prismjs/themes/prism.css'\n\nexport default {\n  name: 'CodeView',\n  components: {\n    prism: Prism\n  },\n  props: {\n    lang: {\n      type: String,\n      required: true\n    },\n    copyButtonText: {\n      type: String,\n      default: 'Copy to Clipboard'\n    },\n    title: {\n      type: String,\n      default: null\n    },\n    content: {\n      type: String,\n      default: null\n    },\n    loaders: {\n      type: Boolean,\n      default: true\n    },\n    isLoading: {\n      type: Boolean,\n      default: false\n    },\n    hasError: {\n      type: Boolean,\n      default: false\n    },\n    isEmpty: {\n      type: Boolean,\n      default: false\n    }\n  },\n  computed: {\n    isReady () {\n      return !this.isEmpty && !this.hasError && !this.isLoading\n    },\n    codeContent () {\n      const content = this.content\n\n      return content\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.code-block {\n  border-radius: 3px;\n  background-color: rgba(150, 58, 133, 0.05);\n  font-size: var(--type-sm);\n}\n\n.empty-state-title {\n\n  .card-icon {\n    text-align: center;\n\n    img, svg {\n      display: block;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n}\n</style>\n"]}]}