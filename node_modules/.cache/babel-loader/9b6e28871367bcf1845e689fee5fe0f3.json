{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js!/Users/ksagar/vueproj/sample/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/ksagar/vueproj/sample/src/helpers.js","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/helpers.js","mtime":1589260598000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport _defineProperty from \"/Users/ksagar/vueproj/sample/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/ksagar/vueproj/sample/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _typeof from \"/Users/ksagar/vueproj/sample/node_modules/@babel/runtime-corejs2/helpers/esm/typeof\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.string.pad-start\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.regexp.constructor\";\nimport \"core-js/modules/es6.regexp.replace\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nvar capitalizeRegEx = /(?:^|[\\s-:'\"])\\w/g;\nexport var uuidRegEx = '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}';\nexport function capitalize(str) {\n  return str.replace(capitalizeRegEx, function (a) {\n    return a.toUpperCase();\n  });\n}\n/**\n * Test if a string is a valid uuid\n * @param {String} str - the string to test\n * @returns {boolean}\n */\n\nexport function isValidUuid(str) {\n  return str.length === 36 && new RegExp(\"^\".concat(uuidRegEx, \"$\")).test(str);\n}\nexport function getConfig(name, defaultValue) {\n  if (!window.K_CONFIG) {\n    return defaultValue;\n  }\n\n  var value = window.K_CONFIG[name];\n\n  if (value === '' || value == null || value.indexOf('{{') === 0) {\n    return defaultValue;\n  }\n\n  try {\n    // Properly handle booleans, numbers, arrays, and objects\n    return JSON.parse(value);\n  } catch (e) {\n    // Value must have be a string or empty\n    return value;\n  }\n}\nexport function redirectOnResponseStatus($router, status, location, options) {\n  var opts = options || {};\n  var changeRoute = opts.replace ? $router.replace : $router.push;\n  return function (response) {\n    // Handle both success and error responses\n    var resp = response.response ? response.response : response;\n\n    if (resp && resp.status === status) {\n      changeRoute.call($router, location);\n    }\n  };\n}\nexport function redirectBackOnResponseStatus($router, status) {\n  return function (response) {\n    var resp = response.response ? response.response : response;\n\n    if (resp && resp.status === status) {\n      $router.go(-1);\n    }\n  };\n}\nexport function getPortalURL(config, workspaceName) {\n  if (!config || !config.portal_gui_protocol || !config.portal_gui_host) {\n    var protocol = window.location.protocol;\n    var domain = window.location.hostname;\n    var listenerPort = protocol === 'https:' ? config.portal_gui_listeners.filter(function (item) {\n      return item.ssl === true;\n    })[0].port : config.portal_gui_listeners.filter(function (item) {\n      return item.ssl === false;\n    })[0].port;\n    return \"\".concat(protocol, \"//\").concat(domain, \":\").concat(listenerPort);\n  }\n\n  if (config.portal_gui_use_subdomains) {\n    return \"\".concat(config.portal_gui_protocol, \"://\").concat(workspaceName, \".\").concat(config.portal_gui_host);\n  }\n\n  return \"\".concat(config.portal_gui_protocol, \"://\").concat(config.portal_gui_host, \"/\").concat(workspaceName);\n}\n/**\n * Base64 encoded string that is an object\n * @param {string} item\n * @returns {Object}\n */\n\nexport function decodeItem(item) {\n  var decoded = atob(item);\n\n  if (decoded && item) {\n    return JSON.parse(decoded);\n  }\n\n  return {};\n}\nexport function encodeItem(item) {\n  return btoa(JSON.stringify(item));\n}\nexport function forEach(array, callback, scope) {\n  for (var i = 0; i < array.length; i++) {\n    callback.call(scope, i, array[i]);\n  }\n}\nexport function removeObjectKeys(object, key) {\n  var obj = object;\n  Object.keys(obj).forEach(function (field) {\n    if (field.indexOf(key) === 0) {\n      delete obj[field];\n    }\n  });\n  return obj;\n}\n/**\n * Check if string has a protocol (e.g. http or https)\n * @param {String} str the string in question\n */\n\nexport function hasProtocol(str) {\n  var protocolPattern = /^https?:\\/\\//i;\n  return protocolPattern.test(str);\n}\nexport function decodeJWT(token) {\n  var base64Url = token.split('.')[1];\n  var base64 = base64Url.replace('-', '+').replace('_', '/');\n  return JSON.parse(window.atob(base64));\n}\nexport function convertToDotNotation(key) {\n  return key.replace(/-/g, '.');\n}\nexport function getPluginIcon(pluginName) {\n  var icon;\n\n  try {\n    icon = require(\"./assets/images/plugin-icons/\".concat(pluginName, \".png\"));\n  } catch (_) {\n    icon = require(\"./assets/images/plugin-icons/missing.png\");\n  }\n\n  return icon;\n}\n/**\n * Formats a unix timestamp into a formatted date string\n * @param {Number} timestamp a unix timestamp in seconds\n * @returns a date string with format YYYY-MM-DD HH:mm:ss ZZ\n */\n\nexport function formatDate(timestamp) {\n  var date = new Date(timestamp * 1000);\n  var day = date.getDate().toString().padStart(2, 0);\n  var month = (date.getMonth() + 1).toString().padStart(2, 0);\n  var year = date.getFullYear();\n  var time = date.toTimeString().split(' ');\n  return year + '-' + month + '-' + day + ' ' + time[0] + ' ' + time[1].substring(3, time[1].length);\n}\n/**\n * Compares two objects\n * @param {Object} Object A\n * @param {Object} Object B\n * @return {Boolean}\n */\n\nexport function compareObjects(a, b) {\n  return JSON.stringify(a) === JSON.stringify(b);\n}\n/**\n * A method to easily check if an object is empty or not\n * @param {Object} Object to check\n * @return {Boolean}\n */\n\nexport function isObjectEmpty(obj) {\n  return Object.keys(obj).length === 0;\n}\n/**\n * Takes an object with dot notated keys (key.nested.values)\n * and returns an object with nested objects (key: { nested: values })\n * @param {Object} obj\n * @returns {Object}\n */\n\nexport function unFlattenObject(obj) {\n  var result = {}; // Loop object and reduce each key to build\n  // nested structure\n\n  var _loop = function _loop(key) {\n    var keys = key.split('.');\n    keys.reduce(function (acc, cur, curIdx) {\n      return acc[cur] || ( // If current key in acc is the next\n      // item in the split array (dot notation)\n      // set its value\n      acc[cur] = isNaN(keys[curIdx + 1]) ? keys.length - 1 === curIdx ? obj[key] : {} : []);\n    }, result);\n  };\n\n  for (var key in obj) {\n    _loop(key);\n  }\n\n  return result;\n}\n/**\n * checks \"target\" children is included in the array \"src\"\n * if the \"target\" is an array\n * then recursively search into it\n * @param {Array} src\n * @param {Array} target\n * @returns {Boolean}\n */\n\nexport function deepIncludes(src, target) {\n  if (!(src instanceof Array)) throw new Error('Params[0] needs to be an Array');\n  if (target instanceof Array) return target.some(function (arr) {\n    return deepIncludes(src, arr);\n  });\n  return src.includes(target);\n}\n/**\n * =============================================================================\n * Kuma Helpers\n * =============================================================================\n */\n\n/**\n * Outputs a friendly human-readable timeframe between now and the date string entered\n * @param {String} tdate\n */\n\nexport function humanReadableDate(tdate) {\n  var systemDate = new Date(Date.parse(tdate));\n  var userDate = new Date();\n\n  var K = function K() {\n    var a = navigator.userAgent;\n    return {\n      ie: a.match(/MSIE\\s([^]*)/)\n    };\n  };\n\n  if (K.ie) {\n    systemDate = Date.parse(tdate.replace(/( \\+)/, ' UTC$1'));\n  }\n\n  var diff = Math.floor((userDate - systemDate) / 1000);\n\n  if (diff <= 1) {\n    return 'just now';\n  }\n\n  if (diff < 20) {\n    return diff + ' seconds ago';\n  }\n\n  if (diff < 40) {\n    return 'half a minute ago';\n  }\n\n  if (diff < 60) {\n    return 'less than a minute ago';\n  }\n\n  if (diff <= 90) {\n    return 'one minute ago';\n  }\n\n  if (diff <= 3540) {\n    return Math.round(diff / 60) + ' minutes ago';\n  }\n\n  if (diff <= 5400) {\n    return '1 hour ago';\n  }\n\n  if (diff <= 86400) {\n    return Math.round(diff / 3600) + ' hours ago';\n  }\n\n  if (diff <= 129600) {\n    return '1 day ago';\n  }\n\n  if (diff < 604800) {\n    return Math.round(diff / 86400) + ' days ago';\n  }\n\n  if (diff <= 777600) {\n    return '1 week ago';\n  } // return 'on ' + systemDate\n\n\n  return \"on \".concat(systemDate.toLocaleDateString());\n}\n/**\n * Takes an object or array and only returns the keys and\n * values you want based on the `items` value.\n * @param {Object, Array} original\n * @param {Object} desired\n */\n\nexport function getSome(original, desired) {\n  // we have to determine if we're dealing with an array or an object\n  var cleaned = original && _typeof(original) === 'object' && original.constructor === Array ? Object.assign.apply(Object, [{}].concat(_toConsumableArray(original))) : original;\n  return desired.reduce(function (obj, key) {\n    return _objectSpread(_objectSpread({}, obj), {}, _defineProperty({}, key, cleaned[key]));\n  }, {});\n}\n/**\n * stripUrl\n *\n * Returns all of a URL after the last slash so that it does not\n * include the root of the URL that we don't need (e.g. when fetching from\n * an API).\n *\n * @param {String} url\n */\n\nexport function stripUrl(url) {\n  var regex = new RegExp(/([^\\/]+$)/g);\n  var match = url.match(regex)[0];\n  return match;\n}\n/**\n * getOffset\n *\n * Returns the offset from an API query so that it can be used\n * for things like next and prev controls in pagination.\n *\n * @param {String} url The URL you want to find `offset` in and\n * simply return the value for.\n */\n\nexport function getOffset(url) {\n  var regex = new RegExp(/offset=(\\w+)/);\n  var match = url.match(regex)[0].replace('offset=', '');\n  return match;\n}\nexport default {\n  forEach: forEach,\n  decodeJWT: decodeJWT,\n  getConfig: getConfig,\n  capitalize: capitalize,\n  encodeItem: encodeItem,\n  decodeItem: decodeItem,\n  hasProtocol: hasProtocol,\n  getPortalURL: getPortalURL,\n  removeObjectKeys: removeObjectKeys,\n  convertToDotNotation: convertToDotNotation,\n  redirectOnResponseStatus: redirectOnResponseStatus,\n  getPluginIcon: getPluginIcon,\n  formatDate: formatDate,\n  deepIncludes: deepIncludes,\n  humanReadableDate: humanReadableDate,\n  getSome: getSome,\n  stripUrl: stripUrl,\n  getOffset: getOffset\n};",{"version":3,"sources":["/Users/ksagar/vueproj/sample/src/helpers.js"],"names":["capitalizeRegEx","uuidRegEx","capitalize","str","replace","a","toUpperCase","isValidUuid","length","RegExp","test","getConfig","name","defaultValue","window","K_CONFIG","value","indexOf","JSON","parse","e","redirectOnResponseStatus","$router","status","location","options","opts","changeRoute","push","response","resp","call","redirectBackOnResponseStatus","go","getPortalURL","config","workspaceName","portal_gui_protocol","portal_gui_host","protocol","domain","hostname","listenerPort","portal_gui_listeners","filter","item","ssl","port","portal_gui_use_subdomains","decodeItem","decoded","atob","encodeItem","btoa","stringify","forEach","array","callback","scope","i","removeObjectKeys","object","key","obj","Object","keys","field","hasProtocol","protocolPattern","decodeJWT","token","base64Url","split","base64","convertToDotNotation","getPluginIcon","pluginName","icon","require","_","formatDate","timestamp","date","Date","day","getDate","toString","padStart","month","getMonth","year","getFullYear","time","toTimeString","substring","compareObjects","b","isObjectEmpty","unFlattenObject","result","reduce","acc","cur","curIdx","isNaN","deepIncludes","src","target","Array","Error","some","arr","includes","humanReadableDate","tdate","systemDate","userDate","K","navigator","userAgent","ie","match","diff","Math","floor","round","toLocaleDateString","getSome","original","desired","cleaned","constructor","assign","stripUrl","url","regex","getOffset"],"mappings":"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","sourcesContent":["const capitalizeRegEx = /(?:^|[\\s-:'\"])\\w/g\n\nexport const uuidRegEx = '[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}'\n\nexport function capitalize (str) {\n  return str.replace(capitalizeRegEx, (a) => a.toUpperCase())\n}\n\n/**\n * Test if a string is a valid uuid\n * @param {String} str - the string to test\n * @returns {boolean}\n */\nexport function isValidUuid (str) {\n  return str.length === 36 && new RegExp(`^${uuidRegEx}$`).test(str)\n}\n\nexport function getConfig (name, defaultValue) {\n  if (!window.K_CONFIG) {\n    return defaultValue\n  }\n\n  const value = window.K_CONFIG[name]\n  if (value === '' || value == null || value.indexOf('{{') === 0) {\n    return defaultValue\n  }\n\n  try {\n    // Properly handle booleans, numbers, arrays, and objects\n    return JSON.parse(value)\n  } catch (e) {\n    // Value must have be a string or empty\n    return value\n  }\n}\n\nexport function redirectOnResponseStatus ($router, status, location, options) {\n  const opts = options || {}\n  const changeRoute = opts.replace ? $router.replace : $router.push\n\n  return function (response) {\n    // Handle both success and error responses\n    const resp = response.response ? response.response : response\n\n    if (resp && resp.status === status) {\n      changeRoute.call($router, location)\n    }\n  }\n}\n\nexport function redirectBackOnResponseStatus ($router, status) {\n  return function (response) {\n    const resp = response.response ? response.response : response\n    if (resp && resp.status === status) {\n      $router.go(-1)\n    }\n  }\n}\n\nexport function getPortalURL (config, workspaceName) {\n  if (!config || !config.portal_gui_protocol || !config.portal_gui_host) {\n    const protocol = window.location.protocol\n    const domain = window.location.hostname\n    const listenerPort = protocol === 'https:'\n      ? config.portal_gui_listeners.filter(item => item.ssl === true)[0].port\n      : config.portal_gui_listeners.filter(item => item.ssl === false)[0].port\n\n    return `${protocol}//${domain}:${listenerPort}`\n  }\n\n  if (config.portal_gui_use_subdomains) {\n    return `${config.portal_gui_protocol}://${workspaceName}.${config.portal_gui_host}`\n  }\n\n  return `${config.portal_gui_protocol}://${config.portal_gui_host}/${workspaceName}`\n}\n\n/**\n * Base64 encoded string that is an object\n * @param {string} item\n * @returns {Object}\n */\nexport function decodeItem (item) {\n  const decoded = atob(item)\n  if (decoded && item) {\n    return JSON.parse(decoded)\n  }\n\n  return {}\n}\n\nexport function encodeItem (item) {\n  return btoa(JSON.stringify(item))\n}\n\nexport function forEach (array, callback, scope) {\n  for (let i = 0; i < array.length; i++) {\n    callback.call(scope, i, array[i])\n  }\n}\n\nexport function removeObjectKeys (object, key) {\n  const obj = object\n\n  Object.keys(obj).forEach(field => {\n    if (field.indexOf(key) === 0) {\n      delete obj[field]\n    }\n  })\n\n  return obj\n}\n\n/**\n * Check if string has a protocol (e.g. http or https)\n * @param {String} str the string in question\n */\nexport function hasProtocol (str) {\n  const protocolPattern = /^https?:\\/\\//i\n\n  return protocolPattern.test(str)\n}\n\nexport function decodeJWT (token) {\n  const base64Url = token.split('.')[1]\n  const base64 = base64Url.replace('-', '+').replace('_', '/')\n\n  return JSON.parse(window.atob(base64))\n}\n\nexport function convertToDotNotation (key) {\n  return key.replace(/-/g, '.')\n}\n\nexport function getPluginIcon (pluginName) {\n  let icon\n\n  try {\n    icon = require(`./assets/images/plugin-icons/${pluginName}.png`)\n  } catch (_) {\n    icon = require('./assets/images/plugin-icons/missing.png')\n  }\n\n  return icon\n}\n\n/**\n * Formats a unix timestamp into a formatted date string\n * @param {Number} timestamp a unix timestamp in seconds\n * @returns a date string with format YYYY-MM-DD HH:mm:ss ZZ\n */\nexport function formatDate (timestamp) {\n  const date = new Date(timestamp * 1000)\n  const day = date.getDate().toString().padStart(2, 0)\n  const month = (date.getMonth() + 1).toString().padStart(2, 0)\n  const year = date.getFullYear()\n  const time = date.toTimeString().split(' ')\n\n  return year + '-' + month + '-' + day + ' ' + time[0] + ' ' + time[1].substring(3, time[1].length)\n}\n\n/**\n * Compares two objects\n * @param {Object} Object A\n * @param {Object} Object B\n * @return {Boolean}\n */\nexport function compareObjects (a, b) {\n  return JSON.stringify(a) === JSON.stringify(b)\n}\n\n/**\n * A method to easily check if an object is empty or not\n * @param {Object} Object to check\n * @return {Boolean}\n */\nexport function isObjectEmpty (obj) {\n  return Object.keys(obj).length === 0\n}\n\n/**\n * Takes an object with dot notated keys (key.nested.values)\n * and returns an object with nested objects (key: { nested: values })\n * @param {Object} obj\n * @returns {Object}\n */\nexport function unFlattenObject (obj) {\n  const result = {}\n\n  // Loop object and reduce each key to build\n  // nested structure\n  for (const key in obj) {\n    const keys = key.split('.')\n\n    keys.reduce((acc, cur, curIdx) => {\n      return acc[cur] ||\n        // If current key in acc is the next\n        // item in the split array (dot notation)\n        // set its value\n        (acc[cur] = isNaN(keys[curIdx + 1])\n          ? (keys.length - 1 === curIdx ? obj[key] : {})\n          : [])\n    }, result)\n  }\n\n  return result\n}\n\n/**\n * checks \"target\" children is included in the array \"src\"\n * if the \"target\" is an array\n * then recursively search into it\n * @param {Array} src\n * @param {Array} target\n * @returns {Boolean}\n */\nexport function deepIncludes (src, target) {\n  if (!(src instanceof Array)) throw new Error('Params[0] needs to be an Array')\n\n  if (target instanceof Array) return target.some(arr => deepIncludes(src, arr))\n\n  return src.includes(target)\n}\n\n/**\n * =============================================================================\n * Kuma Helpers\n * =============================================================================\n */\n\n/**\n * Outputs a friendly human-readable timeframe between now and the date string entered\n * @param {String} tdate\n */\nexport function humanReadableDate (tdate) {\n  let systemDate = new Date(Date.parse(tdate))\n  const userDate = new Date()\n\n  const K = () => {\n    const a = navigator.userAgent\n\n    return {\n      ie: a.match(/MSIE\\s([^]*)/)\n    }\n  }\n\n  if (K.ie) {\n    systemDate = Date.parse(tdate.replace(/( \\+)/, ' UTC$1'))\n  }\n\n  const diff = Math.floor((userDate - systemDate) / 1000)\n\n  if (diff <= 1) {\n    return 'just now'\n  }\n\n  if (diff < 20) {\n    return diff + ' seconds ago'\n  }\n\n  if (diff < 40) {\n    return 'half a minute ago'\n  }\n\n  if (diff < 60) {\n    return 'less than a minute ago'\n  }\n\n  if (diff <= 90) {\n    return 'one minute ago'\n  }\n\n  if (diff <= 3540) {\n    return Math.round(diff / 60) + ' minutes ago'\n  }\n\n  if (diff <= 5400) {\n    return '1 hour ago'\n  }\n\n  if (diff <= 86400) {\n    return Math.round(diff / 3600) + ' hours ago'\n  }\n\n  if (diff <= 129600) {\n    return '1 day ago'\n  }\n\n  if (diff < 604800) {\n    return Math.round(diff / 86400) + ' days ago'\n  }\n\n  if (diff <= 777600) {\n    return '1 week ago'\n  }\n\n  // return 'on ' + systemDate\n  return `on ${systemDate.toLocaleDateString()}`\n}\n\n/**\n * Takes an object or array and only returns the keys and\n * values you want based on the `items` value.\n * @param {Object, Array} original\n * @param {Object} desired\n */\nexport function getSome (original, desired) {\n  // we have to determine if we're dealing with an array or an object\n  const cleaned = (original && typeof original === 'object' && original.constructor === Array) ? Object.assign({}, ...original) : original\n\n  return desired.reduce((obj, key) => ({ ...obj, [key]: cleaned[key] }), {})\n}\n\n/**\n * stripUrl\n *\n * Returns all of a URL after the last slash so that it does not\n * include the root of the URL that we don't need (e.g. when fetching from\n * an API).\n *\n * @param {String} url\n */\nexport function stripUrl (url) {\n  const regex = new RegExp(/([^\\/]+$)/g)\n  const match = url.match(regex)[0]\n\n  return match\n}\n\n/**\n * getOffset\n *\n * Returns the offset from an API query so that it can be used\n * for things like next and prev controls in pagination.\n *\n * @param {String} url The URL you want to find `offset` in and\n * simply return the value for.\n */\nexport function getOffset (url) {\n  const regex = new RegExp(/offset=(\\w+)/)\n  const match = url.match(regex)[0].replace('offset=', '')\n\n  return match\n}\n\nexport default {\n  forEach,\n  decodeJWT,\n  getConfig,\n  capitalize,\n  encodeItem,\n  decodeItem,\n  hasProtocol,\n  getPortalURL,\n  removeObjectKeys,\n  convertToDotNotation,\n  redirectOnResponseStatus,\n  getPluginIcon,\n  formatDate,\n  deepIncludes,\n  humanReadableDate,\n  getSome,\n  stripUrl,\n  getOffset\n}\n"]}]}