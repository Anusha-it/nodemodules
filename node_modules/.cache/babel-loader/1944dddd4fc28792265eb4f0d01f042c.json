{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js!/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/components/KLoader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/components/KLoader.vue","mtime":1589345021599},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  data: function data() {\n    return {\n      progress: 10\n    };\n  },\n  computed: {\n    loading: function loading() {\n      return this.$store.state.globalLoading;\n    }\n  },\n  watch: {\n    loading: function loading(newVal) {\n      if (!newVal) {\n        this.progress = 100;\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    var timer = setInterval(function () {\n      if (_this.progress >= 100) {\n        clearInterval(timer);\n        _this.progress = 100;\n      }\n\n      _this.progress += Math.ceil(Math.random(10) * 30);\n    }, 150);\n  }\n};",{"version":3,"sources":["KLoader.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAcA,eAAA;AACA,EAAA,IADA,kBACA;AACA,WAAA;AACA,MAAA,QAAA,EAAA;AADA,KAAA;AAGA,GALA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,OADA,qBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,aAAA;AACA;AAHA,GAPA;AAaA,EAAA,KAAA,EAAA;AACA,IAAA,OADA,mBACA,MADA,EACA;AACA,UAAA,CAAA,MAAA,EAAA;AACA,aAAA,QAAA,GAAA,GAAA;AACA;AACA;AALA,GAbA;AAqBA,EAAA,OArBA,qBAqBA;AAAA;;AACA,QAAA,KAAA,GAAA,WAAA,CAAA,YAAA;AACA,UAAA,KAAA,CAAA,QAAA,IAAA,GAAA,EAAA;AACA,QAAA,aAAA,CAAA,KAAA,CAAA;AACA,QAAA,KAAA,CAAA,QAAA,GAAA,GAAA;AACA;;AAEA,MAAA,KAAA,CAAA,QAAA,IAAA,IAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,EAAA,IAAA,EAAA,CAAA;AACA,KAPA,EAOA,GAPA,CAAA;AAQA;AA9BA,CAAA","sourcesContent":["<template>\n  <div class=\"loading-container\">\n    <img src=\"./img.gif\">\n    <div class=\"progress\">\n      <div\n        :style=\"{ width: `${progress}%` }\"\n        class=\"progress-bar\"\n        role=\"progressbar\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data () {\n    return {\n      progress: 10\n    }\n  },\n\n  computed: {\n    loading () {\n      return this.$store.state.globalLoading\n    }\n  },\n\n  watch: {\n    loading (newVal) {\n      if (!newVal) {\n        this.progress = 100\n      }\n    }\n  },\n\n  mounted () {\n    const timer = setInterval(() => {\n      if (this.progress >= 100) {\n        clearInterval(timer)\n        this.progress = 100\n      }\n\n      this.progress += Math.ceil(Math.random(10) * 30)\n    }, 150)\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.loading-container {\n  display: flex;\n  max-width: 350px;\n  align-items: center;\n  flex-direction: column;\n  .progress {\n    margin-top: 1rem;\n    width: 130%;\n    background-color: #e6e6e6;\n    .progress-bar {\n      height: 5px;\n      background-color: #0d93f2;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/components"}]}