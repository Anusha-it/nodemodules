{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js!/Users/ksagar/vueproj/sample/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/ksagar/vueproj/sample/src/services/restClient.js","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/services/restClient.js","mtime":1589520858165},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.object.keys\";\nimport \"core-js/modules/web.dom.iterable\";\nimport _defineProperty from \"/Users/ksagar/vueproj/sample/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/ksagar/vueproj/sample/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/ksagar/vueproj/sample/node_modules/@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ksagar/vueproj/sample/node_modules/@babel/runtime-corejs2/helpers/esm/createClass\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from 'axios';\nimport Mock from '@/services/mock';\n\nvar RestClient = /*#__PURE__*/function () {\n  function RestClient(options) {\n    _classCallCheck(this, RestClient);\n\n    var opts = options || {}; // this.host = opts.url\n    // leave this blank!\n\n    this.headers = {}; // RestClient.setupMocks(opts.injectMocks)\n\n    /**\n     * We no longer need to run this because the setup is done\n     * at app launch before anything else happens.\n     */\n    // RestClient.apiConfig()\n\n    RestClient.setupMocks(opts.injectMocks);\n    this.client = RestClient.axiosInit();\n    this.clientConfig = RestClient.kumaClientConfig();\n  }\n  /**\n   * axiosInit\n   *\n   * This function creates the Axios endpoint with the\n   * value from localStorage\n   */\n\n\n  _createClass(RestClient, [{\n    key: \"buildUrl\",\n    value: function buildUrl(path) {\n      return \"\".concat(this.host).concat(path);\n    }\n    /** fetch the status information of Kuma */\n\n  }, {\n    key: \"status\",\n    value: function () {\n      var _status = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(path, options) {\n        var opts, url, client;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return options;\n\n              case 2:\n                _context.t0 = _context.sent;\n\n                if (_context.t0) {\n                  _context.next = 5;\n                  break;\n                }\n\n                _context.t0 = {};\n\n              case 5:\n                opts = _context.t0;\n                _context.next = 8;\n                return path;\n\n              case 8:\n                url = _context.sent;\n                _context.next = 11;\n                return this.client;\n\n              case 11:\n                client = _context.sent;\n                return _context.abrupt(\"return\", client.get(url, opts).then(function (response) {\n                  return response.statusText;\n                }).catch(function (error) {\n                  console.error(error);\n                  return error;\n                }));\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function status(_x, _x2) {\n        return _status.apply(this, arguments);\n      }\n\n      return status;\n    }()\n    /** fetch all Kuma API endpoints */\n\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(path, options) {\n        var opts, url, client;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return options;\n\n              case 2:\n                _context2.t0 = _context2.sent;\n\n                if (_context2.t0) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.t0 = {};\n\n              case 5:\n                opts = _context2.t0;\n                _context2.next = 8;\n                return path;\n\n              case 8:\n                url = _context2.sent;\n                _context2.next = 11;\n                return this.client;\n\n              case 11:\n                client = _context2.sent;\n                return _context2.abrupt(\"return\", client.get(url, opts).then(function (response) {\n                  var data = response.data;\n                  return data;\n                }).catch(function (error) {\n                  console.error(error);\n                }));\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function get(_x3, _x4) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n    /** fetch all Kuma API endpoints */\n\n  }, {\n    key: \"getConfig\",\n    value: function () {\n      var _getConfig = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var client;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.clientConfig;\n\n              case 2:\n                client = _context3.sent;\n                return _context3.abrupt(\"return\", client.get('/').then(function (response) {\n                  var data = response.data;\n                  return data;\n                }).catch(function (error) {\n                  console.error(error);\n                }));\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getConfig() {\n        return _getConfig.apply(this, arguments);\n      }\n\n      return getConfig;\n    }()\n  }], [{\n    key: \"axiosInit\",\n    value: function axiosInit() {\n      var apiUrlFromLS = localStorage.getItem('kumaApiUrl'); // eslint-disable-next-line no-unused-vars\n\n      var kumaEnvFromLS = localStorage.getItem('kumaEnv');\n      return axios.create(_objectSpread({\n        baseURL: apiUrlFromLS,\n        headers: this.headers\n      }, this.axiosConfig));\n    }\n    /**\n     * kumaClientConfig\n     *\n     * This function creates the Axios endpoint for\n     * fetching data from the Kuma config. It contains\n     * information that goes beyond simply providing\n     * our app with the API URL endpoint and simple info.\n     */\n\n  }, {\n    key: \"kumaClientConfig\",\n    value: function kumaClientConfig() {\n      var configUrl = process.env.VUE_APP_GENERAL_CONFIG;\n      return axios.create(_objectSpread({\n        baseURL: configUrl\n      }, this.axiosConfig));\n    }\n    /**\n     * Setup mock endpoints that override axios calls\n     * @param {Object} injectMocks - the mock endpoint functions defined by any\n     * external plugins - if they exist. If not, then it passes the real (unmocked) response.\n     */\n\n  }, {\n    key: \"setupMocks\",\n    value: function setupMocks(injectMocks) {\n      var mock = new Mock(axios);\n\n      if (process.env.VUE_APP_MOCK_API_ENABLED === 'true') {\n        mock.setupMockEndpoints();\n      } else {\n        if (injectMocks && injectMocks.length) {\n          injectMocks.forEach(function (injectedMock) {\n            injectedMock(mock.mock);\n          });\n        }\n\n        mock.setupPluginMocks();\n      }\n    }\n  }]);\n\n  return RestClient;\n}();\n\nexport { RestClient as default };",{"version":3,"sources":["/Users/ksagar/vueproj/sample/src/services/restClient.js"],"names":["axios","Mock","RestClient","options","opts","headers","setupMocks","injectMocks","client","axiosInit","clientConfig","kumaClientConfig","path","host","url","get","then","response","statusText","catch","error","console","data","apiUrlFromLS","localStorage","getItem","kumaEnvFromLS","create","baseURL","axiosConfig","configUrl","process","env","VUE_APP_GENERAL_CONFIG","mock","VUE_APP_MOCK_API_ENABLED","setupMockEndpoints","length","forEach","injectedMock","setupPluginMocks"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport Mock from '@/services/mock'\n\nexport default class RestClient {\n  constructor (options) {\n    const opts = options || {}\n\n    // this.host = opts.url\n\n    // leave this blank!\n    this.headers = {}\n\n    // RestClient.setupMocks(opts.injectMocks)\n\n    /**\n     * We no longer need to run this because the setup is done\n     * at app launch before anything else happens.\n     */\n    // RestClient.apiConfig()\n\n    RestClient.setupMocks(opts.injectMocks)\n    this.client = RestClient.axiosInit()\n    this.clientConfig = RestClient.kumaClientConfig()\n  }\n\n  /**\n   * axiosInit\n   *\n   * This function creates the Axios endpoint with the\n   * value from localStorage\n   */\n  static axiosInit () {\n    const apiUrlFromLS = localStorage.getItem('kumaApiUrl')\n    // eslint-disable-next-line no-unused-vars\n    const kumaEnvFromLS = localStorage.getItem('kumaEnv')\n\n    return axios.create({\n      baseURL: apiUrlFromLS,\n      headers: this.headers,\n      ...this.axiosConfig\n    })\n  }\n\n  /**\n   * kumaClientConfig\n   *\n   * This function creates the Axios endpoint for\n   * fetching data from the Kuma config. It contains\n   * information that goes beyond simply providing\n   * our app with the API URL endpoint and simple info.\n   */\n  static kumaClientConfig () {\n    const configUrl = process.env.VUE_APP_GENERAL_CONFIG\n\n    return axios.create({\n      baseURL: configUrl,\n      ...this.axiosConfig\n    })\n  }\n\n  /**\n   * Setup mock endpoints that override axios calls\n   * @param {Object} injectMocks - the mock endpoint functions defined by any\n   * external plugins - if they exist. If not, then it passes the real (unmocked) response.\n   */\n  static setupMocks (injectMocks) {\n    const mock = new Mock(axios)\n    if (process.env.VUE_APP_MOCK_API_ENABLED === 'true') {\n      mock.setupMockEndpoints()\n    } else {\n      if (injectMocks && injectMocks.length) {\n        injectMocks.forEach(injectedMock => {\n          injectedMock(mock.mock)\n        })\n      }\n\n      mock.setupPluginMocks()\n    }\n  }\n\n  buildUrl (path) {\n    return `${this.host}${path}`\n  }\n\n  /** fetch the status information of Kuma */\n  async status (path, options) {\n    const opts = await options || {}\n    const url = await path\n    const client = await this.client\n\n    return client.get(url, opts)\n      .then(response => {\n        return response.statusText\n      })\n      .catch(error => {\n        console.error(error)\n\n        return error\n      })\n  }\n\n  /** fetch all Kuma API endpoints */\n  async get (path, options) {\n    const opts = await options || {}\n    // const url = this.buildUrl(path)\n    const url = await path\n    const client = await this.client\n\n    return client.get(url, opts)\n      .then(response => {\n        const data = response.data\n\n        return data\n      })\n      .catch(error => {\n        console.error(error)\n      })\n  }\n\n  /** fetch all Kuma API endpoints */\n  async getConfig () {\n    const client = await this.clientConfig\n\n    return client.get('/')\n      .then(response => {\n        const data = response.data\n\n        return data\n      })\n      .catch(error => {\n        console.error(error)\n      })\n  }\n}\n"]}]}