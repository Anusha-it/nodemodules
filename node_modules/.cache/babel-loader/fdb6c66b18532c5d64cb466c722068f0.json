{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js!/Users/ksagar/vueproj/sample/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/Users/ksagar/vueproj/sample/src/mixins/EntitySorter.js","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/mixins/EntitySorter.js","mtime":1589260598000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.sort\";\n\n/**\n * EntitySorter\n *\n * A quick mixin that will sort our entities by name\n * and mesh. Not very flexible but it's used heavily\n * in the GUI, so it was best as a mixin.\n */\nexport default {\n  methods: {\n    sortEntities: function sortEntities(items) {\n      var sorted = items.sort(function (a, b) {\n        return a.name > b.name ? 1 : a.name === b.name ? a.mesh > b.mesh ? 1 : -1 : -1;\n      });\n      return sorted;\n    }\n  }\n};",{"version":3,"sources":["/Users/ksagar/vueproj/sample/src/mixins/EntitySorter.js"],"names":["methods","sortEntities","items","sorted","sort","a","b","name","mesh"],"mappings":";;;AAAA;;;;;;;AAQA,eAAe;AACbA,EAAAA,OAAO,EAAE;AACPC,IAAAA,YADO,wBACOC,KADP,EACc;AACnB,UAAMC,MAAM,GAAGD,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,eAAWD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAAZ,GAAoB,CAApB,GAAyBF,CAAC,CAACE,IAAF,KAAWD,CAAC,CAACC,IAAd,GAAwBF,CAAC,CAACG,IAAF,GAASF,CAAC,CAACE,IAAZ,GAAoB,CAApB,GAAwB,CAAC,CAAhD,GAAqD,CAAC,CAAxF;AAAA,OAAX,CAAf;AAEA,aAAOL,MAAP;AACD;AALM;AADI,CAAf","sourcesContent":["/**\n * EntitySorter\n *\n * A quick mixin that will sort our entities by name\n * and mesh. Not very flexible but it's used heavily\n * in the GUI, so it was best as a mixin.\n */\n\nexport default {\n  methods: {\n    sortEntities (items) {\n      const sorted = items.sort((a, b) => (a.name > b.name) ? 1 : (a.name === b.name) ? ((a.mesh > b.mesh) ? 1 : -1) : -1)\n\n      return sorted\n    }\n  }\n}\n"]}]}