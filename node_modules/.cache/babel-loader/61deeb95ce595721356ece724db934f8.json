{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js!/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/views/Overview.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/views/Overview.vue","mtime":1589970418420},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/ksagar/vueproj/sample/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters, mapMutations, mapState } from 'vuex';\nimport { getOffset } from '@/helpers';\nimport FrameSkeleton from '@/components/Skeletons/FrameSkeleton';\nimport Pagination from '@/components/Pagination'; // import PageHeader from '@/components/Utils/PageHeader.vue'\n// import Breadcrumbs from '@/components/Breadcrumbs.vue'\n// import MetricGrid from '@/components/Metrics/MetricGrid.vue'\n\nimport DataOverview from '@/components/Skeletons/DataOverview.vue'; // import CardSkeleton from '@/components/Skeletons/CardSkeleton'\n// import KNav from '@/components/Sidebar/KNav'\n\nimport SidebarMenu from '@/components/Sidebar/SidebarMenu'; // import CollapseToggle from '@/components/Sidebar/CollapseToggle'\n// import MeshSelector from '@/components/Utils/MeshSelector'\n\nimport { getItemFromStorage, setItemToStorage } from '@/Cache';\nimport VueFormGenerator from 'vue-form-generator';\nimport { FormWizard, TabContent } from 'vue-form-wizard';\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nexport default {\n  name: 'Overview',\n  metaInfo: function metaInfo() {\n    return {\n      title: this.$route.meta.title\n    };\n  },\n  components: {\n    FrameSkeleton: FrameSkeleton,\n    FormWizard: FormWizard,\n    TabContent: TabContent,\n    Pagination: Pagination,\n    // PageHeader,\n    // Breadcrumbs,\n    // MetricGrid,\n    DataOverview: DataOverview,\n    // CardSkeleton,\n    SidebarMenu: SidebarMenu // CollapseToggle\n    // MeshSelector\n\n  },\n  data: function data() {\n    return {\n      title: 'Please follow the below steps',\n      model: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        streetName: '',\n        streetNumber: '',\n        city: '',\n        country: ''\n      },\n      formOptions: {\n        validationErrorClass: 'has-error',\n        validationSuccessClass: 'has-success',\n        validateAfterChanged: true\n      },\n      firstTabSchema: {\n        fields: [{\n          type: 'input',\n          inputType: 'text',\n          label: 'SID',\n          model: 'firstName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        }, {\n          type: 'input',\n          inputType: 'text',\n          label: 'SLID name',\n          model: 'lastName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        }, {\n          type: 'input',\n          inputType: 'text',\n          label: 'FID name',\n          model: 'lastName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        }]\n      },\n      isCollapsed: false,\n      sidebarSavedState: null,\n      toggleWorkspaces: false,\n      hovering: false,\n      isLoading: true,\n      isEmpty: false,\n      hasError: false,\n      tableDataIsEmpty: false,\n      empty_state: {\n        title: 'No Data',\n        message: 'There are no Meshes present.'\n      },\n      tableData: {\n        headers: [{\n          label: 'Mesh',\n          key: 'name'\n        }, {\n          label: 'Online Dataplanes',\n          key: 'onlineDpCount'\n        }],\n        data: []\n      },\n      pageSize: 10,\n      pageOffset: null,\n      next: null,\n      hasNext: false,\n      previous: []\n    };\n  },\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters({\n    title: 'getTagline',\n    dpList: 'getDataplanesList',\n    environment: 'getEnvironment'\n  })), mapState('sidebar', {\n    menu: function menu(state) {\n      return state.menu;\n    }\n  })), {}, {\n    /**\n     * Main property for items in the sidebar menu. Filters out menu.js items by\n     * RBAC permissions and fetches Kong Admin Plugin routes\n     * @returns {{sections:Array<MenuItem>}}\n     */\n    menuList: function menuList() {\n      // get routes allowed by rbac\n      // const routes = this.$rbac.filterRoutes(this.perms, this.$router.allRoutes,\n      //   this.currentWorkspace && this.currentWorkspace.name)\n      // const routes = this.$router.allRoutes\n      var filteredMenu = JSON.parse(JSON.stringify(this.menu));\n      return filteredMenu;\n    },\n    lastMenuList: function lastMenuList() {\n      return Object.keys(this.menuList.sections).length - 1;\n    },\n    meshList: function meshList() {\n      return this.$store.state.meshes;\n    },\n    overviewMetrics: function overviewMetrics() {\n      return [{\n        metric: 'Meshes',\n        value: this.$store.state.totalMeshCount\n      }, {\n        metric: 'Dataplanes',\n        value: this.$store.state.totalDataplaneCount\n      }, {\n        metric: 'Health Checks',\n        value: this.$store.state.totalHealthCheckCount\n      }, {\n        metric: 'Proxy Templates',\n        value: this.$store.state.totalProxyTemplateCount\n      }, {\n        metric: 'Traffic Logs',\n        value: this.$store.state.totalTrafficLogCount\n      }, {\n        metric: 'Traffic Permissions',\n        value: this.$store.state.totalTrafficPermissionCount\n      }, {\n        metric: 'Traffic Routes',\n        value: this.$store.state.totalTrafficRouteCount\n      }, {\n        metric: 'Traffic Traces',\n        value: this.$store.state.totalTrafficTraceCount\n      }, {\n        metric: 'Fault Injections',\n        value: this.$store.state.totalFaultInjectionCount\n      }];\n    },\n    dataplaneWizardRoute: function dataplaneWizardRoute() {\n      // we change the route to the Dataplane\n      // wizard based on environment.\n      if (this.environment === 'universal') {\n        return {\n          name: 'universal-dataplane'\n        };\n      } else {\n        return {\n          name: 'kubernetes-dataplane'\n        };\n      }\n    }\n  }),\n  watch: {\n    '$route': function $route(to, from) {\n      this.init();\n    }\n  },\n  mounted: function mounted() {\n    var sidebarState = getItemFromStorage('sidebarCollapsed');\n\n    if (document.documentElement.clientWidth <= 900) {\n      this.isCollapsed = true;\n    } else {\n      this.isCollapsed = sidebarState || false;\n    }\n\n    window.addEventListener('resize', this.handleResize);\n  },\n  beforeDestroy: function beforeDestroy() {\n    window.removeEventListener('resize', this.handleResize);\n  },\n  beforeMount: function beforeMount() {\n    this.init();\n  },\n  methods: _objectSpread(_objectSpread({\n    init: function init() {\n      this.getCounts();\n      this.loadData();\n    },\n    isLastStep: function isLastStep() {\n      if (this.$ref.wizard) {\n        return this.$ref.wizard.isLastStep;\n      }\n\n      return false;\n    },\n    onComplete: function onComplete() {\n      alert('Yay. Done!');\n    },\n    validateFirstTab: function validateFirstTab() {\n      return this.$refs.firstTabForm.validate();\n    }\n  }, mapMutations('sidebar', ['setMenu'])), {}, {\n    handleToggleCollapse: function handleToggleCollapse() {\n      this.isCollapsed = !this.isCollapsed;\n      this.setCollapsedState(this.isCollapsed);\n    },\n    isHovering: function isHovering(a) {\n      this.hovering = a;\n    },\n    setCollapsedState: function setCollapsedState(collapsedState) {\n      setItemToStorage('sidebarCollapsed', collapsedState);\n    },\n    handleResize: function handleResize() {\n      var sidebarState = getItemFromStorage('sidebarCollapsed');\n\n      if (document.documentElement.clientWidth <= 900) {\n        this.isCollapsed = sidebarState || true;\n      }\n\n      if (document.documentElement.clientWidth >= 900) {\n        this.isCollapsed = sidebarState || false;\n      }\n    },\n    goToPreviousPage: function goToPreviousPage() {\n      this.pageOffset = this.previous.pop();\n      this.next = null;\n      this.loadData();\n    },\n    goToNextPage: function goToNextPage() {\n      this.previous.push(this.pageOffset);\n      this.pageOffset = this.next;\n      this.next = null;\n      this.loadData();\n    },\n    getCounts: function getCounts() {\n      // total Mesh count\n      this.$store.dispatch('getMeshTotalCount'); // total Dataplane count\n\n      this.$store.dispatch('getDataplaneTotalCount'); // total Health Check count\n\n      this.$store.dispatch('getHealthCheckTotalCount'); // total Proxy Template count\n\n      this.$store.dispatch('getProxyTemplateTotalCount'); // total Traffic Log count\n\n      this.$store.dispatch('getTrafficLogTotalCount'); // total Traffic Permission count\n\n      this.$store.dispatch('getTrafficPermissionTotalCount'); // total Traffic Route count\n\n      this.$store.dispatch('getTrafficRouteTotalCount'); // total Traffic Trace count\n\n      this.$store.dispatch('getTrafficTraceTotalCount'); // total Fault Injection count\n\n      this.$store.dispatch('getFaultInjectionTotalCount');\n    },\n    loadData: function loadData() {\n      var _this = this;\n\n      this.isLoading = true;\n      this.isEmpty = false; // prepare and populate the table data\n\n      var getMeshData = function getMeshData() {\n        _this.$store.dispatch('getAllDataplanes');\n\n        var dpList = _this.dpList;\n        var params = {\n          size: _this.pageSize,\n          offset: _this.pageOffset\n        };\n        return _this.$api.getAllMeshes(params).then(function (response) {\n          var items = response.items;\n          var itemStatus = []; // check to see if the `next` url is present\n\n          if (response.next) {\n            _this.next = getOffset(response.next);\n            _this.hasNext = true;\n          } else {\n            _this.hasNext = false;\n          }\n\n          var _loop = function _loop(i) {\n            var mesh = items[i].name;\n\n            var dpStatus = function dpStatus() {\n              var totalDpInMesh = dpList.filter(function (x) {\n                return x.mesh === mesh;\n              }).length;\n              var onlineDpCount = dpList.filter(function (x) {\n                return x.status === 'Online' && x.mesh === mesh;\n              }).length;\n\n              if (totalDpInMesh === 0) {\n                return 'No Dataplanes';\n              }\n\n              return \"\".concat(onlineDpCount, \" of \").concat(totalDpInMesh);\n            };\n\n            itemStatus.push({\n              name: mesh,\n              onlineDpCount: dpStatus()\n            });\n          };\n\n          for (var i = 0; i < items.length; i++) {\n            _loop(i);\n          }\n\n          if (items && items.length) {\n            _this.tableData.data = [].concat(itemStatus);\n            _this.tableDataIsEmpty = false;\n          } else {\n            _this.tableData.data = [];\n            _this.tableDataIsEmpty = true;\n          }\n        }).catch(function (error) {\n          _this.hasError = true;\n          console.error(error);\n        }).finally(function () {\n          setTimeout(function () {\n            _this.isLoading = false;\n          }, process.env.VUE_APP_DATA_TIMEOUT);\n        });\n      };\n\n      getMeshData();\n    }\n  })\n};",{"version":3,"sources":["Overview.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div\n    class=\"overview\"\n  >\n    <link\n      rel=\"stylesheet\"\n      href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\"\n    >\n    <div\n      class=\"white nopadding\"\n      style=\"background-size:100% 100%;color:blue;\"\n    >\n      <form-wizard\n        ref=\"wizard\"\n        color=\"#2d518a\"\n        shape=\"circle\"\n        error-color=\"#a94442\"\n        @on-complete=\"onComplete\"\n      >\n        <template\n          slot=\"step\"\n          scope=\"props\"\n        >\n          <wizard-step\n            :key=\"props.tab.title\"\n            :tab=\"props.tab\"\n            :transition=\"props.transition\"\n            :index=\"props.index\"\n          />\n        </template>\n        <h3 slot=\"title\">\n          Please follow the below steps\n        </h3>\n        <tab-content\n          title=\"Onboarding\"\n          icon=\"fa fa-arrow-circle-right\"\n          :before-change=\"validateFirstTab\"\n        >\n          <vue-form-generator\n            ref=\"firstTabForm\"\n            :model=\"model\"\n            :schema=\"firstTabSchema\"\n            :options=\"formOptions\"\n          />\n        </tab-content>\n        <tab-content\n          title=\"Manage Dataplanes\"\n          icon=\"ti-settings\"\n        >\n          <SidebarMenu\n            v-for=\"(menu, i) in menuList.sections\"\n            :key=\"i\"\n            :menu=\"menu\"\n            :trigger-hovering=\"isHovering\"\n            :index=\"i\"\n            :is-last=\"i === lastMenuList\"\n          />\n          <!-- metrics boxes -->\n\n          <FrameSkeleton>\n            <DataOverview\n              :has-error=\"hasError\"\n              :is-loading=\"isLoading\"\n              :is-empty=\"isEmpty\"\n              :empty-state=\"empty_state\"\n              :display-data-table=\"true\"\n              :table-data=\"tableData\"\n              :table-data-is-empty=\"tableDataIsEmpty\"\n              @reloadData=\"loadData\"\n            >\n              <template slot=\"pagination\">\n                <Pagination\n                  :has-previous=\"previous.length > 0\"\n                  :has-next=\"hasNext\"\n                  @next=\"goToNextPage\"\n                  @previous=\"goToPreviousPage\"\n                />\n              </template>\n            </DataOverview>\n          </FrameSkeleton>\n        </tab-content>\n        <template\n          slot=\"footer\"\n          scope=\"props\"\n        >\n          <div class=\"wizard-footer-left\">\n            <wizard-button\n              v-if=\"props.activeTabIndex > 0 && !props.isLastStep\"\n            >\n              Previous\n            </wizard-button>\n          </div>\n          <div class=\"wizard-footer-right\">\n            <wizard-button\n              v-if=\"!props.isLastStep\"\n              class=\"wizard-footer-right\"\n              :style=\"props.fillButtonStyle\"\n              @click.native=\"props.nextTab()\"\n            >\n              Next\n            </wizard-button>\n\n            <wizard-button\n              v-else\n              class=\"wizard-footer-right finish-button\"\n              :style=\"props.fillButtonStyle\"\n              @click.native=\"alert('Done')\"\n            >\n              {{ props.isLastStep ? 'Done' : 'Next' }}\n            </wizard-button>\n          </div>\n        </template>\n      </form-wizard>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapMutations, mapState } from 'vuex'\nimport { getOffset } from '@/helpers'\nimport FrameSkeleton from '@/components/Skeletons/FrameSkeleton'\nimport Pagination from '@/components/Pagination'\n// import PageHeader from '@/components/Utils/PageHeader.vue'\n// import Breadcrumbs from '@/components/Breadcrumbs.vue'\n// import MetricGrid from '@/components/Metrics/MetricGrid.vue'\nimport DataOverview from '@/components/Skeletons/DataOverview.vue'\n// import CardSkeleton from '@/components/Skeletons/CardSkeleton'\n// import KNav from '@/components/Sidebar/KNav'\nimport SidebarMenu from '@/components/Sidebar/SidebarMenu'\n// import CollapseToggle from '@/components/Sidebar/CollapseToggle'\n// import MeshSelector from '@/components/Utils/MeshSelector'\nimport { getItemFromStorage, setItemToStorage } from '@/Cache'\nimport VueFormGenerator from 'vue-form-generator'\nimport { FormWizard, TabContent } from 'vue-form-wizard'\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css'\nimport '@fortawesome/fontawesome-free/css/all.css'\nexport default {\n  name: 'Overview',\n  metaInfo () {\n    return {\n      title: this.$route.meta.title\n    }\n  },\n  components: {\n    FrameSkeleton,\n    FormWizard,\n    TabContent,\n    Pagination,\n    // PageHeader,\n    // Breadcrumbs,\n    // MetricGrid,\n    DataOverview,\n    // CardSkeleton,\n    SidebarMenu\n    // CollapseToggle\n    // MeshSelector\n  },\n  data () {\n    return {\n      title: 'Please follow the below steps',\n      model: {\n        firstName: '',\n        lastName: '',\n        email: '',\n        streetName: '',\n        streetNumber: '',\n        city: '',\n        country: ''\n      },\n      formOptions: {\n        validationErrorClass: 'has-error',\n        validationSuccessClass: 'has-success',\n        validateAfterChanged: true\n      },\n      firstTabSchema: {\n        fields: [{\n          type: 'input',\n          inputType: 'text',\n          label: 'SID',\n          model: 'firstName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        },\n        {\n          type: 'input',\n          inputType: 'text',\n          label: 'SLID name',\n          model: 'lastName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        },\n        {\n          type: 'input',\n          inputType: 'text',\n          label: 'FID name',\n          model: 'lastName',\n          required: true,\n          validator: VueFormGenerator.validators.string,\n          styleClasses: 'col-xs-6'\n        }\n        ]\n      },\n      isCollapsed: false,\n      sidebarSavedState: null,\n      toggleWorkspaces: false,\n      hovering: false,\n      isLoading: true,\n      isEmpty: false,\n      hasError: false,\n      tableDataIsEmpty: false,\n      empty_state: {\n        title: 'No Data',\n        message: 'There are no Meshes present.'\n      },\n      tableData: {\n        headers: [\n          { label: 'Mesh', key: 'name' },\n          { label: 'Online Dataplanes', key: 'onlineDpCount' }\n        ],\n        data: []\n      },\n      pageSize: 10,\n      pageOffset: null,\n      next: null,\n      hasNext: false,\n      previous: []\n    }\n  },\n  computed: {\n    ...mapGetters({\n      title: 'getTagline',\n      dpList: 'getDataplanesList',\n      environment: 'getEnvironment'\n    }),\n    ...mapState('sidebar', {\n      menu: state => state.menu\n    }),\n    /**\n     * Main property for items in the sidebar menu. Filters out menu.js items by\n     * RBAC permissions and fetches Kong Admin Plugin routes\n     * @returns {{sections:Array<MenuItem>}}\n     */\n    menuList () {\n      // get routes allowed by rbac\n      // const routes = this.$rbac.filterRoutes(this.perms, this.$router.allRoutes,\n      //   this.currentWorkspace && this.currentWorkspace.name)\n      // const routes = this.$router.allRoutes\n      const filteredMenu = JSON.parse(JSON.stringify(this.menu))\n\n      return filteredMenu\n    },\n    lastMenuList () {\n      return Object.keys(this.menuList.sections).length - 1\n    },\n    meshList () {\n      return this.$store.state.meshes\n    },\n    overviewMetrics () {\n      return [\n        {\n          metric: 'Meshes',\n          value: this.$store.state.totalMeshCount\n        },\n        {\n          metric: 'Dataplanes',\n          value: this.$store.state.totalDataplaneCount\n        },\n        {\n          metric: 'Health Checks',\n          value: this.$store.state.totalHealthCheckCount\n        },\n        {\n          metric: 'Proxy Templates',\n          value: this.$store.state.totalProxyTemplateCount\n        },\n        {\n          metric: 'Traffic Logs',\n          value: this.$store.state.totalTrafficLogCount\n        },\n        {\n          metric: 'Traffic Permissions',\n          value: this.$store.state.totalTrafficPermissionCount\n        },\n        {\n          metric: 'Traffic Routes',\n          value: this.$store.state.totalTrafficRouteCount\n        },\n        {\n          metric: 'Traffic Traces',\n          value: this.$store.state.totalTrafficTraceCount\n        },\n        {\n          metric: 'Fault Injections',\n          value: this.$store.state.totalFaultInjectionCount\n        }\n      ]\n    },\n    dataplaneWizardRoute () {\n      // we change the route to the Dataplane\n      // wizard based on environment.\n      if (this.environment === 'universal') {\n        return { name: 'universal-dataplane' }\n      } else {\n        return { name: 'kubernetes-dataplane' }\n      }\n    }\n  },\n\n  watch: {\n    '$route' (to, from) {\n      this.init()\n    }\n  },\n  mounted () {\n    const sidebarState = getItemFromStorage('sidebarCollapsed')\n    if (document.documentElement.clientWidth <= 900) {\n      this.isCollapsed = true\n    } else {\n      this.isCollapsed = sidebarState || false\n    }\n\n    window.addEventListener('resize', this.handleResize)\n  },\n  beforeDestroy () {\n    window.removeEventListener('resize', this.handleResize)\n  },\n  beforeMount () {\n    this.init()\n  },\n  methods: {\n    init () {\n      this.getCounts()\n      this.loadData()\n    },\n    isLastStep () {\n      if (this.$ref.wizard) {\n        return this.$ref.wizard.isLastStep\n      }\n\n      return false\n    },\n    onComplete: function () {\n      alert('Yay. Done!')\n    },\n    validateFirstTab: function () {\n      return this.$refs.firstTabForm.validate()\n    },\n    ...mapMutations('sidebar', [\n      'setMenu'\n    ]),\n    handleToggleCollapse () {\n      this.isCollapsed = !this.isCollapsed\n      this.setCollapsedState(this.isCollapsed)\n    },\n    isHovering (a) {\n      this.hovering = a\n    },\n    setCollapsedState (collapsedState) {\n      setItemToStorage('sidebarCollapsed', collapsedState)\n    },\n    handleResize () {\n      const sidebarState = getItemFromStorage('sidebarCollapsed')\n      if (document.documentElement.clientWidth <= 900) {\n        this.isCollapsed = sidebarState || true\n      }\n\n      if (document.documentElement.clientWidth >= 900) {\n        this.isCollapsed = sidebarState || false\n      }\n    },\n    goToPreviousPage () {\n      this.pageOffset = this.previous.pop()\n      this.next = null\n\n      this.loadData()\n    },\n    goToNextPage () {\n      this.previous.push(this.pageOffset)\n      this.pageOffset = this.next\n      this.next = null\n\n      this.loadData()\n    },\n    getCounts () {\n      // total Mesh count\n      this.$store.dispatch('getMeshTotalCount')\n\n      // total Dataplane count\n      this.$store.dispatch('getDataplaneTotalCount')\n\n      // total Health Check count\n      this.$store.dispatch('getHealthCheckTotalCount')\n\n      // total Proxy Template count\n      this.$store.dispatch('getProxyTemplateTotalCount')\n\n      // total Traffic Log count\n      this.$store.dispatch('getTrafficLogTotalCount')\n\n      // total Traffic Permission count\n      this.$store.dispatch('getTrafficPermissionTotalCount')\n\n      // total Traffic Route count\n      this.$store.dispatch('getTrafficRouteTotalCount')\n\n      // total Traffic Trace count\n      this.$store.dispatch('getTrafficTraceTotalCount')\n\n      // total Fault Injection count\n      this.$store.dispatch('getFaultInjectionTotalCount')\n    },\n    loadData () {\n      this.isLoading = true\n      this.isEmpty = false\n\n      // prepare and populate the table data\n      const getMeshData = () => {\n        this.$store.dispatch('getAllDataplanes')\n        const dpList = this.dpList\n\n        const params = {\n          size: this.pageSize,\n          offset: this.pageOffset\n        }\n\n        return this.$api.getAllMeshes(params)\n          .then(response => {\n            const items = response.items\n            const itemStatus = []\n\n            // check to see if the `next` url is present\n            if (response.next) {\n              this.next = getOffset(response.next)\n              this.hasNext = true\n            } else {\n              this.hasNext = false\n            }\n\n            for (let i = 0; i < items.length; i++) {\n              const mesh = items[i].name\n\n              const dpStatus = () => {\n                const totalDpInMesh = dpList.filter(x => x.mesh === mesh).length\n                const onlineDpCount = dpList.filter(x => x.status === 'Online' && x.mesh === mesh).length\n\n                if (totalDpInMesh === 0) {\n                  return 'No Dataplanes'\n                }\n\n                return `${onlineDpCount} of ${totalDpInMesh}`\n              }\n\n              itemStatus.push({\n                name: mesh,\n                onlineDpCount: dpStatus()\n              })\n            }\n\n            if (items && items.length) {\n              this.tableData.data = [...itemStatus]\n              this.tableDataIsEmpty = false\n            } else {\n              this.tableData.data = []\n              this.tableDataIsEmpty = true\n            }\n          })\n          .catch(error => {\n            this.hasError = true\n\n            console.error(error)\n          })\n          .finally(() => {\n            setTimeout(() => {\n              this.isLoading = false\n            }, process.env.VUE_APP_DATA_TIMEOUT)\n          })\n      }\n\n      getMeshData()\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.nopadding {\n  padding: 0;\n}\n\n.floatleft {\n  float: left;\n  margin: 2%;\n}\n.floatright {\n  float: right;\n  margin :2%;\n}\n.fullscreen {\n  height: 100%;\n  position: relative;\n}\n.fullscreen .header {\n  position: absolute;\n  bottom: 0;\n  text-align: center;\n  width: 100%;\n  color: #fff;\n  text-shadow: 0px 0px 2px #000;\n}\n#header {\n  background: rgba(255, 255, 255, .5);\n  padding: 60%;\n  border-spacing: 75px;\n  overflow: hidden;\n  height: 55px;\n  margin-bottom: 30px;\n  color: white;\n  background-image: url(\"./network2.gif\");\n}\n#header img {\n  float: left;\n  box-shadow: none;\n}\n#header ul {\n  list-style: none;\n  float: left;\n  padding-left: 10px;\n  margin-top: 15px;\n}\n#header ul li {\n  float: left;\n  margin-left: 10px;\n  font-size: 20px;\n}\n.nopadding {\n  padding: 0;\n}\n.white {\n  background: #eeeeec;\n  padding: 0;\n // background-size:100% 100%;\n //padding-bottom: 50px;\n}\n.more {\n  text-align: center;\n  font-size: 17px;\n}\n.more a {\n  color: #aaa;\n  text-decoration: none;\n  cursor: pointer;\n}\n.more a:hover {\n  color: rgb(44, 39, 89);\n}\nhtml {\n background-image: url(\"./network2.gif\");\n  background-size: 100%;\n}\n.empty-state-title {\n\n  .card-icon {\n    text-align: center;\n\n    img, svg {\n      display: block;\n      margin-left: auto;\n      margin-right: auto;\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/views"}]}