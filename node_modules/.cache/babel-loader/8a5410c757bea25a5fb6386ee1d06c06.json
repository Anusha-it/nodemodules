{"remainingRequest":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js!/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ksagar/vueproj/sample/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ksagar/vueproj/sample/src/App.vue","mtime":1589970266293},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ksagar/vueproj/sample/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"/Users/ksagar/vueproj/sample/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapState, mapGetters } from 'vuex';\nimport GlobalHeader from '@/components/Global/Header'; // import Sidebar from '@/components/Sidebar/Sidebar'\n\nimport KLoader from '@/components/KLoader';\nimport ApiErrorMessage from '@/components/Skeletons/ApiErrorMessage';\nexport default {\n  components: {\n    GlobalHeader: GlobalHeader,\n    // Sidebar,\n    KLoader: KLoader,\n    ApiErrorMessage: ApiErrorMessage\n  },\n  metaInfo: {\n    title: 'Home',\n    titleTemplate: '%s | Dataplane',\n    htmlAttrs: {\n      lang: 'en'\n    }\n  },\n  computed: _objectSpread(_objectSpread({}, mapState({\n    loading: function loading(state) {\n      return state.globalLoading;\n    }\n  })), mapGetters({\n    status: 'getStatus'\n  })),\n  watch: {\n    '$route': function $route(to, from) {\n      this.bootstrap();\n    }\n  },\n  beforeMount: function beforeMount() {\n    this.bootstrap();\n  },\n  methods: {\n    bootstrap: function bootstrap() {\n      var _this = this;\n\n      // check the API status before we do anything else\n      this.$store.dispatch('getStatus').then(function () {\n        // only dispatch these actions if the API is online\n        if (_this.$store.getters.getStatus === 'OK') {\n          // set the current environment\n          _this.$store.dispatch('updateEnvironment', localStorage.getItem('kumaEnv')); // fetch the mesh list\n\n\n          _this.$store.dispatch('fetchMeshList'); // fetch all dataplanes\n          // this.$store.dispatch('getAllDataplanes')\n          // fetch the version\n\n\n          _this.$store.dispatch('getVersion'); // fetch the tagline\n\n\n          _this.$store.dispatch('getTagline'); // fetch the config\n\n\n          _this.$store.dispatch('getConfig'); // set the selected mesh in localStorage\n\n\n          var mesh = function mesh() {\n            var lsMesh = localStorage.getItem('selectedMesh');\n            var routeMesh = _this.$route.params.mesh || null; // if the `mesh` param is present, use that\n\n            if (routeMesh) {\n              return routeMesh; // eslint-disable-next-line brace-style\n            } // or use what's available in localStorage\n            else if (lsMesh && lsMesh !== 'undefined' && lsMesh.length > 0) {\n                return lsMesh; // eslint-disable-next-line brace-style\n              } // otherwise, fall back to the default value from our VueX store\n              else {\n                  return _this.$store.getters.getSelectedMesh;\n                }\n          };\n\n          localStorage.setItem('selectedMesh', mesh());\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyCA,SAAA,QAAA,EAAA,UAAA,QAAA,MAAA;AACA,OAAA,YAAA,MAAA,4BAAA,C,CACA;;AACA,OAAA,OAAA,MAAA,sBAAA;AACA,OAAA,eAAA,MAAA,wCAAA;AAEA,eAAA;AACA,EAAA,UAAA,EAAA;AACA,IAAA,YAAA,EAAA,YADA;AAEA;AACA,IAAA,OAAA,EAAA,OAHA;AAIA,IAAA,eAAA,EAAA;AAJA,GADA;AAOA,EAAA,QAAA,EAAA;AACA,IAAA,KAAA,EAAA,MADA;AAEA,IAAA,aAAA,EAAA,gBAFA;AAGA,IAAA,SAAA,EAAA;AACA,MAAA,IAAA,EAAA;AADA;AAHA,GAPA;AAcA,EAAA,QAAA,kCACA,QAAA,CAAA;AACA,IAAA,OAAA,EAAA,iBAAA,KAAA;AAAA,aAAA,KAAA,CAAA,aAAA;AAAA;AADA,GAAA,CADA,GAIA,UAAA,CAAA;AACA,IAAA,MAAA,EAAA;AADA,GAAA,CAJA,CAdA;AAsBA,EAAA,KAAA,EAAA;AACA,YADA,kBACA,EADA,EACA,IADA,EACA;AACA,WAAA,SAAA;AACA;AAHA,GAtBA;AA2BA,EAAA,WA3BA,yBA2BA;AACA,SAAA,SAAA;AACA,GA7BA;AA8BA,EAAA,OAAA,EAAA;AACA,IAAA,SADA,uBACA;AAAA;;AACA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,WAAA,EACA,IADA,CACA,YAAA;AACA;AACA,YAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,SAAA,KAAA,IAAA,EAAA;AACA;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,mBAAA,EAAA,YAAA,CAAA,OAAA,CAAA,SAAA,CAAA,EAFA,CAIA;;;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,eAAA,EALA,CAOA;AACA;AAEA;;;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAXA,CAaA;;;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,YAAA,EAdA,CAgBA;;;AACA,UAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,WAAA,EAjBA,CAmBA;;;AACA,cAAA,IAAA,GAAA,SAAA,IAAA,GAAA;AACA,gBAAA,MAAA,GAAA,YAAA,CAAA,OAAA,CAAA,cAAA,CAAA;AACA,gBAAA,SAAA,GAAA,KAAA,CAAA,MAAA,CAAA,MAAA,CAAA,IAAA,IAAA,IAAA,CAFA,CAIA;;AACA,gBAAA,SAAA,EAAA;AACA,qBAAA,SAAA,CADA,CAEA;AACA,aAHA,CAIA;AAJA,iBAKA,IAAA,MAAA,IAAA,MAAA,KAAA,WAAA,IAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,uBAAA,MAAA,CADA,CAEA;AACA,eAHA,CAIA;AAJA,mBAKA;AACA,yBAAA,KAAA,CAAA,MAAA,CAAA,OAAA,CAAA,eAAA;AACA;AACA,WAlBA;;AAoBA,UAAA,YAAA,CAAA,OAAA,CAAA,cAAA,EAAA,IAAA,EAAA;AACA;AACA,OA7CA;AA8CA;AAjDA;AA9BA,CAAA","sourcesContent":["<template>\n  <div id=\"app\">\n    <div\n      class=\"fullscreen nopadding\"\n      style=\"color: white;\"\n      padding=\"100px\"\n      border-spacing=\"75px\"\n    >\n      <h1 style=\"padding:30px;background-image:url('./views/network2.gif');\">\n        SPYDER\n      </h1>\n    </div>\n    <global-header\n      v-if=\"!loading && loading !== null\"\n      :class=\"{ 'main-header--simple': $route.meta.simpleHeader }\"\n    />\n    <div class=\"main-content-container\">\n      <div\n        v-if=\"loading\"\n        class=\"full-screen\"\n      >\n        <KLoader />\n      </div>\n        <main\n          v-if=\"!loading && loading !== null\"\n          class=\"main-content\"\n        >\n          <div\n            v-if=\"status === 'OK'\"\n            class=\"page\"\n          >\n            <router-view />\n          </div>\n          <ApiErrorMessage v-else />\n        </main>\n      </div>\n      <div />\n  </div>\n</template>\n\n<script>\nimport { mapState, mapGetters } from 'vuex'\nimport GlobalHeader from '@/components/Global/Header'\n// import Sidebar from '@/components/Sidebar/Sidebar'\nimport KLoader from '@/components/KLoader'\nimport ApiErrorMessage from '@/components/Skeletons/ApiErrorMessage'\n\nexport default {\n  components: {\n    GlobalHeader,\n    // Sidebar,\n    KLoader,\n    ApiErrorMessage\n  },\n  metaInfo: {\n    title: 'Home',\n    titleTemplate: '%s | Dataplane',\n    htmlAttrs: {\n      lang: 'en'\n    }\n  },\n  computed: {\n    ...mapState({\n      loading: state => state.globalLoading\n    }),\n    ...mapGetters({\n      status: 'getStatus'\n    })\n  },\n  watch: {\n    '$route' (to, from) {\n      this.bootstrap()\n    }\n  },\n  beforeMount () {\n    this.bootstrap()\n  },\n  methods: {\n    bootstrap () {\n      // check the API status before we do anything else\n      this.$store.dispatch('getStatus')\n        .then(() => {\n          // only dispatch these actions if the API is online\n          if (this.$store.getters.getStatus === 'OK') {\n            // set the current environment\n            this.$store.dispatch('updateEnvironment', localStorage.getItem('kumaEnv'))\n\n            // fetch the mesh list\n            this.$store.dispatch('fetchMeshList')\n\n            // fetch all dataplanes\n            // this.$store.dispatch('getAllDataplanes')\n\n            // fetch the version\n            this.$store.dispatch('getVersion')\n\n            // fetch the tagline\n            this.$store.dispatch('getTagline')\n\n            // fetch the config\n            this.$store.dispatch('getConfig')\n\n            // set the selected mesh in localStorage\n            const mesh = () => {\n              const lsMesh = localStorage.getItem('selectedMesh')\n              const routeMesh = this.$route.params.mesh || null\n\n              // if the `mesh` param is present, use that\n              if (routeMesh) {\n                return routeMesh\n              // eslint-disable-next-line brace-style\n              }\n              // or use what's available in localStorage\n              else if (lsMesh && lsMesh !== 'undefined' && lsMesh.length > 0) {\n                return lsMesh\n              // eslint-disable-next-line brace-style\n              }\n              // otherwise, fall back to the default value from our VueX store\n              else {\n                return this.$store.getters.getSelectedMesh\n              }\n            }\n\n            localStorage.setItem('selectedMesh', mesh())\n          }\n        })\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.main-content {\n  padding: 44px;\n}\ndiv {\n  overflow: hidden;\n}\n.full-screen {\n  background: #fff;\n  position: fixed;\n  top: 4rem;\n  bottom: 0;\n  width: 100%;\n  z-index: 50000;\n  padding-top: 50px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n}\n\na {\n  color: #322bff;\n  text-decoration: underline;\n  transition: 500ms;\n}\na:hover {\n  color: #26a1ff;\n}\n\np {\n  padding: 0 5%;\n}\n\nimg {\n  box-shadow: 0px 0px 4px #000;\n   -webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */\n    filter: grayscale(100%);\n}\n\n#header {\n  background: rgba(255, 255, 255, .5);\n  padding: 1%;\n  overflow: hidden;\n  height: 55px;\n}\n#header img {\n  float: left;\n  box-shadow: none;\n}\n#header ul {\n  list-style: none;\n  float: left;\n  padding-left: 10px;\n  margin-top: 15px;\n}\n#header ul li {\n  float: left;\n  margin-left: 10px;\n  font-size: 20px;\n}\n\n.fullscreen {\n  height: 95%;\n  color:rgb(68, 83, 167);\n  position: relative;\n  font-size: 55px;\n   -webkit-filter: grayscale(100%); /* Safari 6.0 - 9.0 */\n    filter: grayscale(100%);\n}\n.fullscreen .header {\n  position: absolute;\n  font-size: 65px;\n  bottom: 0;\n  text-align: center;\n  width: 100%;\n  color: #fff;\n  text-shadow: 0px 0px 2px rgb(36, 29, 100);\n}\n\n.white {\n  background: #eeeeec;\n  //padding: 0 5%;\n  padding-bottom: 70px;\n  padding-left:20px;\n}\n.nobg {\n  background: none;\n  padding: 0 5%;\n  color: #fff;\n  text-shadow: 0px 0px 4px #000;\n}\n.semitrans {\n  background: rgba(255, 255, 255, .5);\n  padding: 0 5%;\n}\n.dark {\n  color: #eeeeec;\n  background: #1e1e61;\n  padding: 0 5%;\n}\n\n.nopadding {\n  padding: 0;\n  padding-top: 90px;\n  padding-bottom: 70px;\n}\n\n.floatleft {\n  float: left;\n  margin: 2%;\n}\n.floatright {\n  float: right;\n  margin: 2%;\n}\n.more {\n  text-align: center;\n  font-size: 17px;\n}\n.more a {\n  color: #aaa;\n  text-decoration: none;\n  cursor: pointer;\n}\n.more a:hover {\n  color: rgb(42, 51, 104);\n}\n</style>\n"],"sourceRoot":"src"}]}